Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/tensordot","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/tensordot","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/tensordot","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/tensordot","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/tensordot.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/tensordot.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/tensordot.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/tensordot.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[801,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[351,0,0,"-"],creation_functions:[352,0,0,"-"],data_type_functions:[358,0,0,"-"],data_types:[362,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[353,2,1,""],ones:[354,2,1,""],ones_like:[355,2,1,""],tril:[356,2,1,""],zeros:[357,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[358,1,1,""],finfo:[360,2,1,""],iinfo:[361,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[358,3,1,""],bits:[358,3,1,""],eps:[358,3,1,""],max:[358,3,1,""],min:[358,3,1,""],smallest_normal:[358,3,1,""]},"ivy.functional.backends.numpy.core":{device:[404,0,0,"-"],general:[406,0,0,"-"],gradients:[438,0,0,"-"],image:[443,0,0,"-"],linear_algebra:[447,0,0,"-"],logic:[451,0,0,"-"],math:[452,0,0,"-"],random:[454,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[405,1,1,""],clear_mem_on_dev:[404,2,1,""],dev:[404,2,1,""],dev_from_str:[404,2,1,""],dev_to_str:[404,2,1,""],gpu_is_available:[404,2,1,""],num_gpus:[404,2,1,""],to_dev:[404,2,1,""],tpu_is_available:[404,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[405,3,1,""],start:[405,3,1,""],stop:[405,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[406,2,1,""],arange:[407,2,1,""],argmin:[408,2,1,""],array:[409,2,1,""],asarray:[406,2,1,""],astype:[406,2,1,""],cast:[410,2,1,""],clip:[406,2,1,""],compile:[411,2,1,""],concatenate:[412,2,1,""],constant_pad:[406,2,1,""],container_types:[406,2,1,""],copy_array:[406,2,1,""],cumprod:[413,2,1,""],current_framework_str:[406,2,1,""],dtype:[414,2,1,""],dtype_bits:[415,2,1,""],dtype_from_str:[416,2,1,""],dtype_to_str:[417,2,1,""],floor:[406,2,1,""],floormod:[406,2,1,""],full:[418,2,1,""],gather:[419,2,1,""],gather_nd:[420,2,1,""],get_num_dims:[406,2,1,""],identity:[421,2,1,""],indices_where:[422,2,1,""],inplace_arrays_supported:[406,2,1,""],inplace_decrement:[423,2,1,""],inplace_increment:[424,2,1,""],inplace_update:[425,2,1,""],inplace_variables_supported:[406,2,1,""],is_array:[426,2,1,""],linear_resample:[427,2,1,""],linspace:[428,2,1,""],logspace:[429,2,1,""],matmul:[406,2,1,""],meshgrid:[406,2,1,""],multiprocessing:[406,2,1,""],one_hot:[430,2,1,""],round:[406,2,1,""],scatter_flat:[431,2,1,""],scatter_nd:[432,2,1,""],shape:[406,2,1,""],split:[433,2,1,""],squeeze:[434,2,1,""],to_list:[406,2,1,""],to_numpy:[406,2,1,""],to_scalar:[406,2,1,""],transpose:[435,2,1,""],unstack:[436,2,1,""],where:[406,2,1,""],zero_pad:[406,2,1,""],zeros_like:[437,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[439,2,1,""],is_variable:[440,2,1,""],stop_gradient:[441,2,1,""],variable:[442,2,1,""],variable_data:[438,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[444,2,1,""],gradient_image:[445,2,1,""],stack_images:[446,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[448,2,1,""],qr:[449,2,1,""],vector_to_skew_symmetric_matrix:[450,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[453,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[455,2,1,""],randint:[454,2,1,""],random_normal:[454,2,1,""],random_uniform:[454,2,1,""],seed:[454,2,1,""],shuffle:[454,2,1,""]},"ivy.functional.ivy":{array_api:[802,0,0,"-"],core:[853,0,0,"-"],nn:[1148,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[803,0,0,"-"],creation_functions:[804,0,0,"-"],data_type_functions:[810,0,0,"-"],data_types:[813,0,0,"-"],elementwise_functions:[814,0,0,"-"],function_and_method_signatures:[834,0,0,"-"],linear_algebra:[835,0,0,"-"],manipulation_functions:[841,0,0,"-"],searching_functions:[843,0,0,"-"],set_functions:[845,0,0,"-"],sorting_functions:[846,0,0,"-"],statistical_functions:[848,0,0,"-"],utility_functions:[850,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[803,4,1,""],nan:[803,4,1,""],pi:[803,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[805,2,1,""],ones:[806,2,1,""],ones_like:[807,2,1,""],tril:[808,2,1,""],zeros:[809,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[811,2,1,""],iinfo:[812,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[815,2,1,""],asinh:[816,2,1,""],bitwise_and:[817,2,1,""],ceil:[818,2,1,""],cos:[819,2,1,""],cosh:[820,2,1,""],isfinite:[821,2,1,""],isnan:[822,2,1,""],less:[823,2,1,""],less_equal:[824,2,1,""],log10:[825,2,1,""],log1p:[826,2,1,""],log2:[827,2,1,""],logical_not:[828,2,1,""],logical_or:[829,2,1,""],negative:[830,2,1,""],sin:[831,2,1,""],sqrt:[832,2,1,""],tanh:[833,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[836,2,1,""],slodget:[837,2,1,""],svd:[838,2,1,""],tensordot:[839,2,1,""],vector_norm:[840,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[842,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[844,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[847,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[849,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[851,2,1,""],any:[852,2,1,""]},"ivy.functional.ivy.core":{compilation:[854,0,0,"-"],device:[856,0,0,"-"],dtype:[906,0,0,"-"],general:[930,0,0,"-"],gradients:[1025,0,0,"-"],image:[1041,0,0,"-"],linalg:[1048,0,0,"-"],logic:[1055,0,0,"-"],math:[1058,0,0,"-"],meta:[1072,0,0,"-"],multi_node:[1076,0,0,"-"],nest:[1120,0,0,"-"],random:[1132,0,0,"-"],reductions:[1139,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[855,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[856,1,1,""],DevClonedItem:[858,1,1,""],DevClonedIter:[859,1,1,""],DevClonedNest:[860,1,1,""],DevDistItem:[861,1,1,""],DevDistIter:[862,1,1,""],DevDistNest:[863,1,1,""],DevManager:[856,1,1,""],DevMapper:[865,1,1,""],DevMapperMultiProc:[866,1,1,""],MultiDev:[856,1,1,""],MultiDevItem:[868,1,1,""],MultiDevIter:[869,1,1,""],MultiDevNest:[870,1,1,""],Profiler:[871,1,1,""],clear_mem_on_dev:[872,2,1,""],default_device:[873,2,1,""],dev:[874,2,1,""],dev_clone:[875,2,1,""],dev_clone_array:[876,2,1,""],dev_clone_iter:[877,2,1,""],dev_clone_nest:[878,2,1,""],dev_dist:[879,2,1,""],dev_dist_array:[880,2,1,""],dev_dist_iter:[881,2,1,""],dev_dist_nest:[882,2,1,""],dev_from_str:[883,2,1,""],dev_to_str:[884,2,1,""],dev_unify:[885,2,1,""],dev_unify_array:[886,2,1,""],dev_unify_iter:[887,2,1,""],dev_unify_nest:[888,2,1,""],dev_util:[889,2,1,""],get_all_arrays_on_dev:[890,2,1,""],gpu_is_available:[891,2,1,""],num_arrays_on_dev:[892,2,1,""],num_cpu_cores:[893,2,1,""],num_gpus:[894,2,1,""],percent_used_mem_on_dev:[895,2,1,""],print_all_arrays_on_dev:[896,2,1,""],set_default_device:[897,2,1,""],set_split_factor:[898,2,1,""],split_factor:[899,2,1,""],split_func_call:[900,2,1,""],to_dev:[901,2,1,""],total_mem_on_dev:[902,2,1,""],tpu_is_available:[903,2,1,""],unset_default_device:[904,2,1,""],used_mem_on_dev:[905,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[856,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[856,3,1,""],da_tune_step:[856,3,1,""],dim_size:[856,3,1,""],ds_tune_step:[856,3,1,""],map:[856,3,1,""],repeated_config_check:[856,3,1,""],tune_step:[856,3,1,""],tuned:[856,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[865,3,1,""],map:[865,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[866,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[856,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[868,3,1,""],items:[868,3,1,""],keys:[868,3,1,""],shape:[868,3,1,""],values:[868,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[869,3,1,""],at_dev:[869,3,1,""],at_devs:[869,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[870,3,1,""],at_dev:[870,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[871,3,1,""],start:[871,3,1,""],stop:[871,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[906,1,1,""],DefaultFloatDtype:[906,1,1,""],DefaultIntDtype:[906,1,1,""],astype:[906,2,1,""],cast:[910,2,1,""],closest_valid_dtype:[911,2,1,""],convert_dtype:[912,2,1,""],default_dtype:[913,2,1,""],default_float_dtype:[914,2,1,""],default_int_dtype:[915,2,1,""],dtype:[916,2,1,""],dtype_bits:[917,2,1,""],dtype_from_str:[918,2,1,""],dtype_to_str:[919,2,1,""],invalid_dtype:[920,2,1,""],is_float_dtype:[921,2,1,""],is_int_dtype:[922,2,1,""],set_default_dtype:[923,2,1,""],set_default_float_dtype:[924,2,1,""],set_default_int_dtype:[925,2,1,""],unset_default_dtype:[926,2,1,""],unset_default_float_dtype:[927,2,1,""],unset_default_int_dtype:[928,2,1,""],valid_dtype:[929,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[906,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[906,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[906,3,1,""]},"ivy.functional.ivy.core.general":{"default":[953,2,1,""],abs:[931,2,1,""],all_equal:[932,2,1,""],arange:[933,2,1,""],arg_names:[934,2,1,""],argmin:[935,2,1,""],array:[936,2,1,""],array_equal:[937,2,1,""],arrays_equal:[938,2,1,""],asarray:[930,2,1,""],assert_supports_inplace:[939,2,1,""],broadcast_to:[940,2,1,""],cache_fn:[941,2,1,""],clip:[942,2,1,""],clip_matrix_norm:[943,2,1,""],clip_vector_norm:[944,2,1,""],concatenate:[945,2,1,""],constant_pad:[946,2,1,""],container_types:[947,2,1,""],copy_array:[948,2,1,""],cross:[949,2,1,""],cumprod:[950,2,1,""],cumsum:[951,2,1,""],current_framework_str:[952,2,1,""],einops_rearrange:[954,2,1,""],einops_reduce:[955,2,1,""],einops_repeat:[956,2,1,""],equal:[957,2,1,""],exists:[958,2,1,""],expand_dims:[959,2,1,""],floor:[960,2,1,""],floormod:[961,2,1,""],fourier_encode:[962,2,1,""],full:[963,2,1,""],gather:[964,2,1,""],gather_nd:[965,2,1,""],get_all_arrays_in_memory:[966,2,1,""],get_min_base:[967,2,1,""],get_min_denominator:[968,2,1,""],get_num_dims:[969,2,1,""],get_referrers_recursive:[970,2,1,""],has_nans:[971,2,1,""],identity:[972,2,1,""],indices_where:[973,2,1,""],inplace_arrays_supported:[974,2,1,""],inplace_decrement:[975,2,1,""],inplace_increment:[976,2,1,""],inplace_update:[977,2,1,""],inplace_variables_supported:[978,2,1,""],is_array:[979,2,1,""],isinf:[980,2,1,""],linear_resample:[981,2,1,""],linspace:[982,2,1,""],logspace:[983,2,1,""],match_kwargs:[984,2,1,""],matmul:[985,2,1,""],maximum:[986,2,1,""],meshgrid:[987,2,1,""],minimum:[988,2,1,""],multiprocessing:[989,2,1,""],num_arrays_in_memory:[990,2,1,""],one_hot:[991,2,1,""],ones:[992,2,1,""],print_all_arrays_in_memory:[993,2,1,""],queue_timeout:[994,2,1,""],repeat:[995,2,1,""],reshape:[996,2,1,""],round:[997,2,1,""],scatter_flat:[998,2,1,""],scatter_nd:[999,2,1,""],set_min_base:[1000,2,1,""],set_min_denominator:[1001,2,1,""],set_queue_timeout:[1002,2,1,""],set_tmp_dir:[1003,2,1,""],shape:[1004,2,1,""],shape_to_tuple:[1005,2,1,""],split:[1006,2,1,""],squeeze:[1007,2,1,""],stable_divide:[1008,2,1,""],stable_pow:[1009,2,1,""],stack:[1010,2,1,""],supports_inplace:[1011,2,1,""],swapaxes:[1012,2,1,""],tile:[1013,2,1,""],tmp_dir:[1014,2,1,""],to_list:[1015,2,1,""],to_numpy:[1016,2,1,""],to_scalar:[1017,2,1,""],transpose:[1018,2,1,""],try_else_none:[1019,2,1,""],unstack:[1020,2,1,""],value_is_nan:[1021,2,1,""],where:[1022,2,1,""],zero_pad:[1023,2,1,""],zeros_like:[1024,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1025,1,1,""],adam_step:[1027,2,1,""],adam_update:[1028,2,1,""],execute_with_gradients:[1029,2,1,""],gradient_descent_update:[1030,2,1,""],is_variable:[1031,2,1,""],lamb_update:[1032,2,1,""],lars_update:[1033,2,1,""],optimizer_update:[1034,2,1,""],set_with_grads:[1035,2,1,""],stop_gradient:[1036,2,1,""],unset_with_grads:[1037,2,1,""],variable:[1038,2,1,""],variable_data:[1039,2,1,""],with_grads:[1040,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1025,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1042,2,1,""],float_img_to_uint8_img:[1043,2,1,""],gradient_image:[1044,2,1,""],random_crop:[1045,2,1,""],stack_images:[1046,2,1,""],uint8_img_to_float_img:[1047,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1049,2,1,""],inv:[1050,2,1,""],matrix_norm:[1051,2,1,""],pinv:[1052,2,1,""],qr:[1053,2,1,""],vector_to_skew_symmetric_matrix:[1054,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1056,2,1,""],logical_or:[1057,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1059,2,1,""],asin:[1060,2,1,""],atan2:[1062,2,1,""],atan:[1061,2,1,""],atanh:[1063,2,1,""],cosh:[1064,2,1,""],divide:[1065,2,1,""],erf:[1066,2,1,""],exp:[1067,2,1,""],log:[1068,2,1,""],sinh:[1069,2,1,""],tan:[1070,2,1,""],tanh:[1071,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1073,2,1,""],maml_step:[1074,2,1,""],reptile_step:[1075,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1076,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1121,2,1,""],copy_nest:[1122,2,1,""],index_nest:[1123,2,1,""],map:[1124,2,1,""],map_nest_at_index:[1125,2,1,""],map_nest_at_indices:[1126,2,1,""],multi_index_nest:[1127,2,1,""],nested_indices_where:[1128,2,1,""],nested_map:[1129,2,1,""],set_nest_at_index:[1130,2,1,""],set_nest_at_indices:[1131,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1133,2,1,""],randint:[1134,2,1,""],random_normal:[1135,2,1,""],random_uniform:[1136,2,1,""],seed:[1137,2,1,""],shuffle:[1138,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1140,2,1,""],reduce_max:[1141,2,1,""],reduce_mean:[1142,2,1,""],reduce_min:[1143,2,1,""],reduce_prod:[1144,2,1,""],reduce_std:[1145,2,1,""],reduce_sum:[1146,2,1,""],reduce_var:[1147,2,1,""]},"ivy.functional.ivy.nn":{activations:[1149,0,0,"-"],layers:[1157,0,0,"-"],losses:[1170,0,0,"-"],norms:[1174,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1150,2,1,""],leaky_relu:[1151,2,1,""],relu:[1152,2,1,""],sigmoid:[1153,2,1,""],softmax:[1154,2,1,""],softplus:[1155,2,1,""],tanh:[1156,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1158,2,1,""],conv1d_transpose:[1159,2,1,""],conv2d:[1160,2,1,""],conv2d_transpose:[1161,2,1,""],conv3d:[1162,2,1,""],conv3d_transpose:[1163,2,1,""],depthwise_conv2d:[1164,2,1,""],dropout:[1165,2,1,""],linear:[1166,2,1,""],lstm_update:[1167,2,1,""],multi_head_attention:[1168,2,1,""],scaled_dot_product_attention:[1169,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1171,2,1,""],cross_entropy:[1172,2,1,""],sparse_cross_entropy:[1173,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1175,2,1,""]},"ivy.stateful":{activations:[1179,0,0,"-"],converters:[1182,0,0,"-"],initializers:[1184,0,0,"-"],layers:[1193,0,0,"-"],module:[1205,0,0,"-"],norms:[1207,0,0,"-"],optimizers:[1209,0,0,"-"],sequential:[1215,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1180,1,1,""],GELU:[1181,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1180,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1181,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1183,2,1,""]},"ivy.stateful.initializers":{Constant:[1184,1,1,""],FirstLayerSiren:[1186,1,1,""],GlorotUniform:[1187,1,1,""],KaimingNormal:[1184,1,1,""],Ones:[1189,1,1,""],Siren:[1190,1,1,""],Uniform:[1184,1,1,""],Zeros:[1192,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1184,3,1,""],create_variables:[1184,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1186,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1187,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1184,3,1,""],create_variables:[1184,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1189,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1190,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1184,3,1,""],create_variables:[1184,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1192,3,1,""]},"ivy.stateful.layers":{Conv1D:[1194,1,1,""],Conv1DTranspose:[1195,1,1,""],Conv2D:[1196,1,1,""],Conv2DTranspose:[1197,1,1,""],Conv3D:[1198,1,1,""],Conv3DTranspose:[1199,1,1,""],DepthwiseConv2D:[1200,1,1,""],Dropout:[1201,1,1,""],LSTM:[1202,1,1,""],Linear:[1203,1,1,""],MultiHeadAttention:[1204,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1194,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1195,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1196,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1197,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1198,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1199,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1200,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1201,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1202,3,1,""],get_initial_state:[1202,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1203,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1204,3,1,""]},"ivy.stateful.module":{Module:[1206,1,1,""]},"ivy.stateful.module.Module":{__init__:[1206,3,1,""],build:[1206,3,1,""],build_mode:[1206,3,1,""],built:[1206,3,1,""],check_submod_rets:[1206,3,1,""],get_mod_key:[1206,3,1,""],mod_depth:[1206,3,1,""],mod_height:[1206,3,1,""],mod_with_top_mod_key_chain:[1206,3,1,""],save_weights:[1206,3,1,""],show_mod_in_top_mod:[1206,3,1,""],show_structure:[1206,3,1,""],show_v_in_top_v:[1206,3,1,""],sub_mods:[1206,3,1,""],track_submod_call_order:[1206,3,1,""],track_submod_rets:[1206,3,1,""],v_with_top_v_key_chains:[1206,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1208,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1208,3,1,""]},"ivy.stateful.optimizers":{Adam:[1210,1,1,""],LAMB:[1211,1,1,""],LARS:[1212,1,1,""],Optimizer:[1213,1,1,""],SGD:[1214,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1210,3,1,""],set_state:[1210,3,1,""],state:[1210,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1211,3,1,""],set_state:[1211,3,1,""],state:[1211,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1212,3,1,""],set_state:[1212,3,1,""],state:[1212,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1213,3,1,""],set_state:[1213,3,1,""],step:[1213,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1214,3,1,""],set_state:[1214,3,1,""],state:[1214,3,1,""]},"ivy.stateful.sequential":{Sequential:[1216,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1216,3,1,""]},"ivy.verbosity":{cprint:[1221,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1220,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1209,1210,1211],"02886":1176,"100":[1076,1176,1218],"141592653589793":803,"2021":1176,"2102":1176,"360":[1058,1070],"718281828459045":803,"754":[803,810,811,814,832],"999":[1025,1027,1028,1032,1209,1210,1211],"abstract":[856,871,1176,1209,1213],"boolean":[40,41,814,817,828,829,856,891,903,906,920,929,930,932,937,938,971,973,974,978,979,980,1011,1021,1025,1031,1055,1056,1057,1072,1073,1074,1076],"break":43,"case":[15,18,19,40,41,42,43,814,815,816,818,819,820,825,827,831,832,856,895,902,905,930,933,996,998,999,1048,1051,1053,1076,1120,1123,1127,1176,1193,1204,1205,1206,1209,1213,1222],"catch":[930,953],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,358,404,405,810,812,856,858,859,860,861,862,863,865,866,868,869,870,871,883,884,906,930,934,984,1025,1039,1076,1120,1122,1129,1170,1172,1173,1176,1179,1180,1181,1182,1183,1184,1186,1187,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1222],"default":[15,18,19,40,41,42,43,804,805,806,807,808,809,835,836,839,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,865,866,873,874,878,879,880,881,882,885,886,887,888,895,898,899,900,905,906,913,914,915,916,930,932,933,935,943,944,945,946,949,950,951,962,963,964,969,971,972,981,983,984,987,989,992,994,995,998,999,1002,1004,1006,1008,1009,1018,1020,1021,1025,1028,1030,1031,1032,1033,1034,1036,1040,1048,1051,1053,1072,1073,1074,1075,1076,1120,1121,1122,1124,1128,1129,1132,1133,1135,1136,1139,1141,1142,1143,1144,1145,1146,1147,1149,1150,1154,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],"final":[40,41,43,930,962,982,983,1076,1193,1204,1219],"float":[40,41,42,803,804,805,806,809,810,811,814,815,816,818,819,820,825,827,831,832,833,835,840,856,865,866,889,895,898,902,905,906,914,921,930,933,943,944,946,962,963,967,968,983,1000,1001,1002,1008,1009,1025,1027,1028,1030,1032,1033,1034,1041,1043,1047,1058,1065,1072,1073,1074,1075,1076,1132,1135,1136,1149,1151,1157,1165,1168,1169,1170,1171,1172,1173,1174,1175,1193,1201,1204,1207,1208,1209,1210,1211,1212,1213,1214],"function":[15,40,41,43,353,354,355,356,357,360,361,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,803,805,806,807,808,809,811,812,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,838,839,840,842,844,847,849,851,852,854,855,856,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1179,1180,1181,1209,1212,1213,1214,1218,1219,1222],"import":[43,1176,1219,1222],"int":[40,41,42,43,352,353,354,356,357,454,804,805,806,808,809,810,811,812,835,836,839,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,878,879,880,881,882,885,886,887,888,893,894,900,906,915,917,922,930,935,940,945,946,950,951,954,955,956,959,962,963,964,969,972,981,982,983,991,992,995,996,998,999,1004,1005,1006,1007,1010,1012,1013,1018,1020,1023,1025,1027,1028,1032,1041,1045,1046,1048,1051,1072,1073,1074,1075,1076,1120,1129,1132,1133,1134,1136,1137,1139,1141,1142,1143,1144,1145,1146,1147,1149,1154,1157,1158,1159,1160,1161,1162,1163,1164,1168,1170,1172,1173,1174,1175,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1207,1208],"long":[43,1157,1167],"new":[40,41,43,454,804,805,806,807,809,814,826,906,910,930,931,940,954,955,956,959,962,963,964,965,992,996,998,999,1000,1001,1008,1009,1010,1025,1028,1030,1032,1033,1034,1041,1043,1045,1047,1058,1063,1064,1069,1071,1076,1120,1130,1131,1132,1133,1174,1175,1176,1182,1183,1193,1203,1207,1208,1209,1210,1211,1212,1213,1214,1219,1222],"public":[930,947],"return":[15,16,17,18,19,40,41,42,43,454,804,805,806,807,808,809,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,835,836,837,838,839,840,843,844,846,847,848,849,850,851,852,854,855,856,865,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,892,894,895,899,900,901,902,903,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,929,930,931,932,933,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,969,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,995,996,997,998,999,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1036,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1120,1121,1122,1124,1128,1129,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1182,1183,1193,1202,1203,1209,1213,1218,1219,1222],"short":[43,1157,1167,1176,1222],"static":[40,41,854,855],"super":1076,"true":[40,41,42,406,411,438,441,454,455,814,821,822,828,829,835,838,840,843,844,846,847,850,851,852,854,855,856,930,932,939,941,958,962,971,973,1021,1022,1025,1028,1030,1031,1032,1033,1034,1036,1048,1051,1072,1073,1074,1075,1076,1120,1121,1128,1132,1133,1139,1141,1142,1143,1144,1145,1146,1147,1149,1150,1157,1165,1170,1171,1172,1173,1193,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214],"try":[40,41,930,1019,1076],"var":[40,41,1072,1073,1074,1222],"while":[40,41,42,814,828,829,1076],AND:[814,817,850,851,1055,1056],But:1222,For:[43,814,815,816,818,819,820,825,827,831,832,930,933,942,1010,1025,1031,1039,1048,1053,1058,1059,1176,1182,1183,1219,1222],Its:[1058,1061],NOT:[814,828],Not:803,One:[40,41,43,930,955,996,1132,1134,1222],Ones:[1176,1184],PRs:43,Such:[930,947],That:1219,The:[15,16,17,18,19,40,41,42,43,804,808,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,831,832,833,835,836,837,838,839,840,841,842,846,847,850,851,852,854,855,856,865,866,872,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,895,898,899,900,901,902,905,906,910,911,912,917,918,919,920,929,930,933,936,937,940,941,943,944,945,946,948,949,952,953,957,962,964,965,972,975,976,977,979,981,983,985,987,989,992,995,996,998,999,1000,1001,1002,1005,1006,1007,1008,1009,1010,1013,1021,1024,1025,1027,1028,1030,1032,1033,1034,1036,1039,1041,1043,1045,1047,1048,1051,1053,1058,1059,1060,1061,1065,1066,1067,1068,1070,1072,1073,1074,1075,1076,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1219,1222],There:[43,1176,1219],These:[43,1176],Use:43,Used:[1120,1121,1128,1205,1206],Using:[1176,1177,1222],With:[40,41,843,844,1048,1051,1139,1141,1142,1143,1144,1145,1146,1147,1176,1218,1222],__array__:[930,936],__call__:[1193,1204,1205,1206],__del__:1076,__dict__:[1076,1219],__enter__:1076,__exit__:1076,__getitem__:1076,__getstate__:1076,__init__:[40,41,42,43,59,60,84,218,358,359,404,405,486,617,856,857,864,865,866,867,868,869,870,871,906,907,908,909,1025,1026,1076,1080,1087,1176,1179,1180,1181,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1222],__iter__:1076,__len__:1076,__next__:1076,__repr__:1076,_assign_vari:1218,_axi:1076,_base:[1120,1121,1128],_compute_node_da_ratio:1076,_compute_node_strs_da:1076,_concat_unify_arrai:1076,_counter:1076,_cur_framework:[43,1076],_da_direct:1076,_da_directions_flip:1076,_da_step_tim:1076,_da_tim:1076,_da_tune_count:1076,_data:1076,_delta_da_dim_s:1076,_delta_sf:1076,_dict:1076,_dim_siz:1076,_first_da_tune_step:1076,_first_ns_tune_step:1076,_fn:1076,_forward:[1176,1218],_get_kalman_param:1222,_get_prior:1222,_get_some_model:1222,_index:[1120,1121,1128],_input_queu:1076,_length:1076,_max_depth:1076,_max_node_dim_step_ratio:1076,_max_node_dim_step_s:1076,_max_split_factor_step_s:1076,_mean_unify_arrai:1076,_min_bas:[930,1009,1174,1175,1207,1208],_min_denomin:[930,1008],_min_node_dim_s:1076,_min_sf_tune_step:1076,_min_unit_node_tune_step:1076,_model:1222,_node_mapp:1076,_node_percent_mem:1076,_node_str:1076,_node_str_da_ratio:1076,_node_strs_da:1076,_node_strs_kei:1076,_node_strs_n:1076,_node_util:1076,_ns_step_tim:1076,_ns_time:1076,_ns_tune_count:1076,_num_nod:1076,_num_work:1076,_observed_config:1076,_output_queu:1076,_paramet:1218,_percent_mem_inc_per_sf:1076,_percent_mem_inc_per_unit_da_dim:1076,_percent_util_inc_per_unit_da_dim:1076,_ret_fn:1076,_safety_factor:1076,_save_dir:1076,_shift_da_split:1076,_shift_n:1076,_slice:1076,_step:[1209,1213],_sum_unify_arrai:1076,_timeout:1076,_tune:1076,_tune_da:1076,_tune_n:1076,_tune_step:1076,_unit_da_tune_count:1076,_unroll_step:1222,_with_node_mappig:1076,_worker:1076,_worker_class:1076,_worker_fn:1076,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,856,865,871,1076,1205,1206,1209,1213],abil:1176,abl:[40,41],about:[810,811,812],abov:[43,804,808,835,836,1132,1134],above_height:[40,41],abs:[258,406,538,670,835,840,930,1076],absolut:[40,41,835,837,930,931],abstractmethod:1076,accept:[15,43,814,828,829,1176],access:[40,41,43,1219],accord:[40,41,810,811,930,946,964,998,999,1018,1023],accordingli:[835,840,850,851,852],accur:[59,358,404,405,856,868,869,870,871,906,1025,1184,1186,1187,1189,1190,1192],aco:[754,1058],acosh:[88,222,363,490,621,814],across:[40,41,856,865,866,875,876,878,879,880,881,882,888,898,899,930,935,937,938,1076,1120,1124],act:43,activ:[1150,1151,1152,1153,1154,1155,1156,1176,1180,1181],actual:1219,adam:[1025,1027,1028,1032,1176,1209,1211,1218],adam_step:1025,adam_upd:1025,adapt:[1025,1033,1209,1212],add:[40,41,43,1076,1170,1171,1172,1173,1174,1175,1176,1207,1208,1219],added:[43,930,1008,1009,1215,1216],adding:[43,930,940],addit:[40,41,43,930,954,955,956,1174,1175,1193,1203],addition:43,address:43,adher:43,adjac:[930,933],adopt:[43,930,947],affect:[930,933],affin:[1207,1208],after:[814,832,930,981,1025,1028,1029,1030,1032,1033,1034,1041,1042,1174,1175,1209,1210,1211,1212,1213,1214,1222],after_1:[930,946,1023],after_n:[930,946,1023],again:43,against:[40,41,843,844,1048,1051,1139,1141,1142,1143,1144,1145,1146,1147],agnost:[43,1176,1218,1219],aim:1222,algebra:1048,algorithm:[1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200,1222],align:[40,41,43,930,940],aliv:[856,890,892,896,930,966,990,993],all:[15,16,17,18,19,40,41,43,124,248,400,527,658,804,808,835,839,840,841,842,850,854,855,856,865,890,896,930,931,932,937,938,947,966,972,993,1007,1048,1053,1072,1073,1074,1075,1076,1120,1121,1122,1128,1129,1132,1133,1136,1139,1141,1142,1143,1144,1145,1146,1147,1157,1167,1176,1219,1222],all_depth:[40,41],all_equ:930,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1120,all_tru:[40,41],alloc:[43,804,808,856,1076],allow:[930,982,983,984,1205,1206],allow_dupl:[930,984],alon:[856,895,905,1076,1176],along:[40,41,43,454,835,840,841,842,843,844,846,847,848,849,850,851,852,856,879,880,881,882,885,886,887,888,900,930,945,950,951,964,981,982,983,995,1006,1010,1013,1020,1048,1051,1072,1073,1074,1075,1076,1132,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147],alongsid:[1218,1219],alpha:[1149,1151],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,814,818,856,1076],also:[40,41,43,930,933,1025,1028,1072,1073,1074,1075,1120,1121,1122,1128,1129,1157,1166,1176,1193,1203,1218],altern:1218,alwai:[40,41,43,1025,1031,1036],among:[40,41],amount:[856,902,1076,1176],angl:[814,820,833,1058,1059,1062],ani:[15,16,17,18,19,40,41,43,124,248,400,527,658,814,824,850,854,855,856,858,861,865,866,868,877,878,881,882,887,930,932,933,936,953,954,955,956,957,958,971,979,984,1008,1009,1025,1029,1076,1120,1121,1124,1128,1129,1130,1131,1132,1136,1176,1182,1183,1205,1206,1218,1219,1222],anoth:[40,41,43,906,912,1176],another_backend:43,anyth:[43,1222],anywai:43,apart:43,api:[1176,1177],appear:[43,930,959],append:[40,41,835,836,1076],appli:[15,18,19,40,41,835,838,930,954,955,956,1025,1032,1033,1055,1056,1057,1072,1073,1074,1120,1124,1127,1129,1149,1150,1151,1152,1153,1154,1155,1156,1157,1166,1168,1169,1174,1175,1176,1179,1180,1181,1207,1208],applic:[1120,1124,1129,1157,1168,1169,1176,1222],appropri:[843,844],approxim:[814,815,816,819,820,825,826,827,831,833,1149,1150],arang:[135,258,406,454,538,670,930,982,983],arbitrari:[40,41,856,885,886,888,1076],arc:[1058,1062],arcco:[1058,1059],arctan:[1058,1061],area:[814,815,816,1176],arg:[15,16,17,40,41,43,59,63,856,865,878,882,888,900,930,954,955,956,999,1076,1182,1183,1205,1206],arg_nam:930,arg_stateful_idx:[1205,1206],argmax:[117,242,393,520,651,843],argmin:[135,406,538,670,930],args_clon:1076,args_dist:1076,args_to_ivi:[15,1176],args_to_n:[15,1176],args_uni:1076,argsort:[120,245,396,523,654,846],argument:[15,16,17,18,19,40,41,42,43,59,63,854,855,856,865,866,878,882,888,930,933,934,941,953,984,999,1058,1059,1076,1120,1124,1182,1183,1205,1206],aris:[1176,1222],arithmet:[1139,1142,1145,1147],arithmetic_oper:[0,1,2],around:[40,41,42],arr:454,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,135,258,406,454,538,670,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,851,852,856,874,875,876,879,880,881,882,885,886,887,888,890,892,896,900,901,906,910,916,921,922,930,931,932,933,935,937,938,939,940,942,943,944,945,946,948,949,950,951,954,955,956,957,959,960,961,962,963,964,965,966,969,971,972,973,974,975,976,977,979,980,981,982,983,985,986,987,988,990,991,992,993,995,996,997,998,999,1004,1006,1007,1010,1011,1012,1013,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1027,1028,1031,1032,1036,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1076,1120,1122,1129,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1193,1201,1202,1204,1209,1213,1218,1219],arrang:[930,954],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,352,353,354,355,356,357,358,360,361,803,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,851,852],array_api_methods_to_test:43,array_equ:[258,670,930],array_lik:[454,930,936],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,930],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1176],arraywithgener:[22,1176],arraywithgradi:[24,1176],arraywithimag:[26,1176],arraywithlinalg:[28,1176],arraywithlog:[30,1176],arraywithmath:[32,1176],arraywithmeta:[34,1176],arraywithrandom:[36,1176],arraywithreduct:[38,1176],arriv:[40,41,42],articl:1176,arxiv:1176,as_arrai:[40,41,930,969,1004],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[404,406,414,856,874,906,913,914,915,916],as_tensor:406,as_vari:[40,41],as_zero:[40,41],asarrai:[406,930],ascend:[846,847],asin:[754,1058],asinh:[88,363,490,621,814],aspect:[1041,1046],assert:[40,41,930,939,1076],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:930,associ:[43,1048,1054],assum:[814,819,831,1219,1222],astyp:[406,906],asynchron:[40,41,42],at_dev:[40,42,856,869,870],at_kei:[40,41],at_key_chain:[40,41],at_nod:1076,atan2:[754,1058],atan:[754,1058],atanh:[754,1058],attent:[43,1157,1168,1169,1193,1204],attribut:[0,6,40,41,810,811,812,930,1024],audienc:[1176,1219],author:1176,automat:43,avail:[40,41,43,856,891,893,894,903,930,955,1076],averag:[1025,1027,1028,1032,1072,1073,1074,1139,1142],average_across_step:[1072,1073,1074],avoid:[43,856,1076,1219],axes:[40,41,43,406,435,447,448,835,839,840,841,842,843,844,848,849,850,851,852,856,900,930,935,946,959,1012,1018,1023,1048,1051,1076,1139,1141,1142,1143,1144,1145,1146,1147],axes_length:[40,41,930,954,955,956],axi:[40,41,406,408,412,413,419,427,428,429,433,434,436,835,836,840,841,842,843,844,846,847,848,849,850,851,852,856,858,861,868,879,880,881,882,885,886,887,888,900,930,935,945,946,949,950,951,959,964,981,982,983,995,1006,1007,1010,1012,1013,1020,1023,1076,1132,1138,1139,1141,1142,1143,1144,1145,1146,1147,1149,1154,1170,1172,1173],axis0:[40,41,930,1012],axis1:[40,41,835,836,930,1012],axis2:[835,836],back:[43,1205,1206,1209,1213],backend:[15,17,19,40,41,352,353,354,355,356,357,358,360,361,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,452,453,454,455,856,891,894,903,906,912,920,929,930,974,978,1025,1028,1030,1032,1033,1034,1039,1076,1176,1177,1182,1183,1209,1210,1211,1212,1213,1214,1218,1219,1222],backend_nam:43,background:[1176,1219],backprop:1222,backward:[850,851,852,1218],band:[930,962],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,358,404,405,406,429,814,825,826,827,856,858,859,860,861,862,863,865,866,868,869,870,871,906,930,967,983,1000,1009,1025,1076,1139,1140,1176,1179,1180,1181,1184,1186,1187,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1222],basi:43,batch:[40,41,835,838,840,856,898,899,930,962,972,1041,1045,1072,1073,1074,1075,1076,1157,1166,1174,1175,1207,1208],batch_shap:[406,421,930,972,991,1041,1042,1043,1044,1045,1046,1047,1048,1054,1132,1133,1157,1167,1168,1169,1193,1202],batch_siz:[454,455,1076,1132,1133,1157,1158,1159,1160,1161,1162,1163,1164],bayesian:1222,becaus:[43,930,933],becom:[43,930,942,1058,1062,1222],been:[930,954,955,956,1132,1133],befor:[40,41,43,856,900,1072,1073,1074,1076,1120,1129,1139,1141,1142,1143,1144,1145,1146,1147,1157,1168,1169,1222],before_1:[930,946,1023],before_n:[930,946,1023],begin:[1120,1121,1128,1219],behaviour:[43,1222],behind:[1025,1028,1030,1032,1033,1034,1176],being:[40,41,43,930,933,994,1002,1076],believ:43,belong:[40,41],below:[43,804,808,835,836,1176,1219,1222],below_depth:[40,41],benefit:1176,bernoul:[1157,1165,1193,1201],best:[43,930,984,1176],beta1:[1025,1027,1028,1032,1209,1210,1211],beta2:[1025,1027,1028,1032,1209,1210,1211],beta:[1174,1175],between:[40,41,42,810,811,930,933,1048,1053,1120,1124,1132,1134,1170,1172,1173,1209,1211],bia:[1157,1166,1167,1193,1194,1195,1196,1197,1198,1199,1200,1203],bias_initi:[1193,1194,1195,1196,1197,1198,1199,1200,1203],bilinear:[1041,1042],bilinear_resampl:[169,311,443,578,740,1041],bilinearli:[1041,1042],binari:[814,817,1170,1171],binary_cross_entropi:1170,bit:[358,810,811,812,906,917,1041,1043,1047,1176],bitwis:[814,817],bitwise_and:[88,222,363,490,621,814],bitwise_oper:[0,7,8],block:[1176,1219],bool:[15,18,19,40,41,42,43,814,821,822,823,824,828,829,835,838,840,843,844,846,847,848,849,850,851,852,854,855,856,874,887,891,895,900,903,905,906,916,930,932,937,938,950,953,957,958,962,969,971,979,984,1004,1006,1020,1021,1022,1025,1028,1029,1030,1031,1032,1033,1034,1036,1048,1051,1072,1073,1074,1075,1076,1120,1121,1122,1124,1128,1129,1132,1133,1139,1141,1142,1143,1144,1145,1146,1147,1149,1150,1157,1165,1182,1183,1193,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214],both:[43,930,949],bottom:1176,boundari:[40,41,1132,1136],branch:[43,854,855],brittl:43,broadcast:[40,41,814,817,823,824,829,835,840,843,844,850,851,852,930,940,957,986,987,988,995,1048,1051,1058,1062,1065,1139,1141,1142,1143,1144,1145,1146,1147],broadcast_to:[258,670,930],build:[1076,1176,1193,1204,1205,1206],build_mod:[1193,1204,1205,1206],builder:[43,1176],built:[856,930,933,1076,1193,1204,1205,1206],busi:43,bypass:1219,cach:[856,872,930,941],cache_fn:930,calcul:[40,41,42,814,815,816,819,820,825,826,827,831,832,833,1058,1065],call:[43,856,900,930,994,1002,1019,1025,1029,1076,1120,1121,1124,1128,1193,1204,1205,1206,1209,1213,1219,1222],callabl:[40,41,854,855,856,865,866,900,930,941,953,955,984,1019,1072,1073,1074,1075,1076,1120,1124,1125,1126,1128,1129,1157,1168],can:[43,856,898,899,900,930,996,1041,1043,1076,1176,1218,1219,1222],cancel_join_thread:1076,cannot:43,captur:1176,cast:[40,41,135,258,406,538,670,906,930,945,1041,1043,1047],catch_except:[930,953],categori:43,caus:43,ceil:[88,222,363,490,621,814,930,933],cell:[1157,1167,1193,1202],certain:[40,41,930,933,982,983],chain:[40,41,1072,1073,1074,1215,1216],chang:[43,856,930,996,1076,1120,1122,1129,1176,1218],channel:[930,962,1041,1043,1044,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203],check:[15,16,17,18,19,40,41,43,856,895,905,906,911,920,929,930,939,958,971,979,1011,1021,1025,1031,1076,1120,1121,1128,1176,1219],check_nest:[1120,1128],check_shap:[40,41],check_submod_ret:[1205,1206],check_typ:[40,41],choic:[1176,1219],choleski:[744,1048],choos:[814,828,829,930,1022,1048,1053,1058,1062,1176],choose_random_framework:59,chosen:[40,41,930,933,1022],chunk:[856,898,899,900,1076],chunk_siz:[856,900,1076],circl:[1058,1059,1060],clark:1176,clear:[43,856,872,1076],clear_framework_stack:59,clear_mem_on_dev:[404,662,856],click:1176,clip:[40,41,258,406,670,930,943,944,986,988,1176],clip_matrix_norm:930,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,930],clipped_delta:1076,clone:[40,41,856,875,876,877,878,1076],clone_arrai:1076,clone_it:1076,clone_nest:1076,clonedit:1076,cloneditem:1076,clonednest:1076,close:[43,1041,1046,1058,1060,1076,1222],closest:[814,818,906,911],closest_valid_dtyp:906,code:[40,41,42,43,454,1176,1177,1218,1219],codebas:[856,898,899,1076,1176,1219,1222],codomain:[814,815,816,819,820,825,827,831,832,833],colab:1176,collect:[15,40,41,404,406,438,443,447,451,452,454,854,856,906,930,1025,1041,1048,1055,1058,1076,1120,1132,1139,1149,1157,1170,1174,1179,1193,1207,1209],color:[40,41,42,1220,1221],column:[930,972],combin:[40,41,42,1041,1046,1176,1222],combined_batch_s:1076,come:1219,command:1176,comment:43,commit:1222,common:[40,41,43,1058,1062],common_key_chain:[40,41],commun:[43,1176,1219],communuti:43,compar:[40,41,846,847,930,932,937,938],comparison_oper:[0,9,10],compat:[814,817,823,824,829,835,839,840,850,851,852,930,957,996,1058,1065,1176,1222],compil:[258,406,670,1205,1206,1209,1210,1211,1212,1213,1214],compile_on_next_step:[1205,1206,1209,1210,1211,1212,1213,1214],complet:[40,41,43,1048,1053,1076],complex:[1219,1222],compliant:[814,828,829],compon:[930,949],composit:43,comput:[40,41,814,817,823,824,828,829,830,835,837,840,848,849,856,900,930,943,944,950,951,957,985,1025,1027,1028,1029,1030,1032,1033,1034,1036,1038,1041,1044,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1066,1067,1068,1070,1120,1124,1139,1140,1141,1142,1143,1144,1145,1146,1147,1157,1158,1159,1160,1161,1162,1163,1164,1166,1168,1170,1171,1172,1173],concat:[40,41,856,885,886,887,888,900,930,962,1076],concaten:[40,41,135,258,406,538,670,930,962,1076,1176],concatten:[40,41,856,885,886,887,888,900,1076],condit:[406,854,855,930,1022,1120,1128],conditon:[1120,1128],config:[40,41,1076],config_list:1076,configur:[40,41],conflict:43,conform:43,conjunct:1219,connect:[1193,1203,1204],consid:[40,41,814,828,829,1048,1053,1218,1222],consist:[40,41,856,888,1076,1139,1140,1205,1206,1219],constant:[856,865,866,930,946,1076,1120,1124,1170,1171,1172,1173,1174,1175,1184,1185,1189,1192,1205,1206,1207,1208,1219],constant_kwarg:1076,constant_pad:[258,406,538,670,930],constitu:[40,41],construct:[930,1013,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218],constructor:[40,41,42,930,934,1215,1216],consum:[856,1076],cont_feat_dim:[1157,1168],contaienr:[40,41],contain:[15,18,19,42,804,806,808,809,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,836,840,848,849,850,851,852,856,875,879,900,906,910,930,931,935,942,943,944,947,957,971,986,988,997,1008,1009,1025,1027,1028,1030,1032,1033,1034,1058,1065,1072,1073,1074,1075,1076,1132,1133,1139,1141,1142,1143,1145,1147,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[406,670,930],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[406,930,989,1157,1168,1193,1204],context_dim:[1193,1204],contextmanag:[59,60],continu:[43,1076,1219],contract:[40,41,835,839,1139,1140],contribut:[1176,1177],contributor:[43,1176],control:1176,conv1d:[200,341,468,793,1157,1176,1193],conv1d_transpos:[200,341,468,793,1157],conv1dtranspos:[1176,1193],conv2d:[200,341,468,603,793,1157,1176,1193],conv2d_transpos:[200,341,468,793,1157],conv2dtranspos:[1176,1193],conv3d:[200,341,468,603,793,1157,1176,1193],conv3d_transpos:[200,341,468,793,1157],conv3dtranspos:[1176,1193],convent:[40,41,1139,1140],conver:[856,872,883,895,902,905,1076],convers:[16,17,18,19,40,41,1076,1176],convert:[15,16,17,18,19,40,41,43,856,883,884,906,912,918,919,930,1005,1016,1017,1041,1043,1047,1048,1054,1076,1120,1122,1129,1176,1183],convert_dtyp:906,convolut:[1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200],cool:43,cooler:43,coordin:[930,987,1058,1059,1060,1062],copi:[40,41,43,454,930,948,1076,1120,1122],copy_arrai:[406,670,930],copy_nest:1120,core:[404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,452,453,454,455,854,855,856,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1176],corner:43,correct:[43,1176,1219],correctli:[40,41,43,843,844,1048,1051,1058,1062,1139,1141,1142,1143,1144,1145,1146,1147],correspond:[40,41,930,945,1132,1133],cos:[88,363,490,621,814,930,962,1058,1059,1070,1219],cosh:[88,363,490,621,754,814,1058],cosin:[814,815,819,820,1058,1059,1064],cost:[1025,1027,1028,1030,1032,1033,1034,1072,1073,1074,1075],cost_fn:[1072,1075],could:1222,count:[40,41,841,842,850,851,852,1076,1139,1144,1146],cours:43,cprint:1220,cpu:[40,41,43,856,893,895,901,902,905,930,933,936,964,965,972,982,983,991,992,998,999,1024,1076,1132,1133,1134,1135,1136,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216,1218,1219],creat:[40,41,804,805,806,807,809,856,865,866,930,933,936,963,964,965,972,982,983,991,992,998,999,1015,1024,1025,1038,1076,1132,1133,1134,1135,1136,1176,1177,1182,1183,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1222],create_if_abs:[40,41],create_vari:1184,creation:[40,41,42,43],creation_funct:[352,353,354,355,356,357,804,805,806,807,808,809],crop:[1041,1045],crop_siz:[1041,1045],cross:[258,670,930,1170,1171,1172,1173],cross_entropi:1170,cuda:[40,41,856,865,884,901,930,933,936,964,965,972,982,983,991,992,998,999,1024,1076,1132,1133,1134,1135,1136,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216],cumprod:[135,258,406,670,930],cumsum:[670,930],cumul:[930,950,951],current:[40,41,42,43,856,865,889,890,892,896,906,912,920,929,930,952,966,974,978,990,993,1076,1120,1121,1128,1176,1222],current_framework:59,current_framework_str:[406,670,930,1076],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1157,1158,1159,1160,1161,1162,1163],d_out:[1157,1158,1159,1160,1161,1162,1163],da_can_termin:1076,da_dim_s:[856,1076],da_direct:1076,da_tune_step:[856,1076],dai:[43,1222],daniel:1176,data:[40,41,42,43,804,805,806,807,808,809,811,812,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,831,832,833,835,836,839,840,841,842,846,847,850,851,852,856,858,859,860,861,862,863,868,869,870,884,906,910,911,912,916,917,918,919,920,921,922,929,930,933,936,957,963,972,979,992,996,1007,1011,1024,1025,1031,1039,1058,1065,1076,1157,1166,1176],data_format:[1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200],data_type_funct:[358,360,361,810,811,812],dataset:[40,41],datatyp:[40,41,906,911,921,922],dcdw:[1025,1027,1028,1030,1032,1033],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1025,1032,1033,1209,1211,1212],decay_lambda:[1025,1032,1033,1209,1211,1212],decid:[40,41,1222],decompos:[1048,1049,1053],decomposit:[835,838,1048,1049,1053],decrement:[930,975],dedic:[1025,1039,1182,1183],deep:[40,41,1176],deep_copi:[40,41],deeper:[856,878,882,888,1076,1120,1129,1176],deepli:[1120,1122],def:[43,60,84,218,359,486,617,857,864,867,907,908,909,1026,1076,1080,1087,1176,1185,1188,1191,1218,1219,1222],default_dev:43,default_devic:856,default_dtyp:[43,906],default_float_dtyp:906,default_int_dtyp:906,default_key_color:[40,41,42],default_nod:1076,default_rng:454,default_v:[930,953],defaultdevic:[856,857],defaultdtyp:[906,907],defaultfloatdtyp:[906,908],defaultintdtyp:[906,909],defin:[43,930,949,991,1024,1132,1134],definit:43,degre:[1058,1070],del:1076,delai:43,delet:43,delta:[1025,1027,1076],delta_dim_s:1076,delta_percent_mem:1076,delta_sf:1076,delta_util:1076,demo:1176,denomin:[930,961,968,1001,1008,1009,1174,1175,1207,1208],denot:43,dens:[1193,1203],depend:[814,815,816,819,820,825,826,827,831,833,835,838,846,847,930,1022,1176],depth:[40,41,406,430,856,878,882,888,930,970,991,1076,1120,1129,1205,1206],depth_cutoff:[40,41],depthwis:[1157,1164,1193,1200],depthwise_conv2d:[200,341,468,603,793,1157],depthwiseconv2d:[1176,1193],deriv:[804,807,1025,1027,1028,1030,1032,1033,1034,1120,1122,1129,1176,1205,1209,1213,1215],descend:[835,838,846,847],descent:[1025,1030,1209,1214],describ:[40,41,1139,1140],descript:[835,840],design:[1176,1177],desir:[40,41,856,901,906,910,930,933,936,972,973,992,1024,1041,1046,1076,1139,1141,1142,1143,1145,1147],desired_aspect_ratio:[443,446,1041,1046],desired_percent_increas:1076,detail:1222,detect:[40,41,1120,1121,1128],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,814,815,816,817,819,820,821,822,825,827,831,832,835,836,837,840,850,851,852,856,891,893,894,903,906,910,911,917,920,921,922,929,930,932,933,936,937,938,971,974,978,979,1011,1021,1025,1031,1058,1065,1072,1073,1074,1075,1076,1157,1168],dev:[40,41,42,43,128,252,352,355,404,406,407,409,419,420,421,428,429,430,431,432,437,454,455,531,662,804,807,856,859,860,862,863,865,866,869,870,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,892,895,896,897,898,899,900,901,902,905,930,933,936,964,965,972,982,983,991,992,998,999,1024,1025,1040,1132,1133,1134,1135,1136,1182,1183,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216],dev_clon:[40,41,856],dev_clone_arrai:856,dev_clone_it:856,dev_clone_nest:856,dev_dist:[40,41,856],dev_dist_arrai:856,dev_dist_it:856,dev_dist_nest:856,dev_from_str:[43,128,252,404,531,662,856],dev_mapp:856,dev_str:[40,41],dev_to_str:[128,252,404,531,662,856],dev_unifi:856,dev_unify_arrai:856,dev_unify_it:856,dev_unify_nest:856,dev_util:856,devclonedit:856,devcloneditem:856,devclonednest:856,devdistit:856,devdistitem:856,devdistnest:856,develop:[43,1176,1219,1222],deviat:[40,41,1132,1135,1139,1145,1174,1175,1207,1208],devic:[21,40,41,43,352,353,354,357,405,406,418,804,805,806,807,808,809,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,930,933,936,963,964,965,972,982,983,991,992,998,999,1024,1025,1040,1132,1133,1134,1135,1136,1176,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216],devmanag:[856,864],devmapp:[856,866],devmappermultiproc:856,diag:[835,838],diagon:[110,235,385,512,643,804,808,835,930,972],dict:[15,16,17,18,19,40,41,42,856,858,861,865,866,868,878,879,880,881,882,930,954,955,956,984,1072,1073,1074,1076,1120,1122,1123,1124,1127,1129,1182,1183],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,810,811,856,875,876,879,880,1048,1053,1076,1157,1166,1176,1219,1222],differenti:[1176,1219],dilat:[1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200],dim:[40,41,835,838,930,991,1041,1042,1046,1076,1193,1204],dim_siz:[40,41,856,1076],dimens:[40,41,42,804,808,835,836,838,840,841,842,843,844,850,851,852,856,887,930,940,945,949,954,955,956,959,962,969,981,991,995,996,1006,1007,1010,1018,1020,1041,1045,1048,1051,1072,1073,1074,1075,1076,1132,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1154,1157,1158,1159,1160,1161,1162,1163,1164,1167,1170,1172,1173,1193,1194,1195,1196,1197,1198,1199,1200,1203,1204],dimension:[40,41,454,835,838,840,850,851,852,930,1006,1007],direct:1076,directli:[43,1120,1129,1219,1222],directori:[930,1003,1014],discord:43,discret:[1170,1172],discuss:43,disk:[40,41,1041,1043],distanc:[930,933],distribut:[40,41,856,875,879,880,881,882,1076,1132,1133,1134,1135,1136,1157,1165,1193,1201,1205,1206],distribute_nest:1076,distributedarrai:[40,41],distrubt:[1170,1172],dive:[1176,1219],divid:[40,41,930,1006,1008,1058],dividend:[1058,1065],divis:[930,961,968,1001,1008,1009,1025,1027,1028,1032,1058,1065,1209,1210,1211],divisor:[1025,1027,1028,1032,1058,1065,1209,1210,1211],doc:1176,docstr:43,document:43,doe:[40,41,43,930,933,1006,1218],doesn:[1048,1053,1176],doing:43,domain:[814,815,816,819,820,825,827,831,832,833,1058,1059],don:[43,1176],done:43,door:1222,dot:[1048,1050,1157,1168,1169,1193,1204],down:1218,downscal:[930,943,944],drag:[1176,1222],draw:[1132,1133,1135,1136],drawn:[1132,1133,1134,1135,1136],drop:[1176,1222],dropout:[1157,1176,1193,1204],dropout_r:[1193,1204],ds_tune_step:856,dtype:[40,41,43,135,258,352,353,354,355,357,358,360,361,406,407,409,410,418,421,437,538,670,804,805,806,807,809,810,811,812,843,844,910,911,912,913,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,933,936,963,972,991,992,1024],dtype_bit:[135,258,406,538,670,906],dtype_from_str:[43,135,258,406,538,670,906],dtype_in:[406,415,416,417,906,912,917,918,919,920,921,922,929],dtype_to_str:[135,258,406,538,670,906],duplic:[40,41,43],dure:[40,41,43,854,855,930,1019,1025,1027,1028,1032,1072,1073,1074,1075,1205,1206,1209,1210,1211,1213],dynam:[43,406,411,854,855],each:[40,41,42,43,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,838,856,865,866,875,876,877,878,879,880,881,887,899,900,930,931,932,946,957,995,1006,1010,1013,1023,1025,1028,1030,1032,1033,1034,1041,1044,1058,1060,1065,1067,1068,1076,1120,1124,1132,1133,1139,1140,1157,1158,1159,1160,1161,1162,1163,1164,1165,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1219],eager:1219,easi:1222,easili:1176,econom:1222,ecosystem:1176,edg:[930,942,946,1023],effect:[1025,1034],effective_grad:[1025,1034],effici:1222,einop:[40,41,930,954,955,956],einops_rearrang:[40,41,930],einops_reduc:[40,41,930],einops_repeat:[40,41,930],einstein:[40,41,1139,1140],einsum:[40,41,186,329,456,593,773,1139],either:[40,41,43,814,825,827,831,930,953,984,987,989,1072,1073,1074,1075,1076,1193,1204,1205,1206,1219],eleg:1076,element:[40,41,454,804,808,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,841,842,848,849,850,851,852,856,877,881,887,906,910,930,931,933,935,937,938,942,943,944,950,951,957,960,961,972,973,986,988,995,997,1006,1017,1022,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1076,1139,1140,1142,1144,1146,1149,1150,1151,1152,1153,1154,1155,1156,1157,1165,1193,1201],elementwis:[40,41],elementwise_affin:[1207,1208],elementwise_funct:[814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833],elemtn:[1132,1133],elif:1076,els:[43,930,939,953,958,1076],elsewher:[930,1022],emphas:1176,empti:[40,41,77,211,352,479,610,804,850,851,852,1048,1053,1076],enabl:[40,41,42,43,1176],encapsul:[810,812],encod:[930,962,1041,1043],end:[930,933,1176,1219],engag:43,ensur:43,entir:[40,41,850,851,852,856,900,1076,1176,1193,1202],entri:[40,41,930,982,983,1006,1007],entropi:[1170,1171,1172,1173],enumer:1076,environ:1176,eps:[358,810,811],epsilon:[1025,1027,1028,1032,1170,1171,1172,1173,1174,1175,1207,1208,1209,1210,1211],equal:[40,41,88,363,490,621,814,821,835,836,846,847,930,932,937,938,946,1006,1023,1058,1070,1132,1136],equality_matrix:[930,932],equat:[40,41,1139,1140],equival:[814,828,829,835,840,930,933,1058,1070],erf:[452,754,1058],error:[40,41,43,856,930,1007,1058,1066,1076,1149,1150,1205,1206,1209,1213],etc:[40,41,43,856,901,930,933,936,964,965,972,982,983,991,992,998,999,1024,1076,1132,1133,1134,1135,1136,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216,1222],euclidean:[835,840],euler:803,evalu:[40,41,814,825,826,827,830,850,851,852,930,987,1120,1121,1128],even:[43,1222],evenli:[40,41,930,933,982,983,1006],everi:[43,930,932,1222],exact:[40,41],exampl:[43,854,855,930,942,1010,1048,1053,1176,1218,1219,1222],example_input:[406,411,854,855],exc_tb:1076,exc_typ:1076,exc_val:1076,exce:[930,988],except:[40,41,44,47,850,851,852,930,933,939,945,953,1019,1076],excess_s:1076,excit:[1176,1219],exclud:[59,61,930,933,1132,1136],exclus:[40,41,406,413,426,438,440,930,950,979,1025,1031,1132,1134],execut:[43,930,1019,1219],execute_with_gradi:[166,306,438,573,734,1025,1176,1218],exist:[40,41,930,953,1076,1176,1209,1213,1222],exp:[754,1058],expand:[40,41,930,959,962],expand_dim:[40,41,258,670,930,1076],expect:[930,934],explain:[43,1219],explicitli:[43,1193,1202,1204,1205,1206,1219],expon:[930,1009],exponenti:[1058,1066,1067],expos:[930,936,947],express:[814,819,831,930,987],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1025,1029],eye:[1048,1050],fabian:1176,fabio:1176,factor:[835,838,856,865,898,899,900,1025,1027,1028,1032,1033,1076,1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200,1209,1210,1211,1212],fail:43,falck:1176,fall:[1205,1206,1209,1213],fallback_to_non_compil:[1205,1206,1209,1213],fals:[15,18,19,40,41,42,59,66,67,68,69,70,404,406,413,414,426,433,436,438,439,440,447,448,814,821,822,828,829,835,840,843,844,846,847,848,849,850,851,852,856,874,887,895,900,905,906,913,914,915,916,930,932,950,953,958,962,969,979,984,1004,1006,1020,1022,1025,1028,1029,1030,1031,1032,1033,1034,1048,1051,1072,1073,1074,1075,1076,1120,1121,1122,1124,1128,1129,1139,1141,1142,1143,1144,1145,1146,1147,1182,1183,1205,1206,1209,1210,1211,1212,1213,1214],fan_in:1184,fan_mod:1184,fan_out:1184,far:[1120,1121,1128,1218],faster:[854,855],favourit:[1176,1218],feasibl:1222,feat_dim:[1157,1168,1169],fed:[856,900,1076],feed:[856,900,1076],few:43,field:1222,file:[40,41,43,930,1003,1014,1205,1206],filepath:[40,41],fill:[40,41,804,805,806,807,809,930,963,992,1132,1134],fill_valu:[406,418,930,963],filter:[1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200,1222],filter_s:[1193,1194,1195],filter_shap:[1193,1196,1197,1198,1199,1200],find:[40,41,43,1222],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,217,218,358,359,485,486,616,617,810],finish:[1176,1222],finit:[814,821],first:[40,41,43,454,814,817,823,824,829,835,836,838,839,854,855,856,887,930,937,945,949,957,982,983,1010,1012,1025,1029,1072,1073,1074,1075,1076,1120,1121,1128,1132,1138,1139,1144,1146,1193,1204,1205,1206,1209,1213,1219,1222],firstlayersiren:[1176,1184],firstli:[1219,1222],fist:[856,900,1076],fit:[40,41,404,406,438,443,447,451,452,454,930,995,1041,1046],fix:43,fkt:1222,flag:[40,41,43,1025,1031],flat:[40,41,930,995,998],flat_list:[40,41],flatten:[40,41,835,840,843,844,930,962,995,1139,1141,1142,1143,1145,1147],flatten_key_chain:[40,41,1205,1206],flexibl:[1176,1219],flip:[40,41,115,240,391,518,649,841],float32:[43,406,421,906,910,918,919,930,933,936,972,992,1024],float_dtyp:[906,914,924],float_img_to_uint8_img:1041,floor:[258,406,670,930,961,1076],floormod:[258,406,670,930],fluid:1222,folder:[43,1176],follow:[40,41,43,810,812,835,840,856,900,930,975,976,977,1008,1009,1025,1028,1030,1032,1033,1034,1076,1120,1124,1129,1157,1168,1169,1176,1193,1203,1209,1213],followng:[810,811],fomaml_step:1072,forget:[1025,1027,1028,1032,1209,1210,1211],fork:[930,989,1176,1177],forkserv:[930,989,1076],form:[15,16,17,18,19,40,41,804,808,835,836,930,936,1025,1028,1030,1032,1033,1034,1120,1122,1129,1157],format:[40,41,43,856,874,906,910,912,916,930,933,936,972,992,1024,1076,1139,1140,1176,1218,1219],format_fn:[40,41],format_key_chain:[40,41],forward:[1205,1206,1209,1213,1218],found:[40,41,42],fourier:[930,962],fourier_encod:930,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,116,118,121,123,125,126,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,170,171,172,174,175,176,180,181,182,183,184,185,187,188,189,190,191,192,193,196,198,199,201,202,203,204,205,206,207,212,213,214,215,216,218,219,220,223,224,225,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,312,313,314,316,317,318,319,321,322,325,326,327,328,330,331,332,333,334,335,336,337,340,342,343,344,345,346,347,348,353,354,355,356,357,359,360,361,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,386,387,388,389,390,392,394,397,399,401,402,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,441,442,444,445,446,448,449,450,453,455,457,458,459,460,461,462,463,466,467,469,470,471,472,473,474,475,480,481,482,483,484,486,487,488,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,513,514,515,516,517,519,521,524,526,528,529,532,533,534,535,536,537,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,574,575,576,577,579,580,581,583,584,585,589,590,591,592,594,595,596,597,598,599,600,604,605,606,611,612,613,614,615,617,618,619,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,644,645,646,647,648,650,652,655,657,659,660,663,664,665,666,667,668,669,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,735,736,737,738,739,741,742,743,745,746,747,748,749,750,752,753,755,756,757,758,759,760,761,762,763,764,765,767,768,769,770,771,772,774,775,776,777,778,779,780,783,784,785,786,787,788,789,791,792,794,795,796,797,798,799,800,805,806,807,808,809,811,812,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,836,837,838,839,840,842,844,847,848,849,851,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1056,1057,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1172,1173,1175,1176,1180,1181,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1221,1222],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1076,framewrk:[930,989],free:43,freed:43,freeli:43,frequenc:[930,962],from:[40,41,42,43,804,807,814,832,835,836,841,842,848,849,850,851,852,856,865,866,900,906,912,930,953,964,965,972,996,1007,1015,1022,1025,1028,1032,1041,1045,1048,1053,1072,1073,1074,1075,1076,1120,1122,1129,1132,1133,1134,1135,1136,1139,1144,1146,1157,1165,1168,1176,1182,1183,1193,1201,1204,1209,1213,1218,1219],from_cal:[1205,1206],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,135,258,406,538,670,810,811,930,1048,1053,1176],full_matric:[835,838],fulli:[43,1176,1193,1203,1204,1218],func:[40,41,406,411,438,439,854,855,856,900,930,941,1025,1029,1076],further:[43,1222],furthermor:1222,futur:1222,gain:1184,gamma:[1174,1175],gather:[40,41,135,258,406,538,670,930,965],gather_nd:[40,41,135,258,406,538,670,930],gauss:[1058,1066],gaussian:[1149,1150],geglu:[1176,1179],gelu:[339,465,782,1149,1176,1179],gener:[23,40,41,43,404,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,454,854,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1031,1132,1134,1136,1137,1176,1209,1213],geometr:[930,962],get:[40,41,43,810,811,812,856,865,866,874,889,890,895,899,902,905,906,916,917,930,934,966,967,968,994,1076,1176,1193,1202,1222],get_all_arrays_in_memori:930,get_all_arrays_on_dev:856,get_framework:59,get_initial_st:[1193,1202],get_min_bas:930,get_min_denomin:930,get_mod_kei:[1205,1206],get_num_dim:[406,670,930],get_referrers_recurs:930,getfullargspec:1076,gist:1176,give:[43,930,996,1219],given:[40,41,43,804,805,841,842,856,889,895,898,899,900,902,905,906,910,930,933,936,942,950,951,965,982,983,992,995,998,999,1006,1013,1018,1020,1024,1025,1027,1028,1030,1032,1033,1034,1048,1050,1054,1058,1059,1076,1120,1125,1126,1132,1135,1136,1138,1139,1142,1144,1145,1146,1147,1157,1158,1159,1160,1161,1162,1163,1164,1182,1183,1222],global:[40,41,42,856,865,866,873,898,899,900,906,913,914,915,930,952,967,968,994,1000,1001,1002,1008,1009,1025,1040,1076,1174,1175,1207,1208],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1176,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203],good:43,googl:1176,got:[43,1176],gpu0:43,gpu2:43,gpu:[856,891,894,1076],gpu_is_avail:[404,856,1076],grad:[1176,1209,1213,1218],gradient:[25,40,41,439,440,441,442,856,900,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1044,1072,1073,1074,1075,1176,1209,1210,1211,1212,1213,1214,1218,1222],gradient_descent_upd:[1025,1072,1073,1074,1075],gradient_imag:[169,311,443,578,740,1041],gradienttrack:[1025,1026],graph:[1025,1028,1030,1032,1033,1034,1205,1206],greater:[40,41,930,933,960,1007,1132,1136],green:[40,41,42,1220,1221],grid:[930,987],group:[1041,1046],guid:[43,1176,1177,1222],gym:1176,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1222,half:[930,933,1076,1132,1136],hand:1176,handl:[40,41,42,43,854,855,856,872,874,883,884,895,902,905,1025,1028,1030,1032,1033,1034,1076,1209,1210,1211,1212,1213,1214],happen:43,has:[40,41,43,835,837,843,844,930,1010,1048,1053,1058,1061],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,930],hasattr:1076,have:[40,41,43,804,805,806,807,808,809,810,811,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,831,832,833,835,836,838,839,840,841,842,843,844,846,847,850,851,852,930,945,949,954,955,956,957,963,1010,1025,1031,1039,1058,1065,1076,1176,1218,1219],haven:43,hdf5:[40,41,1205,1206],head:[1157,1168,1193,1204],head_dim:[1193,1204],height:[1041,1046],height_cutoff:[40,41],help:[43,59,358,404,405,856,868,869,870,871,906,1025,1176,1184,1186,1187,1189,1190,1192],here:[43,1176],hidden:[1157,1167,1193,1202],hierarch:[930,947],hierarchi:[40,41],high:[40,41,454,1132,1134,1136],higher:[835,838,1025,1028,1030,1032,1033,1034],highest:[1132,1134],highest_util:1076,highest_util_nod:1076,highli:1176,highlight:1222,hint:43,hkt:1222,hold:[906,910,930,933,936,998,999],host:1176,hot:[930,991],how:[1176,1193,1204,1205,1206,1219,1222],howev:[43,1219],http:1222,hyperbol:[814,815,816,820,833,1058,1063,1064,1069,1071,1149,1156],hypothet:[43,1222],icon:1176,idea:1176,ident:[40,41,43,135,258,406,538,670,930],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[803,810,811,814,832],if_exist:[40,41],ignor:[40,41,1209,1213],ignore_key_error:[40,41],ignore_miss:[1209,1213],ignore_non:[40,41],iii:43,iinfo:[83,217,358,485,616,810],imag:[27,444,445,446,930,981,1042,1043,1044,1045,1046,1047,1157,1158,1159,1160,1161,1163,1164,1176,1222],image_dim:[1041,1045],imkkhk:1222,immedi:[1176,1219,1222],implement:[43,814,815,816,819,820,825,826,827,831,833,846,847,1176,1219,1222],in_featur:[1157,1166],inadvert:43,includ:[40,41,43,835,840,850,851,852,930,933,971,1008,1009,1021,1120,1121,1132,1136,1193,1203,1204,1207,1208,1218],include_deriv:[1120,1122,1129],include_empti:[40,41],include_inf:[40,41,930,971,1021],include_nest:[1120,1121],include_self:[40,41],inclus:[43,1132,1134],incom:[1157,1166],increas:[856,878,882,888,930,946,959,1023,1076,1120,1129],increasingli:1222,increment:[930,976,1076],inde:1176,indent:[40,41,42],independ:[1132,1133],index:[40,41,406,454,843,844,846,847,930,935,964,965,987,1007,1010,1120,1123,1125,1126,1127,1130],index_nest:1120,indic:[40,41,406,419,420,430,431,432,835,840,843,844,846,847,930,935,964,965,973,991,998,999,1120,1121,1123,1125,1126,1127,1128,1130,1131,1132,1133,1149,1154,1157,1158,1159,1160,1161,1162,1163,1164,1174,1175,1193,1194,1195,1196,1197,1198,1199,1200,1205,1206],indices_wher:[135,258,406,670,930],indistinguish:[814,832],inevit:1222,inf:[40,41,835,840,930,971,980,1021,1058,1061],infer:[804,807,848,849,854,855,930,969,972,996,1004,1041,1045,1048,1053,1219,1222],infin:[814,815,816,818,819,820,821,825,827,831,832,833,835,840,850,851,852,930,980],infinit:[814,832],inform:[810,811,812,1025,1036],init_c:[1157,1167],init_h:[1157,1167],init_on_first_step:[1209,1213],initi:[40,41,42,43,59,358,404,405,856,868,869,870,871,906,1025,1076,1157,1167,1176,1186,1187,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1209,1213],initialz:[1205,1206],inner:[1072,1073,1074,1075],inner_batch_fn:[1072,1073,1074],inner_batch_shap:[1157,1166],inner_cost_fn:[1072,1073,1074],inner_grad_step:[1072,1073,1074,1075],inner_learning_r:[1072,1073,1074,1075],inner_optimization_step:[1072,1073,1074,1075],inner_v:[1072,1073,1074],innermost:[804,808,835,836],inp:1076,inplac:[40,41,930,939,974,978,1011,1025,1028,1030,1032,1033,1034,1182,1183,1209,1210,1211,1212,1213,1214],inplace_arrays_support:[406,930],inplace_decr:[135,258,406,538,670,930],inplace_incr:[135,258,406,538,670,930],inplace_oper:[0,11,12],inplace_upd:[40,41,135,258,406,538,670,930,1182,1183],inplace_variables_support:[406,930],input:[15,18,19,40,41,42,43,804,807,808,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,836,838,839,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,865,866,873,874,875,878,879,882,888,900,901,906,910,911,913,914,915,916,917,921,922,930,931,932,935,937,938,939,940,942,943,944,945,946,948,950,951,953,954,955,956,957,958,959,960,961,962,969,971,972,973,975,976,977,979,980,981,985,986,987,988,995,997,1004,1005,1007,1010,1011,1012,1013,1015,1016,1017,1018,1020,1021,1023,1025,1029,1031,1036,1040,1041,1042,1043,1044,1045,1047,1048,1051,1053,1055,1056,1057,1058,1061,1063,1064,1065,1069,1070,1071,1072,1073,1074,1075,1076,1132,1133,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1174,1175,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1207,1208,1219],input_ax:[856,900,1076],input_channel:[1193,1194,1195,1196,1197,1198,1199,1202,1203],input_queu:1076,inputs_split:1076,insert:[843,844,930,959],insid:43,inspect:1076,inspir:1222,instal:1176,instanc:[15,16,17,18,19,40,41,43,454,856,865,1076,1182,1183,1215,1216],instead:[40,41,43,454,1139,1141,1142,1143,1144,1145,1146,1147,1222],int32:43,int64:[906,910,930,933,936,972,992,1024],int_dtyp:[906,915,925],integ:[40,41,454,810,812,814,817,818,835,840,850,851,852,906,922,930,933,960,997,1006,1132,1134,1137],integr:1176,intend:43,inter:1176,interact:1176,interchang:[40,41,930,1012],interest:1176,interfac:[930,936,1219],intermedi:[40,41],intern:[40,41,856,1025,1039,1076,1120,1121,1128,1129,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1215,1216],interpol:[930,981],intersect:[1058,1059],interv:[40,41,850,851,852,930,933,942,982,983,1058,1060,1132,1136],introduc:1222,inv:[744,1048,1222],invalid:[850,851,852],invalid_dtyp:906,invers:[814,815,816,1048,1050,1052,1058,1059,1060,1061,1063,1222],invert:[1048,1050,1052],invest:1222,investig:43,invoc:[854,855],irrespect:1176,is_al:1076,is_arrai:[135,258,406,538,670,930,1076],is_float_dtyp:906,is_int_dtyp:906,is_mean:1076,is_sum:1076,is_vari:[166,306,438,573,734,1025],isfinit:[88,222,363,490,621,814],isinf:[258,538,670,930],isinst:1076,isnan:[88,222,363,490,621,814],isnumer:1076,issu:[1176,1177],issue_numb:43,item:[15,19,40,41,856,865,866,868,875,877,879,881,887,906,913,930,947,970,1008,1009,1076,1120,1124,1125,1126,1129,1130,1131,1176,1205,1206,1218],iter:[15,16,17,18,19,40,41,42,854,855,856,859,860,862,863,865,866,869,870,877,879,880,881,882,887,900,930,932,940,945,946,972,987,992,995,996,999,1004,1006,1010,1013,1018,1023,1076,1120,1121,1122,1124,1128,1129],iterbal:[856,877,881,887,1076],its:[454,856,900,930,972,996,1012,1018,1076,1176],itself:[1120,1129],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,352,353,354,355,356,357,358,360,361,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,803,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1186,1187,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1220,1221],ivy_backend:[40,41],ivy_bay:1222,ivy_test:43,ivyfcmodel:1218,ivyh:[40,41,42],ivymodul:[197,790],jame:1176,jax:[43,1025,1031,1176,1222],jax_concat:1176,jnp:1176,join:[40,41,930,945,1010,1076],journal:1176,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1176,1193,1202,1222],kaimingnorm:[1184,1188],kalman:1222,kalman_filt:1222,kalman_filter_step:1222,kalman_filter_upd:1222,keep:[40,41,856,901,930,1020,1076,1176,1177,1222],keep_inner_v:[1072,1073,1074],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1072,1073,1074],keepdim:[40,41,406,436,447,448,835,840,843,844,848,849,850,851,852,930,1020,1048,1051,1139,1141,1142,1143,1144,1145,1146,1147],kei:[15,16,17,40,41,42,43,856,868,930,947,1072,1073,1074,1076,1120,1123,1127,1157,1168,1169,1176,1182,1183,1193,1204,1209,1213],kept:[40,41,42,1072,1073,1074],kera:1222,kernel:[1157,1167],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,856,865,866,878,882,888,930,934,954,955,956,984,1076,1120,1124,1205,1206],keyword_color_dict:[40,41,42],kind:[810,811,812,1222],kwarg:[15,16,17,40,41,42,59,63,856,865,878,882,888,930,984,1076,1182,1183,1205,1206],kwarg_stateful_idx:[1205,1206],kwargs_clon:1076,kwargs_dist:1076,kwargs_uni:1076,label:[43,1170,1171,1172,1173],lamb:[1025,1032,1176,1209],lamb_upd:1025,lambda:[1076,1209,1212,1214,1218],lar:[1025,1032,1033,1176,1209],larger:[810,811,930,942],largest:[40,41,810,811,812,930,960],lars_upd:1025,last:[40,41,835,836,838,841,842,846,847,850,851,852,930,933,949,981,1006,1010,1048,1051,1139,1144,1146,1149,1154,1157,1167,1193,1203],later:[40,41,930,941],latest:[1193,1202],layer:[1025,1028,1030,1032,1034,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1174,1175,1176,1184,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216,1222],layer_norm:1174,layernorm:[1176,1207],layerwis:[1025,1033,1209,1212],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1120,1121,1128],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1149,1150,1151],leaky_relu:[782,1149],learn:[848,849,1025,1028,1030,1032,1033,1034,1048,1053,1072,1073,1074,1075,1132,1138,1176,1209,1210,1211,1212,1213,1214,1219,1222],learnabl:[1174,1175,1207,1208],least:43,leav:[15,18,19,40,41,1120,1121,1122,1128,1129],left:[40,41,43,843,844,1048,1051,1139,1141,1142,1143,1144,1145,1146,1147,1176],leftmost:[40,41],len:1076,length:[40,41,42,930,933,996,1007,1018],lenton2021ivi:1176,lenton:1176,less:[40,41,43,88,222,363,490,621,814,815,818,825,827,832,835,840,1076,1132,1136],less_equ:[88,363,490,621,814],less_util_node_str:1076,let:[1219,1222],level:1176,librari:[814,828,829,1176,1218,1222],lightweight:1176,like:[43,1025,1031,1132,1136,1176,1218,1219,1222],likewis:43,limit:[40,41,42,43,810,811,812,930,942,943,944],linalg:[29,1049,1050,1051,1052,1053,1054,1176],line:43,linear0:[1176,1218],linear1:1176,linear2:1218,linear:[930,962,981,1048,1149,1150,1151,1152,1157,1165,1176,1193,1194,1195,1196,1197,1198,1199,1200,1218],linear_algebra:[447,448,449,450,835,836,837,838,839,840],linear_resampl:[135,258,406,538,670,930],linearli:[930,962],link:[43,1176],linspac:[135,258,406,538,670,930,933],list:[15,18,19,40,41,352,353,354,357,804,805,806,809,835,839,841,842,850,851,852,856,865,866,875,876,878,879,880,882,885,886,900,930,933,936,938,987,1005,1006,1015,1020,1072,1073,1074,1076,1120,1121,1122,1124,1128,1129,1157,1158,1159,1160,1161,1162,1163,1164,1176,1177,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200],list_join:[40,41,42],list_stack:[40,41],liter:[835,840],littl:1219,load:[40,41],loaded_kwarg:1076,loader:1176,local:43,local_set:[930,970],locat:[43,930,980,1132,1133],log10:[88,363,490,621,814],log1p:[88,363,490,621,814],log2:[88,363,490,621,814],log:[754,814,826,835,837,930,983,1058,1076,1170,1171,1172,1173],logarithm:[814,825,826,827,835,837,1058,1068],logdet:[835,837],logic:[31,814,828,829,850,851,852,1056,1057,1176],logical_and:[320,751,1055],logical_not:[88,222,363,490,621,814],logical_or:[88,320,363,490,621,751,814,1055],logit:[1170,1173],logspac:[135,258,406,538,670,930],look:[43,1219,1222],loop:[1072,1073,1074,1075],loss:[1171,1172,1173,1176,1218],loss_fn:[1176,1218],lot:1219,low:[40,41,454,1132,1134,1136],lower:[40,41,43,804,808,930,986,1132,1136],lower_depth:[1205,1206],lowest:[15,18,19,40,41,1120,1129,1132,1134],lstm:[1157,1167,1176,1193],lstm_updat:[43,1157],machin:[810,811,812,848,849,1048,1053,1132,1138,1176,1219,1222],made:43,mai:[814,824,828,829,846,847,930,933,953,957,1176,1219,1222],main:[804,808,835,836,930,972,1176],mainli:1176,maintain:[43,846,847],make:[43,454,856,1076,1176,1219],maml:[1072,1073,1074],maml_step:1072,manag:[856,1076],manhattan:[835,840],mani:[40,41,43,930,1006,1176],manipulation_funct:[841,842],manner:[15,18,19,40,41,43,1120,1129],manual:[1120,1121,1128,1222],map:[40,41,42,856,865,930,980,1076,1120,1125,1126,1129,1193,1204,1218],map_cont:[40,41],map_nest_at_index:1120,map_nest_at_indic:1120,map_sequ:[40,41],mapper:[856,865,866,1076],mark:43,mask:[1157,1168,1169],master:43,match:[40,41,930,984],match_kwarg:930,math:[33,453,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1076,1176],mathbb:[1048,1054],mathbf:[1048,1054],mathemat:[803,835,840],matmul:[43,258,406,538,670,930,1222],matplotlib:1219,matric:[804,808,835,836,1157,1166],matrix:[40,41,804,808,835,836,930,932,943,985,1048,1049,1050,1051,1052,1053,1054,1157,1166,1193,1203],matrix_norm:[40,41,173,315,447,582,744,1048],matter:1176,max:[40,41,358,810,811,812,930,943,944,955,986,998,999,1076,1139,1141,1209,1211],max_batch_s:[40,41],max_chunk_s:[856,900,1076],max_depth:[40,41,856,860,863,870,878,882,888,930,970,1076,1120,1129],max_dev_dim_step_ratio:856,max_freq:[930,962],max_length:[40,41],max_node_dim_step_ratio:1076,max_norm:[40,41,930,943,944],max_split_factor_step_s:[856,1076],max_trust_ratio:[1025,1032,1209,1211],maxim:[1176,1219,1222],maximis:1176,maximum:[40,41,42,670,843,844,856,878,882,888,900,930,942,943,944,962,1025,1032,1076,1120,1129,1139,1141],mayb:[15,18,19],mdi:1076,mean:[40,41,454,856,885,886,887,888,900,930,955,1072,1073,1074,1075,1076,1120,1124,1132,1135,1139,1142,1145,1147,1184,1218,1222],measur:[1157,1168,1193,1204],mech:1176,mechan:[1176,1222],medic:1222,member:43,memori:[856,872,895,900,902,905,1076,1157,1167,1176],mention:43,merg:43,merge_with_upstream:43,meshgrid:[258,406,670,930],messag:[1220,1221],meta:[35,1073,1074,1075,1176],method:[40,41,42,43,454,930,936,947,987,998,999,1025,1032,1033,1076,1120,1121,1128,1129,1176,1193,1204,1205,1206,1219],might:[930,953,1222],min:[40,41,122,358,398,525,656,810,811,812,835,840,848,930,955,988,998,999,1008,1048,1053,1076,1139,1143],min_bas:[930,1009],min_denomin:[930,1008],min_dev_dim_s:856,min_node_dim_s:1076,min_sf_tune_step:[856,1076],min_unit_dev_tune_step:856,min_unit_node_tune_step:1076,mind:1176,mini:[1174,1175,1207,1208],minimum:[40,41,670,848,849,856,906,910,930,933,935,936,942,967,968,1000,1001,1008,1009,1076,1139,1143],miss:[1209,1213],ml_framework:[930,933,1048,1053],mod:[930,961],mod_depth:[1205,1206],mod_height:[1205,1206],mod_with_top_mod_key_chain:[1205,1206],mode:[40,41,447,449,835,838,854,855,856,885,886,887,888,900,1048,1053,1076,1219],model:[1176,1218],modul:[40,41,42,59,930,989,1076,1176,1177,1179,1180,1181,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1207,1208,1215,1216,1222],moment:[1025,1027,1028,1032,1209,1210,1211],more:[43,841,842,930,1010,1076,1176,1219,1222],more_util_node_str:1076,most:[40,41,1048,1053,1176,1222],move:[40,41,43,856,901,1076],much:[43,1176,1222],multi:[454,930,989,1157,1168,1193,1204],multi_head_attent:1157,multi_index_nest:1120,multi_map:[40,41],multi_nod:1076,multidev:[856,867,868,869,888],multidevcontain:[40,41],multidevic:[856,865],multidevit:[856,859,862,865,866,870],multidevitem:[856,858,861],multidevnest:[856,860,863],multiheadattent:[1176,1193],multinod:[1076,1080],multinodecontain:1076,multinodeit:1076,multinodeitem:1076,multinodenest:1076,multinomi:[179,324,454,588,766,1132],multipl:[40,41,850,851,852,930,984,1006,1048,1050,1139,1141,1142,1143,1144,1145,1147,1174,1175,1193,1203,1219],multipli:[40,41,930,950,1139,1144],multiprocess:[40,41,42,406,670,856,865,930,1076],must:[40,41,42,43,804,805,806,807,808,809,814,815,816,817,818,819,820,821,823,824,825,827,828,829,831,832,833,835,836,839,840,841,842,846,847,848,849,850,851,852,856,885,886,887,888,900,930,933,945,947,949,957,986,988,999,1010,1058,1062,1065,1076,1132,1137,1209,1213],mutabl:[1120,1122,1129],mutlidevic:[856,865],mutlinod:1076,mw_tm1:[1025,1028,1032],mx_concat:1176,mxn:[804,808,835,836],mxnet:[1176,1222],my_func:43,mymodel:1176,name:[43,854,855,1218],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1219],nan:[40,41,43,803,814,815,816,818,819,820,821,822,825,827,831,832,850,851,852,930,971,1021],nativ:[15,17,18,19,40,41,43,856,872,874,883,884,895,902,905,906,911,918,919,1076,1176,1177,1182,1183],native_modul:[1182,1183],native_module_class:[1182,1183],nativearrai:[15,18,19,43,804,807,808,810,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,837,838,839,840,841,842,843,844,846,847,848,849,850,851,852,856,874,900,901,906,910,916,921,922,930,931,932,933,935,936,937,938,940,942,943,944,945,946,948,949,950,951,954,955,956,957,959,960,961,962,964,965,969,971,972,973,980,981,982,983,985,986,987,988,991,992,995,996,997,998,999,1004,1006,1007,1010,1012,1013,1015,1016,1017,1018,1020,1021,1022,1023,1024,1076,1120,1122,1129],natur:[814,826,835,837,1058,1068,1222],ncdhw:[1157,1162,1163,1193,1198,1199],nchw:[1157,1160,1161,1164,1193,1196,1197,1200],ncw:[1157,1158,1159,1193,1194,1195],ndarrai:[352,353,354,355,356,357,358,360,361,454,930,1016],ndhwc:[1157,1162,1163,1193,1198,1199],nearest:[930,997],need:[43,930,943,944,1157,1159,1161,1163,1176,1193,1195,1197,1199,1222],neg:[40,41,88,222,363,490,621,814,821,835,840,841,842,850,851,852,1139,1144,1146,1149,1151],negative_slop:1184,neither:1076,nest:[15,16,17,18,19,40,41,42,856,878,882,888,930,936,1015,1072,1073,1074,1076,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1205,1206,1209,1210,1211,1212,1213,1214],nested_indices_wher:1120,nested_map:[1076,1120],network:[1157,1166,1176,1177,1179,1193,1205,1206,1222],neural:[1157,1176,1179,1193,1218],never:43,new_node_percent_mem:1076,new_node_util:1076,new_node_utils_kei:1076,new_std:[1174,1175,1207,1208],newli:[43,854,855,930,940,941],newlin:[40,41,42],newshap:[930,940,996],next:[810,811,1076,1205,1206,1209,1210,1211,1212,1213,1214],nhwc:[1157,1160,1161,1164,1193,1196,1197,1200],node:[40,41,1120,1121,1128],node_clon:1076,node_dist:1076,node_dist_arrai:1076,node_dist_it:1076,node_in:1076,node_mapp:1076,node_str:1076,node_to_str:1076,node_util:1076,nodedistit:1076,nodedistitem:1076,nodedistnest:1076,nodemanag:[1076,1087],nodemapp:1076,nodemappermultiproc:1076,noinspect:[857,907,908,909,1026,1076],non:[40,41,814,828,829,835,839,840,850,851,852,854,855,906,920,1205,1206,1209,1213,1219],none:[40,41,42,43,59,61,64,352,353,354,355,357,404,406,407,409,411,418,419,420,421,428,429,430,431,432,433,434,435,437,447,448,454,455,804,805,806,807,809,810,811,812,835,840,841,842,843,844,848,849,850,851,852,854,855,856,865,866,872,873,898,899,900,901,906,913,914,915,930,933,936,952,953,958,963,964,965,970,972,974,975,976,977,978,982,983,989,991,992,995,998,999,1000,1001,1006,1007,1008,1009,1018,1019,1024,1025,1028,1030,1032,1033,1034,1040,1041,1045,1048,1051,1053,1072,1073,1074,1075,1076,1120,1121,1124,1128,1129,1132,1133,1134,1135,1136,1139,1141,1142,1143,1144,1145,1146,1147,1157,1159,1161,1163,1166,1167,1168,1169,1174,1175,1182,1183,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],norm:[40,41,835,840,930,943,944,1048,1051,1175,1176,1208,1209,1211],normal:[1132,1135,1174,1175,1207,1208],normalized_idx:[1174,1175],normalized_shap:[1207,1208],notat:[40,41,1139,1140],note:[43,1048,1053],noth:[40,41,1219],notimplementederror:1076,now:[40,41,43,856,901,930,931,1076,1176,1193,1204,1205,1206,1218,1219,1222],np_concat:1176,np_finfo:358,ns_tune_step:1076,num:[406,428,429,930,982,983],num_arrai:[40,41],num_arrays_in_memori:930,num_arrays_on_dev:856,num_band:[930,962],num_channel:[1193,1200],num_chunk:1076,num_chunks_floor:1076,num_class:[1132,1133],num_cpu_cor:856,num_gpu:[128,404,856,1076],num_head:[1157,1168,1193,1204],num_kei:[1157,1168,1169],num_lay:[1193,1202],num_or_size_split:[40,41,406,433,930,1006],num_output:1076,num_queri:[1157,1168,1169],num_sampl:[406,427,454,455,930,981,1041,1042,1132,1133],num_task:[1072,1073,1074,1075],number:[40,41,42,803,810,811,812,814,818,835,837,838,850,851,852,854,855,856,892,893,894,906,917,921,922,930,933,942,946,959,962,969,972,981,982,983,986,990,995,1006,1013,1017,1021,1023,1072,1073,1074,1075,1076,1132,1133,1137,1139,1141,1142,1143,1145,1147,1157,1168,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1219,1222],numer:[43,814,818,821,822,823,828,829,830,835,839,930,967,968,1000,1001,1008,1009,1058,1065,1184],numhead:[1157,1168],numpi:[40,41,43,352,353,354,355,356,357,358,360,361,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,835,838,930,1016,1048,1053,1139,1140,1176,1218,1219,1222],nwc:[1157,1158,1159,1193,1194,1195],obj:[40,41],object:[40,41,42,59,358,810,811,856,906,910,930,933,936,1025,1120,1123,1125,1126,1127,1130,1131,1132,1138,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1205,1206],object_in:[406,409,930,936],observ:1076,obvious:43,occupi:[810,811,812,930,998,999],off:[835,836,930,933],offer:1176,offset:[835,836,1174,1175],often:1219,old:[40,41],on_init:[1193,1204,1205,1206],onc:[43,856,900,1076,1132,1133,1176],one:[40,41,43,835,840,841,842,843,844,856,885,886,887,888,900,906,912,930,972,984,991,998,999,1007,1010,1048,1051,1076,1139,1140,1141,1142,1143,1144,1145,1146,1147,1176,1219,1222],one_hot:[135,406,538,670,930],onearrai:[930,959],ones:[40,41,77,211,352,479,610,804,807,930,972,991,1176],ones_lik:[77,211,352,479,610,804],ongo:43,onli:[40,41,43,454,814,828,829,841,842,856,1048,1053,1076,1120,1121,1122,1128,1209,1210,1211,1212,1213,1214,1218,1219],onlin:[43,1176],onto:[856,885,886,901,1076,1120,1124,1129],oom:[856,1076],open:[930,933,1132,1136,1176,1222],opencv:1219,oper:[40,41,43,930,939,954,955,956,982,983,1011,1025,1028,1030,1032,1033,1034,1055,1056,1057,1157,1158,1159,1160,1161,1162,1163,1164,1166],operand:[40,41,814,815,816,818,819,820,825,827,831,832,1139,1140],oppos:[930,962],optim:[856,1025,1028,1030,1032,1033,1034,1072,1073,1074,1075,1076,1176,1210,1211,1212,1214,1218,1222],optimizer_upd:1025,option:[15,18,19,40,41,42,43,352,353,354,355,357,804,805,806,807,809,835,840,841,842,843,844,848,849,850,851,852,854,855,856,865,866,874,878,879,880,881,882,885,886,887,888,895,898,899,900,901,905,906,911,916,920,929,930,932,933,935,936,943,944,945,950,952,953,962,963,964,965,969,971,972,979,981,982,983,984,987,989,991,992,995,998,999,1002,1004,1006,1007,1008,1009,1010,1018,1020,1021,1024,1025,1028,1030,1031,1032,1033,1034,1036,1041,1045,1048,1051,1053,1072,1073,1074,1075,1076,1120,1121,1122,1124,1128,1129,1132,1133,1139,1141,1142,1143,1144,1145,1146,1147,1149,1150,1154,1157,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1219],ord:[835,838,840],order:[40,41,42,43,835,840,841,842,846,847,1025,1028,1030,1032,1033,1034,1048,1051,1072,1073,1074,1215,1216],ordered_node_util_kei:1076,org:1222,organ:43,origin:[40,41,42,930,996,1024,1048,1051],other:[40,41,43,854,855,930,932,933,972,1025,1029,1132,1136,1176,1218,1219,1222],otherwis:[15,16,17,18,19,40,41,814,821,822,835,840,843,844,850,851,852,856,873,906,913,914,915,930,939,1018,1019,1022,1025,1031,1036,1040,1072,1073,1074,1076,1139,1141,1142,1143,1145,1147],our:[43,1176,1222],out:[43,454,804,806,808,809,810,811,812,814,815,816,817,818,819,820,821,822,823,825,826,827,828,829,831,832,835,836,837,840,841,842,843,844,846,847,850,851,852,930,933,1058,1061,1157,1165,1167,1176,1193,1201],out_feat_dim:[1157,1168],out_featur:[1157,1165,1166],out_i:[814,821,822],outdat:1222,outer:[1072,1073,1074,1075],outer_batch_fn:[1072,1073,1074],outer_batch_shap:[1157,1166],outer_cost_fn:[1072,1073,1074],outer_v:[1072,1073,1074],outlin:1219,output:[40,41,43,804,805,806,807,809,841,842,856,865,866,900,930,933,941,963,972,995,1013,1025,1029,1058,1062,1076,1132,1134,1135,1136,1157,1159,1161,1163,1165,1167,1168,1169,1176,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204],output_ax:[856,900,1076],output_axi:1076,output_channel:[1193,1194,1195,1196,1197,1198,1199,1202,1203],output_queu:1076,output_shap:[1157,1159,1161,1163,1193,1195,1197,1199],outsid:[930,942],over:[40,41,835,839,840,850,851,852,1048,1051,1132,1136,1139,1141,1142,1143,1145,1147,1174,1175,1207,1208],overal:1219,overflow:[930,933],overhead:1219,overrid:[930,991,1024],overriden:[1209,1213],overwrit:[40,41,856,900,1076],overwrite_at_key_chain:[40,41],own:[1176,1219,1222],packag:[43,1219],pad:[930,946,962,1023,1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200],pad_width:[406,930,946,1023],page:1176,pair:[1157,1169],parallel:[856,865,866,1076],parallelis:[856,865,866,1076],param:[40,41,42,406,419,420,804,805,807,843,844,848,849,856,900,930,931,964,965,991,992,1076,1205,1206,1218],paramet:[15,16,17,18,19,40,41,42,43,804,805,807,814,824,830,833,835,836,838,839,848,849,854,855,856,865,866,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,895,898,899,900,901,902,905,906,910,911,912,916,917,918,919,920,921,922,929,930,932,933,935,936,937,938,939,940,941,942,943,944,945,946,948,949,950,951,953,954,955,956,957,958,959,960,961,962,963,964,965,969,971,972,973,975,976,977,979,980,981,982,983,984,985,986,987,988,989,992,995,996,997,998,999,1000,1001,1002,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1036,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218],parameter:[1132,1135,1136],pardo:1176,pars:[930,947],part:[804,808,1025,1028,1030,1032,1033,1034,1058,1061,1176,1205,1206,1219],partial:[40,41,43,1205,1206],particl:1222,particular:[43,1222],pass:[40,41,42,43,856,865,900,906,911,930,941,1025,1039,1072,1073,1074,1076,1182,1183,1205,1206,1209,1213,1215,1216],pattern:[40,41,930,954,955,956],peopl:43,per:[856,1076,1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200],percent_used_mem_on_dev:856,percent_used_mem_on_nod:1076,percentag:[856,895,1076],perf_count:1076,perform:[40,41,43,850,851,852,856,930,935,950,954,955,956,975,976,977,981,982,983,1025,1028,1030,1032,1033,1034,1041,1042,1072,1073,1074,1075,1076,1120,1125,1126,1139,1141,1142,1143,1144,1145,1146,1147,1149,1154,1157,1165,1167],period:43,permissable_step:1076,permit:43,permut:[454,930,1012,1018],perpendicular:[930,949],person:[43,1176],physci:1222,pickl:[40,41,1076],pickle_filepath:[40,41],pinv:[315,744,1048],pip:1176,pipelin:1218,pkk:1222,pkkm1:1222,pkm1km1:1222,place:[40,41,43,804,805,806,807,809,856,901,930,959,963,975,976,977,1076,1209,1210,1211,1212,1213,1214],placehold:[43,1120,1129],pleas:[43,454,1048,1053],point:[43,803,804,805,806,809,810,811,814,815,816,818,819,820,825,827,831,832,833,835,840,906,921,930,933,1058,1065],popul:[40,41,1132,1133],popular:1222,population_s:[454,455,1132,1133],portabl:[1176,1177],posit:[15,16,17,810,811,814,821,850,851,852,856,878,882,888,930,931,933,959,962,1076,1132,1137,1182,1183],possibi:[40,41],possibl:[43,930,984,1015,1041,1046,1222],post:[1174,1175],post_shap:[40,41],power:[930,967,1000,1009,1184],practic:1176,pre:[856,1076,1176],pre_shap:[40,41],precis:[810,811,814,832],pred:[1170,1171,1172,1173],predict:[1170,1171,1172,1173,1222],preprint:1176,present:[40,41],preserv:[40,41,42,841,842,1025,1036],preserve_typ:[40,41,438,441,1025,1036],press:1176,prevent:[43,1025,1027,1028,1032,1076,1209,1210,1211],prevet:43,previou:[1025,1028,1032],previous:[930,941],prime:1176,print:[40,41,42,856,896,930,993,1176,1218],print_all_arrays_in_memori:930,print_all_arrays_on_dev:856,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1209,1213],prob:[454,455,1132,1133,1157,1165,1193,1201],probabl:[1132,1133,1157,1165,1193,1201],problem:[43,1222],process:[43,856,865,866,895,905,930,989,1076],process_specif:[856,895,905,1076],prod:[40,41,930,955],produc:[856,865,866,1076],product:[40,41,930,949,950,985,1139,1140,1157,1168,1169,1193,1204],profil:[128,252,404,531,662,856,1076],progress:43,project:[1176,1218,1219,1222],promot:[814,815,816,817,819,820,825,827,831,832,835,840,1058,1065],prompt:1176,properti:[40,41,358,856,868,1076,1205,1206,1209,1210,1211,1212,1214],provid:[40,41,43,841,842,843,844,850,851,852,854,855,856,873,906,913,914,915,920,929,930,953,991,999,1024,1025,1028,1030,1032,1033,1034,1040,1076,1176,1193,1202,1209,1210,1211,1212,1213,1214,1219],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1048,1052],pull:[1176,1177],pure:[40,41,1176,1222],purpos:[43,1222],put:1076,pybroadexcept:1076,pyprotectedmemb:1076,pyshadowingnam:[857,907,908,909,1026,1076],python:[40,41,856,895,905,930,933,1076,1176],pytorch:[1025,1028,1030,1032,1033,1034,1048,1053,1176,1209,1210,1211,1212,1213,1214,1218,1219,1222],pyunresolvedrefer:1076,quadrant:[1058,1062],qualiti:43,queri:[40,41,856,889,899,1076,1157,1168,1169,1193,1204],query_dim:[1193,1204],query_kei:[40,41],queue:[40,41,42,856,865,866,930,994,1002,1076],queue_class:[856,865,866,1076],queue_load_s:[40,41,42],queue_timeout:[40,41,42,930,1076],quick:[454,1176],quickli:[43,1218],radian:[814,819,831,1058,1059,1060,1062,1070],rai:[1058,1059],rais:[40,41,850,851,852,930,939,967,1000,1007,1009,1019,1076,1205,1206,1209,1213],ram:[856,895,902,905,1076],randint:[179,324,454,588,766,1132],random:[37,40,41,455,1133,1134,1135,1136,1137,1138,1176],random_crop:1041,random_norm:[179,324,454,588,766,1132],random_uniform:[179,324,454,588,766,1132],randomli:[454,1041,1045,1157,1165,1193,1201],rang:[454,930,933,982,983,1058,1062,1076,1176,1218,1222],rank:[835,840,850,851,852,930,946,1020,1023],rate:[1025,1028,1030,1032,1033,1034,1072,1073,1074,1075,1193,1204,1209,1210,1211,1212,1213,1214],rather:[40,41,43,856,900,930,933,979,1025,1031,1076],ratio:[856,1025,1032,1041,1046,1076,1209,1211],raw:[40,41,1048,1053],raw_delta:1076,reach:[43,856,878,882,888,1076,1120,1129],read:[40,41],readi:[1076,1218],real:[1058,1059,1061],realiti:1219,rearrang:[40,41,930,954,956],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1072,1074],receiv:[43,856,865,866,930,934,984,1076,1193,1203],receivess:[856,1076],receivng:[1072,1075],recev:[1072,1073,1074],recognit:1222,recommend:[814,828,829,1176],rectifi:[1149,1151,1152],recurr:[1157,1167],recurrent_bia:[1157,1167],recurrent_kernel:[1157,1167],recurs:[40,41,1120,1121,1122,1128,1129],reduc:[40,41,843,844,850,851,852,856,900,930,955,1048,1053,1076,1139,1141,1142,1143,1144,1145,1146,1147],reduce_max:[40,41,186,329,456,593,773,1139],reduce_mean:[40,41,186,329,456,593,773,1139,1176,1218],reduce_min:[40,41,186,329,456,593,773,1139],reduce_prod:[40,41,186,329,456,593,773,1139],reduce_std:[40,41,329,1139],reduce_sum:[40,41,186,329,456,593,773,1076,1139],reduce_var:[40,41,186,329,456,593,773,1139],reduct:[39,40,41,406,431,432,850,851,852,930,955,998,999,1140,1141,1142,1143,1144,1145,1146,1147,1176],refactor:43,refer:[43,814,826,850,851,852,1025,1027,1028,1048,1054,1193,1203,1222],reflect:43,reflected_oper:[0,13,14],regard:[856,1076],regardless:[40,41,854,855],register_paramet:1218,reimplement:1222,rel:[835,836,841,842,846,847,1025,1028,1030,1032,1033,1034],rel_slice_obj:1076,relat:43,relev:[1209,1210,1211,1212,1213,1214],relu:[782,1149,1150,1151,1176,1218],remain:[43,930,996,1120,1124],remaind:[40,41,930,961,1006],remov:[40,41,43,835,836,843,844,930,1007,1072,1073,1074],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,841,842],rep:[930,1013],repeat:[40,41,43,258,670,930,956,1013,1076,1219],repeated_config_check:[856,1076],repeatedli:[1120,1127],repetit:[40,41,930,995,1013],replac:[40,41,43,454,455,930,942,998,999,1132,1133],repo:[43,1176],repositori:43,repres:[43,814,815,816,820,833,835,837,906,912,917,1157,1166],represent:[40,41,42,43,803,810,811,812,814,817,856,883,884,906,912,918,919,930,1005,1015,1076],reptil:[1072,1075],reptile_step:1072,request:[1176,1177],requir:[43,814,832,854,855,906,910,930,933,936,1182,1183],resampl:[930,981],reserv:43,reshap:[40,41,454,670,930],reshape_lik:[40,41],respect:[814,817,823,824,829,930,957,1025,1027,1028,1029,1030,1032,1033,1034,1048,1053,1058,1065,1072,1073,1074,1075],respond:43,respons:[43,1076],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,835,836,840,843,844,850,851,852,856,865,930,933,957,998,999,1010,1048,1051,1055,1056,1057,1058,1065,1076,1139,1141,1142,1143,1144,1145,1146,1147,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1176],ret:1076,ret_dict:1076,ret_fn:[856,865,866,1076],retain:[1025,1029],retain_grad:[438,439,1025,1029],retreiv:1076,retrn:[930,1005],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1072,1073,1074,1075],return_sequ:[1193,1202],return_st:[1193,1202],rev:[930,953],revers:[40,41,841,842,930,953,1018],review:43,right:[40,41,43],rk_e:1222,robot:1176,ronald:1176,root:[43,814,832],round:[258,406,670,814,818,832,930,933,1076],row:[930,972,1132,1133],rule:[930,933,1058,1065],run:[43,856,865,1025,1027,1028,1032,1072,1073,1074,1075,1076,1176,1177,1193,1204,1205,1206],safe:[856,865,1076],safety_factor:[856,1076],same:[15,16,17,40,41,43,804,807,808,814,818,835,836,838,841,842,843,844,846,847,856,865,866,900,901,906,910,930,931,945,960,961,964,965,991,997,998,999,1010,1024,1025,1031,1036,1058,1061,1072,1073,1074,1076,1139,1140,1157,1158,1159,1160,1161,1162,1163,1164,1176,1193,1194,1195,1196,1197,1198,1199,1200,1218,1222],same_arrai:[40,41],sampl:[930,981,1041,1042,1132,1133,1135,1136,1157,1165,1176,1193,1201],satisfi:[930,936,1048,1050,1054],save:[40,41,930,1003,1014,1041,1043,1205,1206],save_dir:[404,405,856,871,1076],save_weight:[1205,1206],scalar:[835,840,930,942,991,1017,1021],scale:[856,898,899,1025,1033,1076,1157,1165,1168,1169,1174,1175,1193,1201,1204,1209,1212],scaled_dot_product_attent:1157,scatter:[930,991,998,999],scatter_flat:[135,258,406,538,670,930],scatter_nd:[135,258,406,538,670,930],scene:[1025,1028,1030,1032,1033,1034],schemat:1176,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[843,844],second:[40,41,814,817,823,824,829,835,836,839,856,887,930,937,949,957,994,1002,1012,1025,1027,1028,1032,1072,1074,1076,1209,1210,1211],secondli:1222,sector:[814,815,816],see:[59,358,404,405,454,814,817,823,829,835,840,850,851,852,856,868,869,870,871,906,930,933,982,983,1025,1058,1065,1176,1184,1186,1187,1189,1190,1192],seed:[40,41,179,454,766,1132],seed_valu:[40,41,454,1132,1137],seem:1176,seen_set:[930,970],select:[930,936,1007,1219,1222],self:[40,41,59,358,404,405,856,868,869,870,871,906,1025,1076,1176,1184,1186,1187,1189,1190,1192,1209,1213,1218,1222],sent:1076,seper:[43,930,962],seq:[40,41,42,1139,1140,1205,1206],sequenc:[15,16,17,40,41,42,43,454,835,839,854,855,856,865,866,875,876,877,878,879,880,881,882,885,886,900,906,910,930,933,936,938,940,945,946,972,984,987,992,995,996,999,1006,1010,1013,1018,1023,1025,1029,1041,1045,1046,1048,1051,1076,1120,1131,1132,1134,1136,1139,1141,1142,1143,1144,1145,1146,1147,1157,1158,1159,1160,1161,1162,1163,1164,1174,1175,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1202,1205,1206,1207,1208,1209,1213,1215,1216],sequenti:1176,seri:43,set:[15,18,19,40,41,843,844,846,847,856,885,886,898,899,900,930,932,952,972,1000,1001,1002,1003,1025,1028,1030,1031,1032,1033,1034,1048,1051,1076,1120,1121,1128,1130,1131,1132,1133,1137,1139,1141,1142,1143,1144,1145,1146,1147,1176,1193,1202,1209,1210,1211,1212,1213,1214,1219,1222],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:856,set_default_dtyp:906,set_default_float_dtyp:906,set_default_int_dtyp:906,set_default_nod:1076,set_exception_debug_mod:44,set_framework:[40,41,43,59,1076,1176,1218,1219,1222],set_ivy_backend:[40,41],set_min_bas:930,set_min_denomin:930,set_nest_at_index:1120,set_nest_at_indic:1120,set_queue_timeout:930,set_split_factor:[856,1076],set_stat:[1209,1210,1211,1212,1213,1214],set_tmp_dir:930,set_with_grad:1025,setter:1076,sever:1222,sgd:[1176,1209],shape0:1076,shape:[40,41,43,352,353,354,357,406,418,432,454,670,804,805,806,807,808,809,835,836,841,842,843,844,846,847,856,868,906,910,930,931,940,945,946,959,960,961,963,965,969,972,991,992,995,996,997,998,999,1005,1007,1010,1023,1024,1041,1045,1048,1050,1053,1058,1061,1062,1076,1132,1134,1135,1136,1139,1140,1157,1159,1161,1163,1193,1195,1196,1197,1198,1199,1200,1207,1208],shape_slic:[40,41],shape_to_tupl:930,share:[40,41,1176,1219],shift:1076,should:[40,41,42,43,454,804,808,814,815,816,817,818,819,820,821,822,823,825,827,828,829,831,832,833,835,836,839,840,843,844,854,855,856,930,940,941,947,991,996,1025,1028,1030,1032,1033,1034,1058,1065,1076,1139,1140,1176],show:[40,41,1176,1222],show_mod_in_top_mod:[1205,1206],show_structur:[1205,1206],show_sub_contain:[40,41],show_v:[1205,1206],show_v_in_top_v:[1205,1206],shown:[40,41],shp:1076,shuffl:[40,41,179,454,766,1132],shuffle_h5_fil:[40,41],side:43,sigmoid:[782,1149,1176,1218],sign:[835,837],signatur:[43,59,358,404,405,406,438,443,447,451,452,454,856,868,869,870,871,906,1025,1184,1186,1187,1189,1190,1192],signific:1222,similar:[43,1157,1168,1193,1204],similarli:[1048,1053],simpl:[43,930,958,1176,1219,1222],simpler:43,simplest:1219,simpli:[40,41,43,1176,1219,1222],simultan:1176,sin:[88,222,363,490,621,814,930,962,1058,1070,1219],sinco:1219,sine:[814,816,831,1058,1060,1069],singl:[40,41,854,855,856,865,866,885,886,887,888,930,1007,1017,1021,1041,1046,1076,1132,1135,1136,1139,1141,1142,1143,1144,1145,1146,1147,1176,1219,1222],singleton:[835,840,850,851,852],singular:[835,838],sinh:[754,1058],siren:[1176,1184],situat:43,size:[40,41,42,406,431,835,836,838,843,844,850,851,852,856,879,880,881,882,898,899,900,930,933,940,982,983,998,1006,1041,1045,1048,1051,1076,1132,1133,1135,1136,1139,1141,1142,1143,1144,1145,1146,1147,1193,1194,1195],size_ordered_arrai:[40,41],skew:[1048,1054],skinv:1222,skip:[40,41],slice:[40,41,930,964,965,1076,1120,1127],slice_kei:[40,41],slice_obj:[40,41,1076],slice_via_kei:[40,41],slide:[1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200],slodget:835,slogdet:[110,235,385,512,643],slope:[1149,1151],small:[1170,1171,1172,1173,1174,1175,1176,1207,1208,1219],smaller:[930,942],smallest:[40,41,810,811,812,814,818,930,935],smallest_norm:[358,810,811],softmax:[195,465,782,1149,1157,1168,1169],softplu:[782,1149],solut:43,solv:1222,some:[40,41,43,930,933,1025,1027,1028,1030,1032,1033,1034,1039,1157,1165,1176,1193,1201,1219,1222],some_backend:43,some_namespac:43,someth:[43,1222],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,835,838,847,1076],sort_by_kei:[40,41],sorting_funct:[846,847],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,352,353,354,355,356,357,358,360,361,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,452,453,454,455,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1179,1180,1181,1182,1183,1184,1186,1187,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1220,1221,1222],space:[930,933,962,982,983],spars:[1170,1173],sparse_cross_entropi:1170,spawn:[930,989],special:[43,814,815,816,818,819,820,825,827,831,832],specif:[40,41,43,814,828,829,835,839,856,898,930,947,954,955,956,989,1072,1073,1074,1075,1076,1132,1138,1176,1205,1206,1218,1219],specifc:[1132,1133],specifi:[40,41,804,805,806,808,809,835,836,839,840,841,842,843,844,846,847,850,851,852,856,875,876,877,878,879,880,881,882,885,886,890,892,896,899,900,901,906,910,912,930,933,935,936,942,945,946,963,964,965,971,982,983,1010,1020,1023,1048,1051,1076,1120,1125,1126,1130,1131,1139,1140,1141,1142,1143,1144,1145,1146,1147],sphinx:43,split:[40,41,135,258,406,538,670,856,865,879,880,881,882,898,899,900,930,984,1076],split_arg:1076,split_factor:[856,865,1076],split_func_cal:[856,1076],split_siz:1076,spread:[856,888,1076],sqrt:[88,222,363,490,621,814,835,840],squar:[814,832,835,837,930,972,1048,1050],squeez:[135,258,406,538,670,930],stabil:[846,847,930,1008,1009],stabl:[846,847,930,967,968,1000,1001,1008,1009],stable_divid:930,stable_pow:930,stack:[40,41,258,670,804,808,835,836,930,1041,1046,1120,1121,1128,1193,1202],stack_imag:[169,311,443,578,740,1041],stacked_dim_s:1076,stage:43,standard:[40,41,810,811,1132,1135,1139,1145,1174,1175,1176,1177,1207,1208],start:[40,41,43,404,405,406,407,428,429,454,856,871,930,933,982,983,1076,1176,1219],starting_index:[40,41],starting_split_factor:[856,1076],state:[1076,1157,1167,1176,1179,1180,1181,1182,1183,1184,1186,1187,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218],statement:1219,static_argnam:[406,411,854,855],static_argnum:[406,411,854,855],statistical_funct:[848,849],std:[454,1132,1135],step:[40,41,406,407,856,930,933,982,983,1025,1027,1028,1030,1032,1033,1034,1072,1073,1074,1075,1076,1176,1209,1210,1211,1212,1213,1214,1218,1222],stephen:1176,stick:1176,still:[40,41,43],stochast:[1209,1214],stop:[40,41,404,405,406,407,428,429,856,871,900,930,933,982,983,1025,1028,1030,1032,1033,1034,1036,1072,1073,1074,1075,1076,1209,1210,1211,1212,1213,1214],stop_gradi:[40,41,306,438,573,734,856,900,1025,1028,1030,1032,1033,1034,1072,1073,1074,1075,1076,1209,1210,1211,1212,1213,1214],stopiter:1076,store:[40,41,930,962,1006,1025,1039,1205,1206],store_var:[1205,1206],str:[15,16,17,40,41,42,43,352,353,354,355,357,358,360,361,804,807,810,811,812,854,855,856,865,866,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,900,906,911,912,917,918,919,920,921,922,929,930,936,952,954,955,956,987,989,992,998,999,1048,1051,1053,1072,1073,1074,1075,1076,1120,1124,1139,1140,1182,1183,1193,1204,1205,1206],str_to_nod:1076,straight:1219,strength:[1176,1222],stride:[1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200],string:[40,41,43,856,872,874,883,884,889,895,901,902,905,906,910,916,918,919,920,929,930,933,936,952,972,992,1024,1076,1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200,1205,1206],structur:[40,41,42,43,930,947],structural_diff:[40,41],style:43,sub:[40,41,43,835,836,856,879,880,885,886,887,888,930,1006,1072,1073,1074,1075,1076],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1076,sub_mod:[1205,1206],sub_modul:[1215,1216],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1176,1177,1207,1208,1215,1216],subsequ:43,subset:43,substr:[40,41],suffici:[1048,1053],suggest:1176,suitabl:[1041,1046],sum:[40,41,406,431,432,835,840,856,885,886,887,888,900,930,951,955,998,999,1076,1139,1140,1146],summat:[40,41,1139,1140],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,116,118,121,123,125,126,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,170,171,172,174,175,176,180,181,182,183,184,185,187,188,189,190,191,192,193,196,198,199,201,202,203,204,205,206,207,212,213,214,215,216,218,219,220,223,224,225,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,312,313,314,316,317,318,319,321,322,325,326,327,328,330,331,332,333,334,335,336,337,340,342,343,344,345,346,347,348,353,354,355,356,357,359,360,361,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,386,387,388,389,390,392,394,397,399,401,402,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,441,442,444,445,446,448,449,450,453,455,457,458,459,460,461,462,463,466,467,469,470,471,472,473,474,475,480,481,482,483,484,486,487,488,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,513,514,515,516,517,519,521,524,526,528,529,532,533,534,535,536,537,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,574,575,576,577,579,580,581,583,584,585,589,590,591,592,594,595,596,597,598,599,600,604,605,606,611,612,613,614,615,617,618,619,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,644,645,646,647,648,650,652,655,657,659,660,663,664,665,666,667,668,669,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,735,736,737,738,739,741,742,743,745,746,747,748,749,750,752,753,755,756,757,758,759,760,761,762,763,764,765,767,768,769,770,771,772,774,775,776,777,778,779,780,783,784,785,786,787,788,789,791,792,794,795,796,797,798,799,800,805,806,807,808,809,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,838,839,840,842,844,847,849,851,852,855,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1056,1057,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1172,1173,1175,1176,1180,1181,1183,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1221,1222],supports_inplac:930,suppos:1222,sure:43,svd:[110,235,385,512,643,835],swap:[40,41,930,1012],swapax:[40,41,538,670,930,1222],symmetr:[1048,1054],syntax:[404,406,438,443,447,451,452,454],tab:1176,take:[43,930,981],taken:[43,835,836,1139,1141,1142,1143,1145,1147],tan:[754,1058,1061],tangent:[814,833,1058,1061,1062,1063,1070,1071,1149,1156],tanh:[88,222,363,490,621,782,814,1058,1149],target:[40,41,856,872,875,876,877,878,879,880,881,882,885,886,887,888,901,1076,1176],target_dict:[40,41],task:[43,1072,1073,1074,1075],team:[43,1222],templat:1176,temporari:[930,1003,1014],tensor:[40,41,43,406,431,432,835,839,856,874,906,916,930,933,935,940,982,983,986,988,991,992,996,998,999,1006,1024,1076,1132,1133,1134,1157,1165,1167,1176,1193,1201,1203,1209,1210,1211,1212,1213,1214,1218,1219],tensordot:[385,512,643,835],tensorflow:[43,1048,1053,1157,1159,1161,1163,1176,1193,1195,1197,1199,1219,1222],term:[40,41,43,1157,1167,1176,1193,1203],termcolor:[40,41,42],termin:[40,41,42,1076],test:[43,814,821,822,850,851,852,906,921,922],test_array_api:43,tf_concat:1176,than:[40,41,43,810,811,814,815,818,825,827,832,835,840,841,842,856,900,930,933,942,960,979,986,1007,1010,1025,1031,1076,1132,1136,1176,1219],thei:[40,41,1058,1062,1072,1073,1074,1132,1133,1176,1215,1216,1219],them:[1176,1222],themselv:[1120,1121],therefor:43,thi:[40,41,42,43,814,828,829,835,837,843,844,856,878,882,888,895,900,905,930,933,962,994,996,1002,1025,1028,1030,1031,1032,1033,1034,1039,1048,1051,1076,1120,1124,1129,1139,1141,1142,1143,1144,1145,1146,1147,1157,1166,1176,1205,1206,1209,1210,1211,1212,1213,1214,1218,1219,1222],thing:[43,1176],those:[40,41,43,835,838,930,942,1025,1039,1076],though:43,thought:43,threshold:[930,986,988],through:[40,41,43],tick:43,tickbox:43,tile:[258,538,670,930],time:[43,930,1013,1025,1028,1032,1072,1073,1074,1075,1076,1132,1133,1157,1167,1193,1204,1205,1206,1222],timeout:[40,41,42,856,865,866,930,994,1002,1076],timestep:[1157,1167,1193,1202],titl:[43,1176],tmp_dir:930,tmp_dr:[930,1003],to_appli:[40,41],to_clon:[856,1076],to_dev:[40,41,128,252,404,531,662,856],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[856,1076],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1176],to_ivy_modul:[197,790,1176,1182],to_json:[40,41],to_kv_fn:[1157,1168],to_kv_v:[1157,1168],to_list:[40,41,406,670,930],to_multi_dev:[40,41],to_mut:[1120,1122,1129],to_n:[15,40,41,1176],to_nod:1076,to_numpi:[40,41,406,670,930,1176,1218],to_out_fn:[1157,1168],to_out_v:[1157,1168],to_q_fn:[1157,1168],to_q_v:[1157,1168],to_raw:[40,41],to_scalar:[406,670,930],todo:[1076,1176,1177],togeth:[40,41,1215,1216],tool:[1176,1219],top_mod:[1205,1206],topic:1222,torch:[43,854,855,1176,1218,1219,1222],torch_concat:1176,torchfcmodel:1218,total:[40,41,42,856,902,1076],total_mem_on_dev:856,total_mem_on_nod:1076,tpu:[856,903,1076],tpu_is_avail:[404,531,662,856,1076],trace:[40,41,930,979],track:[43,856,1076,1120,1129,1205,1206],track_submod_call_ord:[1205,1206],track_submod_ret:[1205,1206],trail:[1207,1208],train:[1025,1027,1028,1032,1176,1177],trainabl:[1025,1031,1176,1177,1182,1183,1205,1206,1215],trainer:1176,tran:1222,transform:[1157,1165,1166],transpos:[40,41,135,258,406,670,856,887,930,1076,1157,1159,1161,1163,1193,1195,1197,1199],travers:[15,18,19,40,41,1120,1129],treat:[40,41,854,855],tri:[40,41],triangular:[804,808],trigonometr:[1058,1059,1061],tril:[77,211,352,479,610,804],trim_kei:[40,41],trust:[1025,1032,1209,1211],truth:[814,823,824,930,957,1055,1056,1057],try_else_non:930,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[856,1076],tune_dev_alloc:856,tune_dev_split:856,tune_node_alloc:1076,tune_node_split:1076,tune_step:[856,1076],tupl:[15,16,17,18,19,40,41,43,352,353,354,357,804,805,806,809,835,838,839,840,841,842,848,849,850,851,852,854,855,930,946,962,963,1005,1023,1076,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1134,1139,1141,1142,1143,1144,1145,1146,1147],tutori:43,two:[40,41,804,808,835,836,837,838,930,933,937,949,985,1012,1048,1051],type:[15,18,40,41,42,43,59,360,361,404,405,804,805,806,807,808,809,811,812,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,831,832,833,835,836,839,840,841,842,846,847,850,851,852,856,868,869,870,871,883,884,888,900,906,910,911,912,916,917,918,919,920,921,922,929,930,931,933,936,945,947,957,960,961,963,972,979,991,992,997,1011,1021,1024,1025,1031,1036,1058,1065,1076,1176,1184,1186,1187,1189,1190,1192,1205,1206,1219],types_to_iteratively_nest:[40,41,42],uint8:[1041,1043,1047],uint8_img_to_float_img:1041,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[814,817],underwai:43,unecessari:43,unfairli:43,unif:1076,unifi:[40,41,856,885,886,887,888,900,1076,1176],uniform:[40,41,1132,1133,1135,1136,1184,1186,1187,1190,1191],uniformli:[1132,1134,1136],unify_arrai:1076,unify_it:1076,unify_nest:1076,uniniti:[804,805],union:[15,18,19,40,41,43,352,353,354,355,357,358,360,361,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,837,838,839,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,874,879,880,881,882,900,901,906,910,911,912,916,917,918,919,920,921,922,929,930,931,932,933,935,936,937,938,940,942,943,944,945,946,948,949,950,951,954,955,956,957,959,960,961,962,963,964,965,969,971,972,973,980,981,982,983,985,986,987,988,991,992,995,996,997,998,999,1004,1005,1006,1007,1010,1012,1013,1015,1016,1017,1018,1020,1021,1022,1023,1024,1076,1120,1121,1122,1128,1129],uniqu:[856,865,866,1072,1073,1074,1075,1076,1120,1124],unique_kwarg:1076,unit:[43,856,1058,1059,1060,1076,1149,1150,1151,1152],unitari:[835,838],unless:[930,991,1024],unlik:[856,1076],unnorm:[1132,1133],unpack:[930,1020],unrol:[1157,1167],unset:1219,unset_debug_mod:44,unset_default_devic:856,unset_default_dtyp:906,unset_default_float_dtyp:906,unset_default_int_dtyp:906,unset_framework:[59,1219],unset_with_grad:1025,unstack:[40,41,135,258,406,538,670,930],until:43,unus:[854,855],updat:[40,41,406,431,432,856,865,930,977,998,999,1025,1027,1028,1030,1032,1033,1034,1072,1073,1074,1076,1120,1125,1126,1130,1131,1157,1167,1176,1177,1182,1183,1209,1210,1211,1212,1213,1214,1219,1222],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1132,1136],upper_depth:[1205,1206],upstream:43,usabl:[1176,1222],usag:[856,900,1076],use:[40,41,42,43,454,856,865,866,891,903,930,995,1008,1009,1048,1053,1076,1157,1168,1174,1175,1176,1207,1208,1219,1222],used:[40,41,43,454,835,836,856,865,895,898,899,905,906,917,930,967,968,984,998,999,1000,1001,1024,1025,1032,1033,1048,1051,1072,1073,1074,1075,1076,1120,1129,1193,1204,1209,1211,1212,1218,1219],used_dev:[856,865],used_mem_on_dev:856,used_mem_on_nod:1076,used_node_str:1076,used_node_strs_dict:1076,useful:[40,41,856,900,1076,1157,1166,1176,1219],user:[1176,1193,1204,1205,1206,1219,1222],uses:1176,using:[40,41,43,1025,1027,1028,1120,1123,1127,1139,1140,1157,1165,1169,1176,1193,1201,1218,1219,1222],util:[856,889,1076],utility_funct:[850,851,852],v_with_top_v_key_chain:[1205,1206],val:[40,41,406,423,424,425,930,975,976,977,1000,1001],valid:[850,851,852,906,911,930,1008,1009,1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200],valid_dtyp:906,valu:[40,41,406,814,818,823,824,835,837,838,840,843,844,846,847,848,849,856,868,899,900,930,931,933,935,942,943,944,946,947,953,957,962,963,964,965,980,982,983,986,988,994,995,996,997,998,999,1000,1001,1002,1018,1021,1022,1023,1025,1029,1032,1041,1047,1055,1056,1057,1058,1066,1067,1068,1072,1073,1074,1076,1120,1124,1125,1126,1130,1131,1132,1135,1136,1139,1141,1143,1157,1168,1169,1174,1175,1193,1204,1207,1208,1209,1211],value_is_nan:930,vanilla:[1072,1074],var_shap:1184,variabl:[15,16,17,18,19,40,41,306,438,573,734,930,939,975,976,977,978,979,1011,1025,1028,1029,1030,1031,1032,1033,1034,1036,1039,1072,1073,1074,1075,1157,1168,1174,1175,1182,1183,1184,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],variable_data:[438,734,1025],varianc:[40,41,1139,1147,1222],varieti:1219,variou:[43,1176],vector:[40,41,447,450,835,838,840,930,944,949,1048,1054,1157,1166,1193,1203],vector_norm:[40,41,110,235,385,512,643,835],vector_to_skew_symmetric_matrix:[173,315,447,582,744,1048],verbos:1221,veri:[43,1176],verifi:43,via:[1120,1121,1128,1219],view:[1041,1046],vision:1176,visual:1219,volum:[1157,1162],vw_tm1:[1025,1028,1032],wai:[1219,1222],wait:[40,41,42,43],want:[43,1176,1219,1222],warn:[59,66,67,68,69,70],warp:[443,444,1041,1042],watch:1218,websit:43,weight:[1025,1027,1028,1030,1032,1033,1034,1157,1166,1167,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1205,1206,1209,1211,1212],weight_initi:[1193,1194,1195,1196,1197,1198,1199,1200,1202,1203],weights_path:[1205,1206],well:[40,41,930,971],were:[40,41,1076],what:[43,1176],when:[40,41,42,43,835,838,856,930,941,1009,1022,1076,1176,1205,1206,1219,1222],where:[40,41,43,258,406,670,814,826,835,838,850,851,852,930,933,940,942,946,959,973,980,991,1023,1120,1121,1128,1132,1133],wherea:43,wherebi:[1120,1129],whether:[15,18,19,40,41,42,814,822,850,851,852,854,855,856,874,887,891,895,900,903,905,906,916,920,921,922,929,930,932,937,938,950,953,958,962,969,971,974,978,979,984,1004,1011,1020,1021,1025,1028,1029,1030,1031,1032,1033,1034,1036,1072,1073,1074,1075,1076,1120,1121,1122,1124,1128,1129,1132,1133,1149,1150,1157,1165,1176,1182,1183,1193,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214],which:[40,41,42,43,454,804,805,806,807,808,809,810,811,812,835,836,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,865,866,874,879,880,881,882,885,886,887,888,890,892,896,898,899,900,906,911,916,920,929,930,933,936,945,947,949,950,951,953,963,964,965,966,972,973,981,982,983,990,991,992,993,995,998,999,1006,1010,1020,1022,1024,1025,1028,1029,1030,1032,1033,1034,1036,1038,1039,1041,1043,1048,1051,1058,1062,1076,1120,1124,1125,1126,1130,1131,1132,1133,1134,1135,1136,1139,1141,1142,1143,1144,1145,1146,1147,1149,1154,1157,1168,1169,1176,1182,1183,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1215,1216,1218,1219],whilst:43,whitespac:[40,41,42],who:43,whose:[804,808,814,815,816,819,820,831,833,835,836,841,842,930,936,941,1139,1140,1141,1142,1143,1145,1147],why:[1176,1177],width:[1041,1046],wiki:1222,wikipedia:1222,window:[1041,1046,1157,1158,1159,1160,1161,1162,1163,1164,1193,1194,1195,1196,1197,1198,1199,1200],wise:[40,41,814,817,823,824,828,829,930,942,957,960,961,986,988,997,1025,1028,1030,1032,1034,1055,1056,1057,1058,1059,1060,1061,1062,1065,1066,1067,1068,1070,1149,1150,1151,1152,1153,1154,1155,1156],wish:1219,with_bia:[1193,1203],with_cal:[930,953],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1025,1035],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1076,with_partial_v:[1205,1206],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,406,433,930,1006,1076],with_to_kv_fn:[1193,1204],with_to_out_fn:[1193,1204],with_to_q_fn:[1193,1204],within:[15,18,19,43,835,838,930,933,1132,1136],without:[40,41,43,930,994,996,1002,1120,1122,1219],wonder:1176,word:[15,16,17,930,933,1132,1136,1182,1183],work:[43,1218],worker:[856,865,866,1076],worker_class:[856,865,866,1076],worker_kwarg:1076,would:[43,1149,1154,1176,1219,1222],wrap:[15,40,41,42,43,404,406,438,443,447,451,452,454,930,941,1025,1039,1176],write:[40,41,43,1176,1177,1222],written:[43,1176,1222],ws_new:[1025,1028,1030,1032,1033,1034],x1_i:[814,817,823,824,829,930,957,1058,1065],x2_i:[814,817,823,824,829,930,957,1058,1065],x_feat_dim:[1157,1168],x_i:[814,815,816,818,819,820,821,822,825,827,828,831,832,833],x_in:[1176,1218],x_inv:[1048,1050],x_max:[406,930,942],x_min:[406,930,942],x_sub:1076,xkk:1222,xkkm1:1222,xkm1km1:1222,xs0:1076,xs_t:1076,year:[1176,1222],yet:[1120,1129,1222],yield:[930,1022],you:[43,1176,1218,1219,1222],your:[1176,1177,1218,1219,1222],your_awesome_project:1219,yourself:[43,1176],yourslef:43,youtub:43,zero:[40,41,77,211,352,479,610,804,805,808,814,828,829,835,840,850,851,852,930,946,991,998,999,1023,1024,1025,1027,1028,1032,1033,1157,1165,1176,1184,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1209,1210,1211,1212],zero_pad:[258,406,538,670,930],zeros_lik:[135,258,406,538,670,930],zip:1076,zk_e:1222},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","tensordot","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","tensordot","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","tensordot","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slodget","svd","tensordot","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":953,"function":[77,83,88,109,115,117,119,120,122,124,211,217,222,234,240,242,244,245,247,248,352,358,363,384,391,393,395,396,398,400,479,485,490,511,518,520,522,523,525,527,610,616,621,642,649,651,653,654,656,658,804,810,814,834,841,843,845,846,848,850],Ones:1189,Using:1219,abs:[259,539,671,931],aco:[755,1059],acosh:[89,223,364,491,622,815],activ:[195,339,465,602,782,1149,1179],adam:1210,adam_step:1027,adam_upd:1028,algebra:[110,173,235,315,385,447,512,582,643,744,835],all:[125,249,401,528,659,851],all_equ:932,all_nested_indic:1121,ani:[126,250,402,529,660,852],api:[0,43,75,209,350,477,608,802],arang:[136,260,407,540,672,933],arg_nam:934,argmax:[118,243,394,521,652,844],argmin:[137,408,541,673,935],args_to_ivi:16,args_to_n:17,argsort:[121,246,397,524,655,847],arithmet:1,arrai:[0,3,43,75,138,209,261,350,409,477,542,608,674,802,936],array_equ:[262,675,937],arrays_equ:938,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[756,1060],asinh:[90,365,492,623,816],assert_supports_inplac:939,atan2:[758,1062],atan:[757,1061],atanh:[759,1063],attribut:5,backend:[43,73],bilinear_resampl:[170,312,444,579,741,1042],binary_cross_entropi:1171,bitwis:7,bitwise_and:[91,224,366,493,624,817],broadcast_to:[263,676,940],builder:51,cache_fn:941,cast:[139,264,410,543,677,910],ceil:[92,225,367,494,625,818],choleski:[745,1049],choose_random_framework:61,citat:1176,clear_framework_stack:62,clear_mem_on_dev:[664,872],clip:[265,678,942],clip_matrix_norm:943,clip_vector_norm:944,clone:1091,clone_arrai:1092,clone_it:1093,clone_nest:1094,clonedit:1078,cloneditem:1077,clonednest:1079,closest_valid_dtyp:911,code:1222,comparison:9,compil:[266,411,679,854,855],concaten:[140,267,412,544,680,945],constant:[76,210,351,478,609,803],constant_pad:[268,545,681,946],contain:[40,41],container_typ:[682,947],content:1176,contribut:43,conv1d:[201,342,469,794,1158,1194],conv1d_transpos:[202,343,470,795,1159],conv1dtranspos:1195,conv2d:[203,344,471,604,796,1160,1196],conv2d_transpos:[204,345,472,797,1161],conv2dtranspos:1197,conv3d:[205,346,473,605,798,1162,1198],conv3d_transpos:[206,347,474,799,1163],conv3dtranspos:1199,convers:15,convert:[197,790,1182],convert_dtyp:912,copy_arrai:[683,948],copy_nest:1122,core:[127,251,403,530,661,853],cos:[93,368,495,626,819],cosh:[94,369,496,627,760,820,1064],cprint:1221,creat:43,creation:[77,211,352,479,610,804],cross:[269,684,949],cross_entropi:1172,cumprod:[141,270,413,685,950],cumsum:[686,951],current_framework:63,current_framework_str:[687,952],data:[83,87,217,221,358,362,485,489,616,620,810,813],debug_mod:45,debugg:44,default_devic:873,default_dtyp:913,default_float_dtyp:914,default_int_dtyp:915,default_nod:1095,depthwise_conv2d:[207,348,475,606,800,1164],depthwiseconv2d:1200,design:43,dev:[130,254,533,665,874],dev_clon:875,dev_clone_arrai:876,dev_clone_it:877,dev_clone_nest:878,dev_dist:879,dev_dist_arrai:880,dev_dist_it:881,dev_dist_nest:882,dev_from_str:[131,255,534,666,883],dev_to_str:[132,256,535,667,884],dev_unifi:885,dev_unify_arrai:886,dev_unify_it:887,dev_unify_nest:888,dev_util:889,devclonedit:859,devcloneditem:858,devclonednest:860,devdistit:862,devdistitem:861,devdistnest:863,devic:[20,128,252,404,531,662,856],devmapp:865,devmappermultiproc:866,diagon:[111,236,386,513,644,836],distribute_nest:1096,divid:1065,document:1176,dropout:[1165,1201],dtype:[142,271,414,546,688,906,916],dtype_bit:[143,272,415,547,689,917],dtype_from_str:[144,273,416,548,690,918],dtype_to_str:[145,274,417,549,691,919],ecosystem:52,einops_rearrang:954,einops_reduc:955,einops_repeat:956,einsum:[187,330,457,594,774,1140],elementwis:[88,222,363,490,621,814],empti:[78,212,353,480,611,805],equal:[95,370,497,628,957],erf:[453,761,1066],execute_with_gradi:[167,307,439,574,735,1029],exist:958,exp:[762,1067],expand_dim:[275,692,959],finfo:[85,219,360,487,618,811],firstlayersiren:1186,flip:[116,241,392,519,650,842],float_img_to_uint8_img:1043,floor:[276,693,960],floormod:[277,694,961],fomaml_step:1073,fork:43,fourier_encod:962,framework:59,full:[146,278,418,550,695,963],func:72,gather:[147,279,419,551,696,964],gather_nd:[148,280,420,552,697,965],geglu:1180,gelu:[340,466,783,1150,1181],gener:[22,135,258,406,538,670,930],get_all_arrays_in_memori:966,get_all_arrays_on_dev:890,get_framework:64,get_min_bas:967,get_min_denomin:968,get_num_dim:[698,969],get_referrers_recurs:970,glorotuniform:1187,gpu_is_avail:[891,1097],gradient:[24,166,306,438,573,734,1025],gradient_descent_upd:1030,gradient_imag:[171,313,445,580,742,1044],gym:53,handler:59,has_nan:971,ident:[149,281,421,553,699,972],iinfo:[86,220,361,488,619,812],imag:[26,169,311,443,578,740,1041],index_nest:1123,indices_wher:[150,282,422,700,973],initi:1184,inplac:11,inplace_arrays_support:974,inplace_decr:[151,283,423,554,701,975],inplace_incr:[152,284,424,555,702,976],inplace_upd:[153,285,425,556,703,977],inplace_variables_support:978,inv:[746,1050],invalid_dtyp:920,is_arrai:[154,286,426,557,704,979],is_float_dtyp:921,is_int_dtyp:922,is_vari:[168,308,440,575,736,1031],isfinit:[96,226,371,498,629,821],isinf:[287,558,705,980],isnan:[97,227,372,499,630,822],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,801,1218,1219,1222],ivymodul:[198,791],jax:74,keep:43,lamb:1211,lamb_upd:1032,lar:1212,lars_upd:1033,layer:[200,341,468,603,793,1157,1193],layer_norm:1175,layernorm:1208,leaky_relu:[784,1151],less:[98,228,373,500,631,823],less_equ:[99,374,501,632,824],linalg:[28,1048],linear:[110,173,235,315,385,447,512,582,643,744,835,1166,1203],linear_resampl:[155,288,427,559,706,981],linspac:[156,289,428,560,707,982],list:43,log10:[100,375,502,633,825],log1p:[101,376,503,634,826],log2:[102,377,504,635,827],log:[763,1068],logic:[30,177,320,451,586,751,1055],logical_and:[321,752,1056],logical_not:[103,229,378,505,636,828],logical_or:[104,322,379,506,637,753,829,1057],logspac:[157,290,429,561,708,983],loss:1170,lstm:1202,lstm_updat:1167,maml_step:1074,manipul:[115,240,391,518,649,841],map:1124,map_nest_at_index:1125,map_nest_at_indic:1126,match_kwarg:984,math:[32,178,323,452,587,754,1058],matmul:[291,562,709,985],matrix_norm:[174,316,448,583,747,1051],maximum:[710,986],mech:54,memori:55,meshgrid:[292,711,987],meta:[34,1072],method:[109,234,384,511,642,834],min:[123,399,526,657,849],minimum:[712,988],model:56,modul:[1205,1206,1218],multi:1076,multi_head_attent:1168,multi_index_nest:1127,multidevcontain:42,multidevit:869,multidevitem:868,multidevnest:870,multiheadattent:1204,multinodeit:1082,multinodeitem:1081,multinodenest:1083,multinomi:[180,325,455,589,767,1133],multiprocess:[713,989],mxnet:208,nativ:1218,neg:[105,230,380,507,638,830],nest:1120,nested_indices_wher:1128,nested_map:1129,network:1218,next:1176,node:[1076,1098],node_dist:1099,node_dist_arrai:1100,node_dist_it:1101,node_str:1102,node_to_str:1103,node_util:1104,nodedistit:1085,nodedistitem:1084,nodedistnest:1086,nodemapp:1088,nodemappermultiproc:1089,norm:[1174,1207],num_arrays_in_memori:990,num_arrays_on_dev:892,num_cpu_cor:893,num_gpu:[133,894,1105],numpi:349,nutshel:1176,one_hot:[158,430,563,714,991],ones:[79,213,354,481,612,806,992],ones_lik:[80,214,355,482,613,807],oper:[1,3,7,9,11,13],optim:[1209,1213],optimizer_upd:1034,overview:1176,percent_used_mem_on_dev:895,percent_used_mem_on_nod:1106,pinv:[317,748,1052],portabl:1222,print_all_arrays_in_memori:993,print_all_arrays_on_dev:896,profil:[129,253,405,532,663,871,1090],pull:43,queue_timeout:994,randint:[181,326,590,768,1134],random:[36,179,324,454,588,766,1132],random_crop:1045,random_norm:[182,327,591,769,1135],random_uniform:[183,328,592,770,1136],reduce_max:[188,331,458,595,775,1141],reduce_mean:[189,332,459,596,776,1142],reduce_min:[190,333,460,597,777,1143],reduce_prod:[191,334,461,598,778,1144],reduce_std:[335,1145],reduce_sum:[192,336,462,599,779,1146],reduce_var:[193,337,463,600,780,1147],reduct:[38,186,329,456,593,773,1139],reflect:13,relu:[785,1152],repeat:[293,715,995],reptile_step:1075,request:43,reshap:[716,996],robot:57,round:[294,717,997],run:1219,scaled_dot_product_attent:1169,scatter_flat:[159,295,431,564,718,998],scatter_nd:[160,296,432,565,719,999],search:[117,242,393,520,651,843],seed:[184,771,1137],sequenti:[1215,1216],set:[119,244,395,522,653,845],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:897,set_default_dtyp:923,set_default_float_dtyp:924,set_default_int_dtyp:925,set_default_nod:1107,set_exception_debug_mod:48,set_framework:65,set_min_bas:1000,set_min_denomin:1001,set_nest_at_index:1130,set_nest_at_indic:1131,set_queue_timeout:1002,set_split_factor:[898,1108],set_tmp_dir:1003,set_with_grad:1035,sgd:1214,shape:[720,1004],shape_to_tupl:1005,shuffl:[185,772,1138],sigmoid:[786,1153],signatur:[109,234,384,511,642,834],sin:[106,231,381,508,639,831],sinh:[764,1069],siren:1190,slodget:837,slogdet:[112,237,387,514,645],softmax:[196,467,787,1154],softplu:[788,1155],sort:[120,245,396,523,654,846],sparse_cross_entropi:1173,split:[161,297,433,566,721,1006],split_factor:[899,1109],split_func_cal:[900,1110],sqrt:[107,232,382,509,640,832],squeez:[162,298,434,567,722,1007],stable_divid:1008,stable_pow:1009,stack:[299,723,1010],stack_imag:[172,314,446,581,743,1046],standard:43,statist:[122,247,398,525,656,848],stop_gradi:[309,441,576,737,1036],str_to_nod:1111,submodul:43,supports_inplac:1011,svd:[113,238,388,515,646,838],swapax:[568,724,1012],tan:[765,1070],tanh:[108,233,383,510,641,789,833,1071,1156],tensordot:[389,516,647,839],tensorflow:476,tile:[300,569,725,1013],tmp_dir:1014,to_dev:[134,257,536,668,901],to_ivi:18,to_ivy_modul:[199,792,1183],to_list:[726,1015],to_n:19,to_nod:1112,to_numpi:[727,1016],to_scalar:[728,1017],todo:43,torch:607,total_mem_on_dev:902,total_mem_on_nod:1113,tpu_is_avail:[537,669,903,1114],train:1218,trainabl:1218,transpos:[163,301,435,729,1018],tree:1176,tril:[81,215,356,483,614,808],try_else_non:1019,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,217,221,358,362,485,489,616,620,810,813],uint8_img_to_float_img:1047,unifi:1115,unify_arrai:1116,unify_it:1117,unify_nest:1118,unset_debug_mod:49,unset_default_devic:904,unset_default_dtyp:926,unset_default_float_dtyp:927,unset_default_int_dtyp:928,unset_framework:71,unset_with_grad:1037,unstack:[164,302,436,570,730,1020],updat:43,used_mem_on_dev:905,used_mem_on_nod:1119,util:[124,248,400,527,658,850],valid_dtyp:929,value_is_nan:1021,variabl:[310,442,577,738,1038],variable_data:[739,1039],vector_norm:[114,239,390,517,648,840],vector_to_skew_symmetric_matrix:[176,319,450,585,750,1054],verbos:1220,vision:58,where:[303,731,1022,1176],why:1222,with_grad:1040,wrapper:72,write:1219,your:43,zero:[82,216,357,484,615,809,1192],zero_pad:[304,571,732,1023],zeros_lik:[165,305,437,572,733,1024]}})