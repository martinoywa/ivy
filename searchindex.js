Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/tensordot","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/tensordot","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/tensordot","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/tensordot","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/tensordot","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/tensordot.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/tensordot.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/tensordot.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/tensordot.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/tensordot.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[802,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[352,0,0,"-"],creation_functions:[353,0,0,"-"],data_type_functions:[359,0,0,"-"],data_types:[363,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[354,2,1,""],ones:[355,2,1,""],ones_like:[356,2,1,""],tril:[357,2,1,""],zeros:[358,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[359,1,1,""],finfo:[361,2,1,""],iinfo:[362,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[359,3,1,""],bits:[359,3,1,""],eps:[359,3,1,""],max:[359,3,1,""],min:[359,3,1,""],smallest_normal:[359,3,1,""]},"ivy.functional.backends.numpy.core":{device:[405,0,0,"-"],general:[407,0,0,"-"],gradients:[439,0,0,"-"],image:[444,0,0,"-"],linear_algebra:[448,0,0,"-"],logic:[452,0,0,"-"],math:[453,0,0,"-"],random:[455,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[406,1,1,""],clear_mem_on_dev:[405,2,1,""],dev:[405,2,1,""],dev_from_str:[405,2,1,""],dev_to_str:[405,2,1,""],gpu_is_available:[405,2,1,""],num_gpus:[405,2,1,""],to_dev:[405,2,1,""],tpu_is_available:[405,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[406,3,1,""],start:[406,3,1,""],stop:[406,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[407,2,1,""],arange:[408,2,1,""],argmin:[409,2,1,""],array:[410,2,1,""],asarray:[407,2,1,""],astype:[407,2,1,""],cast:[411,2,1,""],clip:[407,2,1,""],compile:[412,2,1,""],concatenate:[413,2,1,""],constant_pad:[407,2,1,""],container_types:[407,2,1,""],copy_array:[407,2,1,""],cumprod:[414,2,1,""],current_framework_str:[407,2,1,""],dtype:[415,2,1,""],dtype_bits:[416,2,1,""],dtype_from_str:[417,2,1,""],dtype_to_str:[418,2,1,""],floor:[407,2,1,""],floormod:[407,2,1,""],full:[419,2,1,""],gather:[420,2,1,""],gather_nd:[421,2,1,""],get_num_dims:[407,2,1,""],identity:[422,2,1,""],indices_where:[423,2,1,""],inplace_arrays_supported:[407,2,1,""],inplace_decrement:[424,2,1,""],inplace_increment:[425,2,1,""],inplace_update:[426,2,1,""],inplace_variables_supported:[407,2,1,""],is_array:[427,2,1,""],linear_resample:[428,2,1,""],linspace:[429,2,1,""],logspace:[430,2,1,""],matmul:[407,2,1,""],meshgrid:[407,2,1,""],multiprocessing:[407,2,1,""],one_hot:[431,2,1,""],round:[407,2,1,""],scatter_flat:[432,2,1,""],scatter_nd:[433,2,1,""],shape:[407,2,1,""],split:[434,2,1,""],squeeze:[435,2,1,""],to_list:[407,2,1,""],to_numpy:[407,2,1,""],to_scalar:[407,2,1,""],transpose:[436,2,1,""],unstack:[437,2,1,""],where:[407,2,1,""],zero_pad:[407,2,1,""],zeros_like:[438,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[440,2,1,""],is_variable:[441,2,1,""],stop_gradient:[442,2,1,""],variable:[443,2,1,""],variable_data:[439,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[445,2,1,""],gradient_image:[446,2,1,""],stack_images:[447,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[449,2,1,""],qr:[450,2,1,""],vector_to_skew_symmetric_matrix:[451,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[454,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[456,2,1,""],randint:[455,2,1,""],random_normal:[455,2,1,""],random_uniform:[455,2,1,""],seed:[455,2,1,""],shuffle:[455,2,1,""]},"ivy.functional.ivy":{array_api:[803,0,0,"-"],core:[854,0,0,"-"],nn:[1149,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[804,0,0,"-"],creation_functions:[805,0,0,"-"],data_type_functions:[811,0,0,"-"],data_types:[814,0,0,"-"],elementwise_functions:[815,0,0,"-"],function_and_method_signatures:[835,0,0,"-"],linear_algebra:[836,0,0,"-"],manipulation_functions:[842,0,0,"-"],searching_functions:[844,0,0,"-"],set_functions:[846,0,0,"-"],sorting_functions:[847,0,0,"-"],statistical_functions:[849,0,0,"-"],utility_functions:[851,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[804,4,1,""],nan:[804,4,1,""],pi:[804,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[806,2,1,""],ones:[807,2,1,""],ones_like:[808,2,1,""],tril:[809,2,1,""],zeros:[810,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[812,2,1,""],iinfo:[813,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[816,2,1,""],asinh:[817,2,1,""],bitwise_and:[818,2,1,""],ceil:[819,2,1,""],cos:[820,2,1,""],cosh:[821,2,1,""],isfinite:[822,2,1,""],isnan:[823,2,1,""],less:[824,2,1,""],less_equal:[825,2,1,""],log10:[826,2,1,""],log1p:[827,2,1,""],log2:[828,2,1,""],logical_not:[829,2,1,""],logical_or:[830,2,1,""],negative:[831,2,1,""],sin:[832,2,1,""],sqrt:[833,2,1,""],tanh:[834,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[837,2,1,""],slodget:[838,2,1,""],svd:[839,2,1,""],tensordot:[840,2,1,""],vector_norm:[841,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[843,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[845,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[848,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[850,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[852,2,1,""],any:[853,2,1,""]},"ivy.functional.ivy.core":{compilation:[855,0,0,"-"],device:[857,0,0,"-"],dtype:[907,0,0,"-"],general:[931,0,0,"-"],gradients:[1026,0,0,"-"],image:[1042,0,0,"-"],linalg:[1049,0,0,"-"],logic:[1056,0,0,"-"],math:[1059,0,0,"-"],meta:[1073,0,0,"-"],multi_node:[1077,0,0,"-"],nest:[1121,0,0,"-"],random:[1133,0,0,"-"],reductions:[1140,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[856,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[857,1,1,""],DevClonedItem:[859,1,1,""],DevClonedIter:[860,1,1,""],DevClonedNest:[861,1,1,""],DevDistItem:[862,1,1,""],DevDistIter:[863,1,1,""],DevDistNest:[864,1,1,""],DevManager:[857,1,1,""],DevMapper:[866,1,1,""],DevMapperMultiProc:[867,1,1,""],MultiDev:[857,1,1,""],MultiDevItem:[869,1,1,""],MultiDevIter:[870,1,1,""],MultiDevNest:[871,1,1,""],Profiler:[872,1,1,""],clear_mem_on_dev:[873,2,1,""],default_device:[874,2,1,""],dev:[875,2,1,""],dev_clone:[876,2,1,""],dev_clone_array:[877,2,1,""],dev_clone_iter:[878,2,1,""],dev_clone_nest:[879,2,1,""],dev_dist:[880,2,1,""],dev_dist_array:[881,2,1,""],dev_dist_iter:[882,2,1,""],dev_dist_nest:[883,2,1,""],dev_from_str:[884,2,1,""],dev_to_str:[885,2,1,""],dev_unify:[886,2,1,""],dev_unify_array:[887,2,1,""],dev_unify_iter:[888,2,1,""],dev_unify_nest:[889,2,1,""],dev_util:[890,2,1,""],get_all_arrays_on_dev:[891,2,1,""],gpu_is_available:[892,2,1,""],num_arrays_on_dev:[893,2,1,""],num_cpu_cores:[894,2,1,""],num_gpus:[895,2,1,""],percent_used_mem_on_dev:[896,2,1,""],print_all_arrays_on_dev:[897,2,1,""],set_default_device:[898,2,1,""],set_split_factor:[899,2,1,""],split_factor:[900,2,1,""],split_func_call:[901,2,1,""],to_dev:[902,2,1,""],total_mem_on_dev:[903,2,1,""],tpu_is_available:[904,2,1,""],unset_default_device:[905,2,1,""],used_mem_on_dev:[906,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[857,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[857,3,1,""],da_tune_step:[857,3,1,""],dim_size:[857,3,1,""],ds_tune_step:[857,3,1,""],map:[857,3,1,""],repeated_config_check:[857,3,1,""],tune_step:[857,3,1,""],tuned:[857,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[866,3,1,""],map:[866,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[867,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[857,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[869,3,1,""],items:[869,3,1,""],keys:[869,3,1,""],shape:[869,3,1,""],values:[869,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[870,3,1,""],at_dev:[870,3,1,""],at_devs:[870,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[871,3,1,""],at_dev:[871,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[872,3,1,""],start:[872,3,1,""],stop:[872,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[907,1,1,""],DefaultFloatDtype:[907,1,1,""],DefaultIntDtype:[907,1,1,""],astype:[907,2,1,""],cast:[911,2,1,""],closest_valid_dtype:[912,2,1,""],convert_dtype:[913,2,1,""],default_dtype:[914,2,1,""],default_float_dtype:[915,2,1,""],default_int_dtype:[916,2,1,""],dtype:[917,2,1,""],dtype_bits:[918,2,1,""],dtype_from_str:[919,2,1,""],dtype_to_str:[920,2,1,""],invalid_dtype:[921,2,1,""],is_float_dtype:[922,2,1,""],is_int_dtype:[923,2,1,""],set_default_dtype:[924,2,1,""],set_default_float_dtype:[925,2,1,""],set_default_int_dtype:[926,2,1,""],unset_default_dtype:[927,2,1,""],unset_default_float_dtype:[928,2,1,""],unset_default_int_dtype:[929,2,1,""],valid_dtype:[930,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[907,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[907,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[907,3,1,""]},"ivy.functional.ivy.core.general":{"default":[954,2,1,""],abs:[932,2,1,""],all_equal:[933,2,1,""],arange:[934,2,1,""],arg_names:[935,2,1,""],argmin:[936,2,1,""],array:[937,2,1,""],array_equal:[938,2,1,""],arrays_equal:[939,2,1,""],asarray:[931,2,1,""],assert_supports_inplace:[940,2,1,""],broadcast_to:[941,2,1,""],cache_fn:[942,2,1,""],clip:[943,2,1,""],clip_matrix_norm:[944,2,1,""],clip_vector_norm:[945,2,1,""],concatenate:[946,2,1,""],constant_pad:[947,2,1,""],container_types:[948,2,1,""],copy_array:[949,2,1,""],cross:[950,2,1,""],cumprod:[951,2,1,""],cumsum:[952,2,1,""],current_framework_str:[953,2,1,""],einops_rearrange:[955,2,1,""],einops_reduce:[956,2,1,""],einops_repeat:[957,2,1,""],equal:[958,2,1,""],exists:[959,2,1,""],expand_dims:[960,2,1,""],floor:[961,2,1,""],floormod:[962,2,1,""],fourier_encode:[963,2,1,""],full:[964,2,1,""],gather:[965,2,1,""],gather_nd:[966,2,1,""],get_all_arrays_in_memory:[967,2,1,""],get_min_base:[968,2,1,""],get_min_denominator:[969,2,1,""],get_num_dims:[970,2,1,""],get_referrers_recursive:[971,2,1,""],has_nans:[972,2,1,""],identity:[973,2,1,""],indices_where:[974,2,1,""],inplace_arrays_supported:[975,2,1,""],inplace_decrement:[976,2,1,""],inplace_increment:[977,2,1,""],inplace_update:[978,2,1,""],inplace_variables_supported:[979,2,1,""],is_array:[980,2,1,""],isinf:[981,2,1,""],linear_resample:[982,2,1,""],linspace:[983,2,1,""],logspace:[984,2,1,""],match_kwargs:[985,2,1,""],matmul:[986,2,1,""],maximum:[987,2,1,""],meshgrid:[988,2,1,""],minimum:[989,2,1,""],multiprocessing:[990,2,1,""],num_arrays_in_memory:[991,2,1,""],one_hot:[992,2,1,""],ones:[993,2,1,""],print_all_arrays_in_memory:[994,2,1,""],queue_timeout:[995,2,1,""],repeat:[996,2,1,""],reshape:[997,2,1,""],round:[998,2,1,""],scatter_flat:[999,2,1,""],scatter_nd:[1000,2,1,""],set_min_base:[1001,2,1,""],set_min_denominator:[1002,2,1,""],set_queue_timeout:[1003,2,1,""],set_tmp_dir:[1004,2,1,""],shape:[1005,2,1,""],shape_to_tuple:[1006,2,1,""],split:[1007,2,1,""],squeeze:[1008,2,1,""],stable_divide:[1009,2,1,""],stable_pow:[1010,2,1,""],stack:[1011,2,1,""],supports_inplace:[1012,2,1,""],swapaxes:[1013,2,1,""],tile:[1014,2,1,""],tmp_dir:[1015,2,1,""],to_list:[1016,2,1,""],to_numpy:[1017,2,1,""],to_scalar:[1018,2,1,""],transpose:[1019,2,1,""],try_else_none:[1020,2,1,""],unstack:[1021,2,1,""],value_is_nan:[1022,2,1,""],where:[1023,2,1,""],zero_pad:[1024,2,1,""],zeros_like:[1025,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1026,1,1,""],adam_step:[1028,2,1,""],adam_update:[1029,2,1,""],execute_with_gradients:[1030,2,1,""],gradient_descent_update:[1031,2,1,""],is_variable:[1032,2,1,""],lamb_update:[1033,2,1,""],lars_update:[1034,2,1,""],optimizer_update:[1035,2,1,""],set_with_grads:[1036,2,1,""],stop_gradient:[1037,2,1,""],unset_with_grads:[1038,2,1,""],variable:[1039,2,1,""],variable_data:[1040,2,1,""],with_grads:[1041,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1026,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1043,2,1,""],float_img_to_uint8_img:[1044,2,1,""],gradient_image:[1045,2,1,""],random_crop:[1046,2,1,""],stack_images:[1047,2,1,""],uint8_img_to_float_img:[1048,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1050,2,1,""],inv:[1051,2,1,""],matrix_norm:[1052,2,1,""],pinv:[1053,2,1,""],qr:[1054,2,1,""],vector_to_skew_symmetric_matrix:[1055,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1057,2,1,""],logical_or:[1058,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1060,2,1,""],asin:[1061,2,1,""],atan2:[1063,2,1,""],atan:[1062,2,1,""],atanh:[1064,2,1,""],cosh:[1065,2,1,""],divide:[1066,2,1,""],erf:[1067,2,1,""],exp:[1068,2,1,""],log:[1069,2,1,""],sinh:[1070,2,1,""],tan:[1071,2,1,""],tanh:[1072,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1074,2,1,""],maml_step:[1075,2,1,""],reptile_step:[1076,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1077,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1122,2,1,""],copy_nest:[1123,2,1,""],index_nest:[1124,2,1,""],map:[1125,2,1,""],map_nest_at_index:[1126,2,1,""],map_nest_at_indices:[1127,2,1,""],multi_index_nest:[1128,2,1,""],nested_indices_where:[1129,2,1,""],nested_map:[1130,2,1,""],set_nest_at_index:[1131,2,1,""],set_nest_at_indices:[1132,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1134,2,1,""],randint:[1135,2,1,""],random_normal:[1136,2,1,""],random_uniform:[1137,2,1,""],seed:[1138,2,1,""],shuffle:[1139,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1141,2,1,""],reduce_max:[1142,2,1,""],reduce_mean:[1143,2,1,""],reduce_min:[1144,2,1,""],reduce_prod:[1145,2,1,""],reduce_std:[1146,2,1,""],reduce_sum:[1147,2,1,""],reduce_var:[1148,2,1,""]},"ivy.functional.ivy.nn":{activations:[1150,0,0,"-"],layers:[1158,0,0,"-"],losses:[1171,0,0,"-"],norms:[1175,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1151,2,1,""],leaky_relu:[1152,2,1,""],relu:[1153,2,1,""],sigmoid:[1154,2,1,""],softmax:[1155,2,1,""],softplus:[1156,2,1,""],tanh:[1157,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1159,2,1,""],conv1d_transpose:[1160,2,1,""],conv2d:[1161,2,1,""],conv2d_transpose:[1162,2,1,""],conv3d:[1163,2,1,""],conv3d_transpose:[1164,2,1,""],depthwise_conv2d:[1165,2,1,""],dropout:[1166,2,1,""],linear:[1167,2,1,""],lstm_update:[1168,2,1,""],multi_head_attention:[1169,2,1,""],scaled_dot_product_attention:[1170,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1172,2,1,""],cross_entropy:[1173,2,1,""],sparse_cross_entropy:[1174,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1176,2,1,""]},"ivy.stateful":{activations:[1180,0,0,"-"],converters:[1183,0,0,"-"],initializers:[1185,0,0,"-"],layers:[1194,0,0,"-"],module:[1206,0,0,"-"],norms:[1208,0,0,"-"],optimizers:[1210,0,0,"-"],sequential:[1216,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1181,1,1,""],GELU:[1182,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1181,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1182,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1184,2,1,""]},"ivy.stateful.initializers":{Constant:[1185,1,1,""],FirstLayerSiren:[1187,1,1,""],GlorotUniform:[1188,1,1,""],KaimingNormal:[1185,1,1,""],Ones:[1190,1,1,""],Siren:[1191,1,1,""],Uniform:[1185,1,1,""],Zeros:[1193,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1185,3,1,""],create_variables:[1185,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1187,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1188,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1185,3,1,""],create_variables:[1185,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1190,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1191,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1185,3,1,""],create_variables:[1185,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1193,3,1,""]},"ivy.stateful.layers":{Conv1D:[1195,1,1,""],Conv1DTranspose:[1196,1,1,""],Conv2D:[1197,1,1,""],Conv2DTranspose:[1198,1,1,""],Conv3D:[1199,1,1,""],Conv3DTranspose:[1200,1,1,""],DepthwiseConv2D:[1201,1,1,""],Dropout:[1202,1,1,""],LSTM:[1203,1,1,""],Linear:[1204,1,1,""],MultiHeadAttention:[1205,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1195,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1196,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1197,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1198,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1199,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1200,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1201,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1202,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1203,3,1,""],get_initial_state:[1203,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1204,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1205,3,1,""]},"ivy.stateful.module":{Module:[1207,1,1,""]},"ivy.stateful.module.Module":{__init__:[1207,3,1,""],build:[1207,3,1,""],build_mode:[1207,3,1,""],built:[1207,3,1,""],check_submod_rets:[1207,3,1,""],get_mod_key:[1207,3,1,""],mod_depth:[1207,3,1,""],mod_height:[1207,3,1,""],mod_with_top_mod_key_chain:[1207,3,1,""],save_weights:[1207,3,1,""],show_mod_in_top_mod:[1207,3,1,""],show_structure:[1207,3,1,""],show_v_in_top_v:[1207,3,1,""],sub_mods:[1207,3,1,""],track_submod_call_order:[1207,3,1,""],track_submod_rets:[1207,3,1,""],v_with_top_v_key_chains:[1207,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1209,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1209,3,1,""]},"ivy.stateful.optimizers":{Adam:[1211,1,1,""],LAMB:[1212,1,1,""],LARS:[1213,1,1,""],Optimizer:[1214,1,1,""],SGD:[1215,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1211,3,1,""],set_state:[1211,3,1,""],state:[1211,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1212,3,1,""],set_state:[1212,3,1,""],state:[1212,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1213,3,1,""],set_state:[1213,3,1,""],state:[1213,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1214,3,1,""],set_state:[1214,3,1,""],step:[1214,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1215,3,1,""],set_state:[1215,3,1,""],state:[1215,3,1,""]},"ivy.stateful.sequential":{Sequential:[1217,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1217,3,1,""]},"ivy.verbosity":{cprint:[1222,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1221,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1210,1211,1212],"02886":1177,"100":[1077,1177,1219],"141592653589793":804,"2021":1177,"2102":1177,"360":[1059,1071],"718281828459045":804,"754":[804,811,812,815,833],"999":[1026,1028,1029,1033,1210,1211,1212],"abstract":[857,872,1177,1210,1214],"boolean":[40,41,815,818,829,830,857,892,904,907,921,930,931,933,938,939,972,974,975,979,980,981,1012,1022,1026,1032,1056,1057,1058,1073,1074,1075,1077],"break":43,"case":[15,18,19,40,41,42,43,815,816,817,819,820,821,826,828,832,833,857,896,903,906,931,934,997,999,1000,1049,1052,1054,1077,1121,1124,1128,1177,1194,1205,1206,1207,1210,1214,1223],"catch":[931,954],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,359,405,406,811,813,857,859,860,861,862,863,864,866,867,869,870,871,872,884,885,907,931,935,985,1026,1040,1077,1121,1123,1130,1171,1173,1174,1177,1180,1181,1182,1183,1184,1185,1187,1188,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1223],"default":[15,18,19,40,41,42,43,805,806,807,808,809,810,836,837,840,841,842,843,844,845,847,848,849,850,851,852,853,855,856,857,866,867,874,875,879,880,881,882,883,886,887,888,889,896,899,900,901,906,907,914,915,916,917,931,933,934,936,944,945,946,947,950,951,952,963,964,965,970,972,973,982,984,985,988,990,993,995,996,999,1000,1003,1005,1007,1009,1010,1019,1021,1022,1026,1029,1031,1032,1033,1034,1035,1037,1041,1049,1052,1054,1073,1074,1075,1076,1077,1121,1122,1123,1125,1129,1130,1133,1134,1136,1137,1140,1142,1143,1144,1145,1146,1147,1148,1150,1151,1155,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],"final":[40,41,43,931,963,983,984,1077,1194,1205,1220],"float":[40,41,42,804,805,806,807,810,811,812,815,816,817,819,820,821,826,828,832,833,834,836,841,857,866,867,890,896,899,903,906,907,915,922,931,934,944,945,947,963,964,968,969,984,1001,1002,1003,1009,1010,1026,1028,1029,1031,1033,1034,1035,1042,1044,1048,1059,1066,1073,1074,1075,1076,1077,1133,1136,1137,1150,1152,1158,1166,1169,1170,1171,1172,1173,1174,1175,1176,1194,1202,1205,1208,1209,1210,1211,1212,1213,1214,1215],"function":[15,40,41,43,354,355,356,357,358,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,804,806,807,808,809,810,812,813,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,841,843,845,848,850,852,853,855,856,857,859,860,861,862,863,864,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1180,1181,1182,1210,1213,1214,1215,1219,1220,1223],"import":[43,1177,1220,1223],"int":[40,41,42,43,353,354,355,357,358,455,805,806,807,809,810,811,812,813,836,837,840,841,842,843,844,845,847,848,849,850,851,852,853,855,856,857,879,880,881,882,883,886,887,888,889,894,895,901,907,916,918,923,931,936,941,946,947,951,952,955,956,957,960,963,964,965,970,973,982,983,984,992,993,996,997,999,1000,1005,1006,1007,1008,1011,1013,1014,1019,1021,1024,1026,1028,1029,1033,1042,1046,1047,1049,1052,1073,1074,1075,1076,1077,1121,1130,1133,1134,1135,1137,1138,1140,1142,1143,1144,1145,1146,1147,1148,1150,1155,1158,1159,1160,1161,1162,1163,1164,1165,1169,1171,1173,1174,1175,1176,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1208,1209],"long":[43,1158,1168],"new":[40,41,43,455,805,806,807,808,810,815,827,907,911,931,932,941,955,956,957,960,963,964,965,966,993,997,999,1000,1001,1002,1009,1010,1011,1026,1029,1031,1033,1034,1035,1042,1044,1046,1048,1059,1064,1065,1070,1072,1077,1121,1131,1132,1133,1134,1175,1176,1177,1183,1184,1194,1204,1208,1209,1210,1211,1212,1213,1214,1215,1220,1223],"public":[931,948],"return":[15,16,17,18,19,40,41,42,43,455,805,806,807,808,809,810,815,816,817,818,819,820,821,822,823,824,825,826,828,829,830,831,832,833,834,836,837,838,839,840,841,844,845,847,848,849,850,851,852,853,855,856,857,866,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,892,893,895,896,900,901,902,903,904,906,907,911,912,913,914,915,916,917,918,919,920,921,922,923,930,931,932,933,934,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,970,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,996,997,998,999,1000,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1033,1034,1035,1037,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1121,1122,1123,1125,1129,1130,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1183,1184,1194,1203,1204,1210,1214,1219,1220,1223],"short":[43,1158,1168,1177,1223],"static":[40,41,855,856],"super":1077,"true":[40,41,42,407,412,439,442,455,456,815,822,823,829,830,836,839,841,844,845,847,848,851,852,853,855,856,857,931,933,940,942,959,963,972,974,1022,1023,1026,1029,1031,1032,1033,1034,1035,1037,1049,1052,1073,1074,1075,1076,1077,1121,1122,1129,1133,1134,1140,1142,1143,1144,1145,1146,1147,1148,1150,1151,1158,1166,1171,1172,1173,1174,1194,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],"try":[40,41,931,1020,1077],"var":[40,41,1073,1074,1075,1223],"while":[40,41,42,815,829,830,1077],AND:[815,818,851,852,1056,1057],But:1223,For:[43,815,816,817,819,820,821,826,828,832,833,931,934,943,1011,1026,1032,1040,1049,1054,1059,1060,1177,1183,1184,1220,1223],Its:[1059,1062],NOT:[815,829],Not:804,One:[40,41,43,931,956,997,1133,1135,1223],Ones:[1177,1185],PRs:43,Such:[931,948],That:1220,The:[15,16,17,18,19,40,41,42,43,805,809,815,816,817,818,819,820,821,822,823,824,825,826,828,829,830,832,833,834,836,837,838,839,840,841,842,843,847,848,851,852,853,855,856,857,866,867,873,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,896,899,900,901,902,903,906,907,911,912,913,918,919,920,921,930,931,934,937,938,941,942,944,945,946,947,949,950,953,954,958,963,965,966,973,976,977,978,980,982,984,986,988,990,993,996,997,999,1000,1001,1002,1003,1006,1007,1008,1009,1010,1011,1014,1022,1025,1026,1028,1029,1031,1033,1034,1035,1037,1040,1042,1044,1046,1048,1049,1052,1054,1059,1060,1061,1062,1066,1067,1068,1069,1071,1073,1074,1075,1076,1077,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1177,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1220,1223],There:[43,1177,1220],These:[43,1177],Use:43,Used:[1121,1122,1129,1206,1207],Using:[1177,1178,1223],With:[40,41,844,845,1049,1052,1140,1142,1143,1144,1145,1146,1147,1148,1177,1219,1223],__array__:[931,937],__call__:[1194,1205,1206,1207],__del__:1077,__dict__:[1077,1220],__enter__:1077,__exit__:1077,__getitem__:1077,__getstate__:1077,__init__:[40,41,42,43,59,60,84,219,359,360,405,406,487,618,857,858,865,866,867,868,869,870,871,872,907,908,909,910,1026,1027,1077,1081,1088,1177,1180,1181,1182,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1223],__iter__:1077,__len__:1077,__next__:1077,__repr__:1077,_assign_vari:1219,_axi:1077,_base:[1121,1122,1129],_compute_node_da_ratio:1077,_compute_node_strs_da:1077,_concat_unify_arrai:1077,_counter:1077,_cur_framework:[43,1077],_da_direct:1077,_da_directions_flip:1077,_da_step_tim:1077,_da_tim:1077,_da_tune_count:1077,_data:1077,_delta_da_dim_s:1077,_delta_sf:1077,_dict:1077,_dim_siz:1077,_first_da_tune_step:1077,_first_ns_tune_step:1077,_fn:1077,_forward:[1177,1219],_get_kalman_param:1223,_get_prior:1223,_get_some_model:1223,_index:[1121,1122,1129],_input_queu:1077,_length:1077,_max_depth:1077,_max_node_dim_step_ratio:1077,_max_node_dim_step_s:1077,_max_split_factor_step_s:1077,_mean_unify_arrai:1077,_min_bas:[931,1010,1175,1176,1208,1209],_min_denomin:[931,1009],_min_node_dim_s:1077,_min_sf_tune_step:1077,_min_unit_node_tune_step:1077,_model:1223,_node_mapp:1077,_node_percent_mem:1077,_node_str:1077,_node_str_da_ratio:1077,_node_strs_da:1077,_node_strs_kei:1077,_node_strs_n:1077,_node_util:1077,_ns_step_tim:1077,_ns_time:1077,_ns_tune_count:1077,_num_nod:1077,_num_work:1077,_observed_config:1077,_output_queu:1077,_paramet:1219,_percent_mem_inc_per_sf:1077,_percent_mem_inc_per_unit_da_dim:1077,_percent_util_inc_per_unit_da_dim:1077,_ret_fn:1077,_safety_factor:1077,_save_dir:1077,_shift_da_split:1077,_shift_n:1077,_slice:1077,_step:[1210,1214],_sum_unify_arrai:1077,_timeout:1077,_tune:1077,_tune_da:1077,_tune_n:1077,_tune_step:1077,_unit_da_tune_count:1077,_unroll_step:1223,_with_node_mappig:1077,_worker:1077,_worker_class:1077,_worker_fn:1077,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,857,866,872,1077,1206,1207,1210,1214],abil:1177,abl:[40,41],about:[811,812,813],abov:[43,805,809,836,837,1133,1135],above_height:[40,41],abs:[259,407,539,671,836,841,931,1077],absolut:[40,41,836,838,931,932],abstractmethod:1077,accept:[15,43,815,829,830,1177],access:[40,41,43,1220],accord:[40,41,811,812,931,947,965,999,1000,1019,1024],accordingli:[836,841,851,852,853],accur:[59,359,405,406,857,869,870,871,872,907,1026,1185,1187,1188,1190,1191,1193],aco:[755,1059],acosh:[88,223,364,491,622,815],across:[40,41,857,866,867,876,877,879,880,881,882,883,889,899,900,931,936,938,939,1077,1121,1125],act:43,activ:[1151,1152,1153,1154,1155,1156,1157,1177,1181,1182],actual:1220,adam:[1026,1028,1029,1033,1177,1210,1212,1219],adam_step:1026,adam_upd:1026,adapt:[1026,1034,1210,1213],add:[40,41,43,1077,1171,1172,1173,1174,1175,1176,1177,1208,1209,1220],added:[43,931,1009,1010,1216,1217],adding:[43,931,941],addit:[40,41,43,931,955,956,957,1175,1176,1194,1204],addition:43,address:43,adher:43,adjac:[931,934],adopt:[43,931,948],affect:[931,934],affin:[1208,1209],after:[815,833,931,982,1026,1029,1030,1031,1033,1034,1035,1042,1043,1175,1176,1210,1211,1212,1213,1214,1215,1223],after_1:[931,947,1024],after_n:[931,947,1024],again:43,against:[40,41,844,845,1049,1052,1140,1142,1143,1144,1145,1146,1147,1148],agnost:[43,1177,1219,1220],aim:1223,algebra:1049,algorithm:[1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201,1223],align:[40,41,43,931,941],aliv:[857,891,893,897,931,967,991,994],all:[15,16,17,18,19,40,41,43,125,249,401,528,659,805,809,836,840,841,842,843,851,855,856,857,866,891,897,931,932,933,938,939,948,967,973,994,1008,1049,1054,1073,1074,1075,1076,1077,1121,1122,1123,1129,1130,1133,1134,1137,1140,1142,1143,1144,1145,1146,1147,1148,1158,1168,1177,1220,1223],all_depth:[40,41],all_equ:931,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1121,all_tru:[40,41],alloc:[43,805,809,857,1077],allow:[931,983,984,985,1206,1207],allow_dupl:[931,985],alon:[857,896,906,1077,1177],along:[40,41,43,455,836,841,842,843,844,845,847,848,849,850,851,852,853,857,880,881,882,883,886,887,888,889,901,931,946,951,952,965,982,983,984,996,1007,1011,1014,1021,1049,1052,1073,1074,1075,1076,1077,1133,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148],alongsid:[1219,1220],alpha:[1150,1152],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,815,819,857,1077],also:[40,41,43,931,934,1026,1029,1073,1074,1075,1076,1121,1122,1123,1129,1130,1158,1167,1177,1194,1204,1219],altern:1219,alwai:[40,41,43,1026,1032,1037],among:[40,41],amount:[857,903,1077,1177],angl:[815,821,834,1059,1060,1063],ani:[15,16,17,18,19,40,41,43,125,249,401,528,659,815,825,851,855,856,857,859,862,866,867,869,878,879,882,883,888,931,933,934,937,954,955,956,957,958,959,972,980,985,1009,1010,1026,1030,1077,1121,1122,1125,1129,1130,1131,1132,1133,1137,1177,1183,1184,1206,1207,1219,1220,1223],anoth:[40,41,43,907,913,1177],another_backend:43,anyth:[43,1223],anywai:43,apart:43,api:[1177,1178],appear:[43,931,960],append:[40,41,836,837,1077],appli:[15,18,19,40,41,836,839,931,955,956,957,1026,1033,1034,1056,1057,1058,1073,1074,1075,1121,1125,1128,1130,1150,1151,1152,1153,1154,1155,1156,1157,1158,1167,1169,1170,1175,1176,1177,1180,1181,1182,1208,1209],applic:[1121,1125,1130,1158,1169,1170,1177,1223],appropri:[844,845],approxim:[815,816,817,820,821,826,827,828,832,834,1150,1151],arang:[136,259,407,455,539,671,931,983,984],arbitrari:[40,41,857,886,887,889,1077],arc:[1059,1063],arcco:[1059,1060],arctan:[1059,1062],area:[815,816,817,1177],arg:[15,16,17,40,41,43,59,63,857,866,879,883,889,901,931,955,956,957,1000,1077,1183,1184,1206,1207],arg_nam:931,arg_stateful_idx:[1206,1207],argmax:[118,243,394,521,652,844],argmin:[136,407,539,671,931],args_clon:1077,args_dist:1077,args_to_ivi:[15,1177],args_to_n:[15,1177],args_uni:1077,argsort:[121,246,397,524,655,847],argument:[15,16,17,18,19,40,41,42,43,59,63,855,856,857,866,867,879,883,889,931,934,935,942,954,985,1000,1059,1060,1077,1121,1125,1183,1184,1206,1207],aris:[1177,1223],arithmet:[1140,1143,1146,1148],arithmetic_oper:[0,1,2],around:[40,41,42],arr:455,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,136,259,407,455,539,671,805,806,807,808,809,810,811,812,813,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,845,847,848,849,850,851,852,853,857,875,876,877,880,881,882,883,886,887,888,889,891,893,897,901,902,907,911,917,922,923,931,932,933,934,936,938,939,940,941,943,944,945,946,947,949,950,951,952,955,956,957,958,960,961,962,963,964,965,966,967,970,972,973,974,975,976,977,978,980,981,982,983,984,986,987,988,989,991,992,993,994,996,997,998,999,1000,1005,1007,1008,1011,1012,1013,1014,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1028,1029,1032,1033,1037,1039,1040,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1077,1121,1123,1130,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1194,1202,1203,1205,1210,1214,1219,1220],arrang:[931,955],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,353,354,355,356,357,358,359,361,362,804,805,806,807,808,809,810,811,812,813,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,845,847,848,849,850,851,852,853],array_api_methods_to_test:43,array_equ:[259,671,931],array_lik:[455,931,937],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,931],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1177],arraywithgener:[22,1177],arraywithgradi:[24,1177],arraywithimag:[26,1177],arraywithlinalg:[28,1177],arraywithlog:[30,1177],arraywithmath:[32,1177],arraywithmeta:[34,1177],arraywithrandom:[36,1177],arraywithreduct:[38,1177],arriv:[40,41,42],articl:1177,arxiv:1177,as_arrai:[40,41,931,970,1005],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[405,407,415,857,875,907,914,915,916,917],as_tensor:407,as_vari:[40,41],as_zero:[40,41],asarrai:[407,931],ascend:[847,848],asin:[755,1059],asinh:[88,364,491,622,815],aspect:[1042,1047],assert:[40,41,931,940,1077],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:931,associ:[43,1049,1055],assum:[815,820,832,1220,1223],astyp:[407,907],asynchron:[40,41,42],at_dev:[40,42,857,870,871],at_kei:[40,41],at_key_chain:[40,41],at_nod:1077,atan2:[755,1059],atan:[755,1059],atanh:[755,1059],attent:[43,1158,1169,1170,1194,1205],attribut:[0,6,40,41,811,812,813,931,1025],audienc:[1177,1220],author:1177,automat:43,avail:[40,41,43,857,892,894,895,904,931,956,1077],averag:[1026,1028,1029,1033,1073,1074,1075,1140,1143],average_across_step:[1073,1074,1075],avoid:[43,857,1077,1220],axes:[40,41,43,407,436,448,449,836,840,841,842,843,844,845,849,850,851,852,853,857,901,931,936,947,960,1013,1019,1024,1049,1052,1077,1140,1142,1143,1144,1145,1146,1147,1148],axes_length:[40,41,931,955,956,957],axi:[40,41,407,409,413,414,420,428,429,430,434,435,437,836,837,841,842,843,844,845,847,848,849,850,851,852,853,857,859,862,869,880,881,882,883,886,887,888,889,901,931,936,946,947,950,951,952,960,965,982,983,984,996,1007,1008,1011,1013,1014,1021,1024,1077,1133,1139,1140,1142,1143,1144,1145,1146,1147,1148,1150,1155,1171,1173,1174],axis0:[40,41,931,1013],axis1:[40,41,836,837,931,1013],axis2:[836,837],back:[43,1206,1207,1210,1214],backend:[15,17,19,40,41,353,354,355,356,357,358,359,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,857,892,895,904,907,913,921,930,931,975,979,1026,1029,1031,1033,1034,1035,1040,1077,1177,1178,1183,1184,1210,1211,1212,1213,1214,1215,1219,1220,1223],backend_nam:43,background:[1177,1220],backprop:1223,backward:[851,852,853,1219],band:[931,963],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,359,405,406,407,430,815,826,827,828,857,859,860,861,862,863,864,866,867,869,870,871,872,907,931,968,984,1001,1010,1026,1077,1140,1141,1177,1180,1181,1182,1185,1187,1188,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1223],basi:43,batch:[40,41,836,839,841,857,899,900,931,963,973,1042,1046,1073,1074,1075,1076,1077,1158,1167,1175,1176,1208,1209],batch_shap:[407,422,931,973,992,1042,1043,1044,1045,1046,1047,1048,1049,1055,1133,1134,1158,1168,1169,1170,1194,1203],batch_siz:[455,456,1077,1133,1134,1158,1159,1160,1161,1162,1163,1164,1165],bayesian:1223,becaus:[43,931,934],becom:[43,931,943,1059,1063,1223],been:[931,955,956,957,1133,1134],befor:[40,41,43,857,901,1073,1074,1075,1077,1121,1130,1140,1142,1143,1144,1145,1146,1147,1148,1158,1169,1170,1223],before_1:[931,947,1024],before_n:[931,947,1024],begin:[1121,1122,1129,1220],behaviour:[43,1223],behind:[1026,1029,1031,1033,1034,1035,1177],being:[40,41,43,931,934,995,1003,1077],believ:43,belong:[40,41],below:[43,805,809,836,837,1177,1220,1223],below_depth:[40,41],benefit:1177,bernoul:[1158,1166,1194,1202],best:[43,931,985,1177],beta1:[1026,1028,1029,1033,1210,1211,1212],beta2:[1026,1028,1029,1033,1210,1211,1212],beta:[1175,1176],between:[40,41,42,811,812,931,934,1049,1054,1121,1125,1133,1135,1171,1173,1174,1210,1212],bia:[1158,1167,1168,1194,1195,1196,1197,1198,1199,1200,1201,1204],bias_initi:[1194,1195,1196,1197,1198,1199,1200,1201,1204],bilinear:[1042,1043],bilinear_resampl:[170,312,444,579,741,1042],bilinearli:[1042,1043],binari:[815,818,1171,1172],binary_cross_entropi:1171,bit:[359,811,812,813,907,918,1042,1044,1048,1177],bitwis:[815,818],bitwise_and:[88,223,364,491,622,815],bitwise_oper:[0,7,8],block:[1177,1220],bool:[15,18,19,40,41,42,43,815,822,823,824,825,829,830,836,839,841,844,845,847,848,849,850,851,852,853,855,856,857,875,888,892,896,901,904,906,907,917,931,933,938,939,951,954,958,959,963,970,972,980,985,1005,1007,1021,1022,1023,1026,1029,1030,1031,1032,1033,1034,1035,1037,1049,1052,1073,1074,1075,1076,1077,1121,1122,1123,1125,1129,1130,1133,1134,1140,1142,1143,1144,1145,1146,1147,1148,1150,1151,1158,1166,1183,1184,1194,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],both:[43,931,950],bottom:1177,boundari:[40,41,1133,1137],branch:[43,855,856],brittl:43,broadcast:[40,41,815,818,824,825,830,836,841,844,845,851,852,853,931,941,958,987,988,989,996,1049,1052,1059,1063,1066,1140,1142,1143,1144,1145,1146,1147,1148],broadcast_to:[259,671,931],build:[1077,1177,1194,1205,1206,1207],build_mod:[1194,1205,1206,1207],builder:[43,1177],built:[857,931,934,1077,1194,1205,1206,1207],busi:43,bypass:1220,cach:[857,873,931,942],cache_fn:931,calcul:[40,41,42,815,816,817,820,821,826,827,828,832,833,834,1059,1066],call:[43,857,901,931,995,1003,1020,1026,1030,1077,1121,1122,1125,1129,1194,1205,1206,1207,1210,1214,1220,1223],callabl:[40,41,855,856,857,866,867,901,931,942,954,956,985,1020,1073,1074,1075,1076,1077,1121,1125,1126,1127,1129,1130,1158,1169],can:[43,857,899,900,901,931,997,1042,1044,1077,1177,1219,1220,1223],cancel_join_thread:1077,cannot:43,captur:1177,cast:[40,41,136,259,407,539,671,907,931,946,1042,1044,1048],catch_except:[931,954],categori:43,caus:43,ceil:[88,223,364,491,622,815,931,934],cell:[1158,1168,1194,1203],certain:[40,41,931,934,983,984],chain:[40,41,1073,1074,1075,1216,1217],chang:[43,857,931,997,1077,1121,1123,1130,1177,1219],channel:[931,963,1042,1044,1045,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204],check:[15,16,17,18,19,40,41,43,857,896,906,907,912,921,930,931,940,959,972,980,1012,1022,1026,1032,1077,1121,1122,1129,1177,1220],check_nest:[1121,1129],check_shap:[40,41],check_submod_ret:[1206,1207],check_typ:[40,41],choic:[1177,1220],choleski:[745,1049],choos:[815,829,830,931,1023,1049,1054,1059,1063,1177],choose_random_framework:59,chosen:[40,41,931,934,1023],chunk:[857,899,900,901,1077],chunk_siz:[857,901,1077],circl:[1059,1060,1061],clark:1177,clear:[43,857,873,1077],clear_framework_stack:59,clear_mem_on_dev:[405,663,857],click:1177,clip:[40,41,259,407,671,931,944,945,987,989,1177],clip_matrix_norm:931,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,931],clipped_delta:1077,clone:[40,41,857,876,877,878,879,1077],clone_arrai:1077,clone_it:1077,clone_nest:1077,clonedit:1077,cloneditem:1077,clonednest:1077,close:[43,1042,1047,1059,1061,1077,1223],closest:[815,819,907,912],closest_valid_dtyp:907,code:[40,41,42,43,455,1177,1178,1219,1220],codebas:[857,899,900,1077,1177,1220,1223],codomain:[815,816,817,820,821,826,828,832,833,834],colab:1177,collect:[15,40,41,405,407,439,444,448,452,453,455,855,857,907,931,1026,1042,1049,1056,1059,1077,1121,1133,1140,1150,1158,1171,1175,1180,1194,1208,1210],color:[40,41,42,1221,1222],column:[931,973],combin:[40,41,42,1042,1047,1177,1223],combined_batch_s:1077,come:1220,command:1177,comment:43,commit:1223,common:[40,41,43,1059,1063],common_key_chain:[40,41],commun:[43,1177,1220],communuti:43,compar:[40,41,847,848,931,933,938,939],comparison_oper:[0,9,10],compat:[815,818,824,825,830,836,840,841,851,852,853,931,958,997,1059,1066,1177,1223],compil:[259,407,671,1206,1207,1210,1211,1212,1213,1214,1215],compile_on_next_step:[1206,1207,1210,1211,1212,1213,1214,1215],complet:[40,41,43,1049,1054,1077],complex:[1220,1223],compliant:[815,829,830],compon:[931,950],composit:43,comput:[40,41,815,818,824,825,829,830,831,836,838,841,849,850,857,901,931,944,945,951,952,958,986,1026,1028,1029,1030,1031,1033,1034,1035,1037,1039,1042,1045,1049,1050,1051,1052,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1067,1068,1069,1071,1121,1125,1140,1141,1142,1143,1144,1145,1146,1147,1148,1158,1159,1160,1161,1162,1163,1164,1165,1167,1169,1171,1172,1173,1174],concat:[40,41,857,886,887,888,889,901,931,963,1077],concaten:[40,41,136,259,407,539,671,931,963,1077,1177],concatten:[40,41,857,886,887,888,889,901,1077],condit:[407,855,856,931,1023,1121,1129],conditon:[1121,1129],config:[40,41,1077],config_list:1077,configur:[40,41],conflict:43,conform:43,conjunct:1220,connect:[1194,1204,1205],consid:[40,41,815,829,830,1049,1054,1219,1223],consist:[40,41,857,889,1077,1140,1141,1206,1207,1220],constant:[857,866,867,931,947,1077,1121,1125,1171,1172,1173,1174,1175,1176,1185,1186,1190,1193,1206,1207,1208,1209,1220],constant_kwarg:1077,constant_pad:[259,407,539,671,931],constitu:[40,41],construct:[931,1014,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219],constructor:[40,41,42,931,935,1216,1217],consum:[857,1077],cont_feat_dim:[1158,1169],contaienr:[40,41],contain:[15,18,19,42,805,807,809,810,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,841,849,850,851,852,853,857,876,880,901,907,911,931,932,936,943,944,945,948,958,972,987,989,998,1009,1010,1026,1028,1029,1031,1033,1034,1035,1059,1066,1073,1074,1075,1076,1077,1133,1134,1140,1142,1143,1144,1146,1148,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[407,671,931],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[407,931,990,1158,1169,1194,1205],context_dim:[1194,1205],contextmanag:[59,60],continu:[43,1077,1220],contract:[40,41,836,840,1140,1141],contribut:[1177,1178],contributor:[43,1177],control:1177,conv1d:[201,342,469,794,1158,1177,1194],conv1d_transpos:[201,342,469,794,1158],conv1dtranspos:[1177,1194],conv2d:[201,342,469,604,794,1158,1177,1194],conv2d_transpos:[201,342,469,794,1158],conv2dtranspos:[1177,1194],conv3d:[201,342,469,604,794,1158,1177,1194],conv3d_transpos:[201,342,469,794,1158],conv3dtranspos:[1177,1194],convent:[40,41,1140,1141],conver:[857,873,884,896,903,906,1077],convers:[16,17,18,19,40,41,1077,1177],convert:[15,16,17,18,19,40,41,43,857,884,885,907,913,919,920,931,1006,1017,1018,1042,1044,1048,1049,1055,1077,1121,1123,1130,1177,1184],convert_dtyp:907,convolut:[1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201],cool:43,cooler:43,coordin:[931,988,1059,1060,1061,1063],copi:[40,41,43,455,931,949,1077,1121,1123],copy_arrai:[407,671,931],copy_nest:1121,core:[405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,855,856,857,859,860,861,862,863,864,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1177],corner:43,correct:[43,1177,1220],correctli:[40,41,43,844,845,1049,1052,1059,1063,1140,1142,1143,1144,1145,1146,1147,1148],correspond:[40,41,931,946,1133,1134],cos:[88,364,491,622,815,931,963,1059,1060,1071,1220],cosh:[88,364,491,622,755,815,1059],cosin:[815,816,820,821,1059,1060,1065],cost:[1026,1028,1029,1031,1033,1034,1035,1073,1074,1075,1076],cost_fn:[1073,1076],could:1223,count:[40,41,842,843,851,852,853,1077,1140,1145,1147],cours:43,cprint:1221,cpu:[40,41,43,857,894,896,902,903,906,931,934,937,965,966,973,983,984,992,993,999,1000,1025,1077,1133,1134,1135,1136,1137,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217,1219,1220],creat:[40,41,805,806,807,808,810,857,866,867,931,934,937,964,965,966,973,983,984,992,993,999,1000,1016,1025,1026,1039,1077,1133,1134,1135,1136,1137,1177,1178,1183,1184,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1223],create_if_abs:[40,41],create_vari:1185,creation:[40,41,42,43],creation_funct:[353,354,355,356,357,358,805,806,807,808,809,810],crop:[1042,1046],crop_siz:[1042,1046],cross:[259,671,931,1171,1172,1173,1174],cross_entropi:1171,cuda:[40,41,857,866,885,902,931,934,937,965,966,973,983,984,992,993,999,1000,1025,1077,1133,1134,1135,1136,1137,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217],cumprod:[136,259,407,671,931],cumsum:[671,931],cumul:[931,951,952],current:[40,41,42,43,857,866,890,891,893,897,907,913,921,930,931,953,967,975,979,991,994,1077,1121,1122,1129,1177,1223],current_framework:59,current_framework_str:[407,671,931,1077],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1158,1159,1160,1161,1162,1163,1164],d_out:[1158,1159,1160,1161,1162,1163,1164],da_can_termin:1077,da_dim_s:[857,1077],da_direct:1077,da_tune_step:[857,1077],dai:[43,1223],daniel:1177,data:[40,41,42,43,805,806,807,808,809,810,812,813,815,816,817,818,819,820,821,822,823,824,825,826,828,829,830,832,833,834,836,837,840,841,842,843,847,848,851,852,853,857,859,860,861,862,863,864,869,870,871,885,907,911,912,913,917,918,919,920,921,922,923,930,931,934,937,958,964,973,980,993,997,1008,1012,1025,1026,1032,1040,1059,1066,1077,1158,1167,1177],data_format:[1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201],data_type_funct:[359,361,362,811,812,813],dataset:[40,41],datatyp:[40,41,907,912,922,923],dcdw:[1026,1028,1029,1031,1033,1034],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1026,1033,1034,1210,1212,1213],decay_lambda:[1026,1033,1034,1210,1212,1213],decid:[40,41,1223],decompos:[1049,1050,1054],decomposit:[836,839,1049,1050,1054],decrement:[931,976],dedic:[1026,1040,1183,1184],deep:[40,41,1177],deep_copi:[40,41],deeper:[857,879,883,889,1077,1121,1130,1177],deepli:[1121,1123],def:[43,60,84,219,360,487,618,858,865,868,908,909,910,1027,1077,1081,1088,1177,1186,1189,1192,1219,1220,1223],default_dev:43,default_devic:857,default_dtyp:[43,907],default_float_dtyp:907,default_int_dtyp:907,default_key_color:[40,41,42],default_nod:1077,default_rng:455,default_v:[931,954],defaultdevic:[857,858],defaultdtyp:[907,908],defaultfloatdtyp:[907,909],defaultintdtyp:[907,910],defin:[43,931,950,992,1025,1133,1135],definit:43,degre:[1059,1071],del:1077,delai:43,delet:43,delta:[1026,1028,1077],delta_dim_s:1077,delta_percent_mem:1077,delta_sf:1077,delta_util:1077,demo:1177,denomin:[931,962,969,1002,1009,1010,1175,1176,1208,1209],denot:43,dens:[1194,1204],depend:[815,816,817,820,821,826,827,828,832,834,836,839,847,848,931,1023,1177],depth:[40,41,407,431,857,879,883,889,931,971,992,1077,1121,1130,1206,1207],depth_cutoff:[40,41],depthwis:[1158,1165,1194,1201],depthwise_conv2d:[201,342,469,604,794,1158],depthwiseconv2d:[1177,1194],deriv:[805,808,1026,1028,1029,1031,1033,1034,1035,1121,1123,1130,1177,1206,1210,1214,1216],descend:[836,839,847,848],descent:[1026,1031,1210,1215],describ:[40,41,1140,1141],descript:[836,841],design:[1177,1178],desir:[40,41,857,902,907,911,931,934,937,973,974,993,1025,1042,1047,1077,1140,1142,1143,1144,1146,1148],desired_aspect_ratio:[444,447,1042,1047],desired_percent_increas:1077,detail:1223,detect:[40,41,1121,1122,1129],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,815,816,817,818,820,821,822,823,826,828,832,833,836,837,838,841,851,852,853,857,892,894,895,904,907,911,912,918,921,922,923,930,931,933,934,937,938,939,972,975,979,980,1012,1022,1026,1032,1059,1066,1073,1074,1075,1076,1077,1158,1169],dev:[40,41,42,43,129,253,353,356,405,407,408,410,420,421,422,429,430,431,432,433,438,455,456,532,663,805,808,857,860,861,863,864,866,867,870,871,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,896,897,898,899,900,901,902,903,906,931,934,937,965,966,973,983,984,992,993,999,1000,1025,1026,1041,1133,1134,1135,1136,1137,1183,1184,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217],dev_clon:[40,41,857],dev_clone_arrai:857,dev_clone_it:857,dev_clone_nest:857,dev_dist:[40,41,857],dev_dist_arrai:857,dev_dist_it:857,dev_dist_nest:857,dev_from_str:[43,129,253,405,532,663,857],dev_mapp:857,dev_str:[40,41],dev_to_str:[129,253,405,532,663,857],dev_unifi:857,dev_unify_arrai:857,dev_unify_it:857,dev_unify_nest:857,dev_util:857,devclonedit:857,devcloneditem:857,devclonednest:857,devdistit:857,devdistitem:857,devdistnest:857,develop:[43,1177,1220,1223],deviat:[40,41,1133,1136,1140,1146,1175,1176,1208,1209],devic:[21,40,41,43,353,354,355,358,406,407,419,805,806,807,808,809,810,859,860,861,862,863,864,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,931,934,937,964,965,966,973,983,984,992,993,999,1000,1025,1026,1041,1133,1134,1135,1136,1137,1177,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217],devmanag:[857,865],devmapp:[857,867],devmappermultiproc:857,diag:[836,839],diagon:[110,236,386,513,644,805,809,836,931,973],dict:[15,16,17,18,19,40,41,42,857,859,862,866,867,869,879,880,881,882,883,931,955,956,957,985,1073,1074,1075,1077,1121,1123,1124,1125,1128,1130,1183,1184],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,811,812,857,876,877,880,881,1049,1054,1077,1158,1167,1177,1220,1223],differenti:[1177,1220],dilat:[1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201],dim:[40,41,836,839,931,992,1042,1043,1047,1077,1194,1205],dim_siz:[40,41,857,1077],dimens:[40,41,42,805,809,836,837,839,841,842,843,844,845,851,852,853,857,888,931,941,946,950,955,956,957,960,963,970,982,992,996,997,1007,1008,1011,1019,1021,1042,1046,1049,1052,1073,1074,1075,1076,1077,1133,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1155,1158,1159,1160,1161,1162,1163,1164,1165,1168,1171,1173,1174,1194,1195,1196,1197,1198,1199,1200,1201,1204,1205],dimension:[40,41,455,836,839,841,851,852,853,931,1007,1008],direct:1077,directli:[43,1121,1130,1220,1223],directori:[931,1004,1015],discord:43,discret:[1171,1173],discuss:43,disk:[40,41,1042,1044],distanc:[931,934],distribut:[40,41,857,876,880,881,882,883,1077,1133,1134,1135,1136,1137,1158,1166,1194,1202,1206,1207],distribute_nest:1077,distributedarrai:[40,41],distrubt:[1171,1173],dive:[1177,1220],divid:[40,41,931,1007,1009,1059],dividend:[1059,1066],divis:[931,962,969,1002,1009,1010,1026,1028,1029,1033,1059,1066,1210,1211,1212],divisor:[1026,1028,1029,1033,1059,1066,1210,1211,1212],doc:1177,docstr:43,document:43,doe:[40,41,43,931,934,1007,1219],doesn:[1049,1054,1177],doing:43,domain:[815,816,817,820,821,826,828,832,833,834,1059,1060],don:[43,1177],done:43,door:1223,dot:[1049,1051,1158,1169,1170,1194,1205],down:1219,downscal:[931,944,945],drag:[1177,1223],draw:[1133,1134,1136,1137],drawn:[1133,1134,1135,1136,1137],drop:[1177,1223],dropout:[1158,1177,1194,1205],dropout_r:[1194,1205],ds_tune_step:857,dtype:[40,41,43,136,259,353,354,355,356,358,359,361,362,407,408,410,411,419,422,438,539,671,805,806,807,808,810,811,812,813,844,845,911,912,913,914,915,916,918,919,920,921,922,923,924,925,926,927,928,929,930,931,934,937,964,973,992,993,1025],dtype_bit:[136,259,407,539,671,907],dtype_from_str:[43,136,259,407,539,671,907],dtype_in:[407,416,417,418,907,913,918,919,920,921,922,923,930],dtype_to_str:[136,259,407,539,671,907],duplic:[40,41,43],dure:[40,41,43,855,856,931,1020,1026,1028,1029,1033,1073,1074,1075,1076,1206,1207,1210,1211,1212,1214],dynam:[43,407,412,855,856],each:[40,41,42,43,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,839,857,866,867,876,877,878,879,880,881,882,888,900,901,931,932,933,947,958,996,1007,1011,1014,1024,1026,1029,1031,1033,1034,1035,1042,1045,1059,1061,1066,1068,1069,1077,1121,1125,1133,1134,1140,1141,1158,1159,1160,1161,1162,1163,1164,1165,1166,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1220],eager:1220,easi:1223,easili:1177,econom:1223,ecosystem:1177,edg:[931,943,947,1024],effect:[1026,1035],effective_grad:[1026,1035],effici:1223,einop:[40,41,931,955,956,957],einops_rearrang:[40,41,931],einops_reduc:[40,41,931],einops_repeat:[40,41,931],einstein:[40,41,1140,1141],einsum:[40,41,187,330,457,594,774,1140],either:[40,41,43,815,826,828,832,931,954,985,988,990,1073,1074,1075,1076,1077,1194,1205,1206,1207,1220],eleg:1077,element:[40,41,455,805,809,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,842,843,849,850,851,852,853,857,878,882,888,907,911,931,932,934,936,938,939,943,944,945,951,952,958,961,962,973,974,987,989,996,998,1007,1018,1023,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1077,1140,1141,1143,1145,1147,1150,1151,1152,1153,1154,1155,1156,1157,1158,1166,1194,1202],elementwis:[40,41],elementwise_affin:[1208,1209],elementwise_funct:[815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834],elemtn:[1133,1134],elif:1077,els:[43,931,940,954,959,1077],elsewher:[931,1023],emphas:1177,empti:[40,41,77,212,353,480,611,805,851,852,853,1049,1054,1077],enabl:[40,41,42,43,1177],encapsul:[811,813],encod:[931,963,1042,1044],end:[931,934,1177,1220],engag:43,ensur:43,entir:[40,41,851,852,853,857,901,1077,1177,1194,1203],entri:[40,41,931,983,984,1007,1008],entropi:[1171,1172,1173,1174],enumer:1077,environ:1177,eps:[359,811,812],epsilon:[1026,1028,1029,1033,1171,1172,1173,1174,1175,1176,1208,1209,1210,1211,1212],equal:[40,41,88,364,491,622,815,822,836,837,847,848,931,933,938,939,947,1007,1024,1059,1071,1133,1137],equality_matrix:[931,933],equat:[40,41,1140,1141],equival:[815,829,830,836,841,931,934,1059,1071],erf:[453,755,1059],error:[40,41,43,857,931,1008,1059,1067,1077,1150,1151,1206,1207,1210,1214],etc:[40,41,43,857,902,931,934,937,965,966,973,983,984,992,993,999,1000,1025,1077,1133,1134,1135,1136,1137,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217,1223],euclidean:[836,841],euler:804,evalu:[40,41,815,826,827,828,831,851,852,853,931,988,1121,1122,1129],even:[43,1223],evenli:[40,41,931,934,983,984,1007],everi:[43,931,933,1223],exact:[40,41],exampl:[43,855,856,931,943,1011,1049,1054,1177,1219,1220,1223],example_input:[407,412,855,856],exc_tb:1077,exc_typ:1077,exc_val:1077,exce:[931,989],except:[40,41,44,47,851,852,853,931,934,940,946,954,1020,1077],excess_s:1077,excit:[1177,1220],exclud:[59,61,931,934,1133,1137],exclus:[40,41,407,414,427,439,441,931,951,980,1026,1032,1133,1135],execut:[43,931,1020,1220],execute_with_gradi:[167,307,439,574,735,1026,1177,1219],exist:[40,41,931,954,1077,1177,1210,1214,1223],exp:[755,1059],expand:[40,41,931,960,963],expand_dim:[40,41,259,671,931,1077],expect:[931,935],explain:[43,1220],explicitli:[43,1194,1203,1205,1206,1207,1220],expon:[931,1010],exponenti:[1059,1067,1068],expos:[931,937,948],express:[815,820,832,931,988],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1026,1030],eye:[1049,1051],fabian:1177,fabio:1177,factor:[836,839,857,866,899,900,901,1026,1028,1029,1033,1034,1077,1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201,1210,1211,1212,1213],fail:43,falck:1177,fall:[1206,1207,1210,1214],fallback_to_non_compil:[1206,1207,1210,1214],fals:[15,18,19,40,41,42,59,66,67,68,69,70,405,407,414,415,427,434,437,439,440,441,448,449,815,822,823,829,830,836,841,844,845,847,848,849,850,851,852,853,857,875,888,896,901,906,907,914,915,916,917,931,933,951,954,959,963,970,980,985,1005,1007,1021,1023,1026,1029,1030,1031,1032,1033,1034,1035,1049,1052,1073,1074,1075,1076,1077,1121,1122,1123,1125,1129,1130,1140,1142,1143,1144,1145,1146,1147,1148,1183,1184,1206,1207,1210,1211,1212,1213,1214,1215],fan_in:1185,fan_mod:1185,fan_out:1185,far:[1121,1122,1129,1219],faster:[855,856],favourit:[1177,1219],feasibl:1223,feat_dim:[1158,1169,1170],fed:[857,901,1077],feed:[857,901,1077],few:43,field:1223,file:[40,41,43,931,1004,1015,1206,1207],filepath:[40,41],fill:[40,41,805,806,807,808,810,931,964,993,1133,1135],fill_valu:[407,419,931,964],filter:[1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201,1223],filter_s:[1194,1195,1196],filter_shap:[1194,1197,1198,1199,1200,1201],find:[40,41,43,1223],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,218,219,359,360,486,487,617,618,811],finish:[1177,1223],finit:[815,822],first:[40,41,43,455,815,818,824,825,830,836,837,839,840,855,856,857,888,931,938,946,950,958,983,984,1011,1013,1026,1030,1073,1074,1075,1076,1077,1121,1122,1129,1133,1139,1140,1145,1147,1194,1205,1206,1207,1210,1214,1220,1223],firstlayersiren:[1177,1185],firstli:[1220,1223],fist:[857,901,1077],fit:[40,41,405,407,439,444,448,452,453,455,931,996,1042,1047],fix:43,fkt:1223,flag:[40,41,43,1026,1032],flat:[40,41,931,996,999],flat_list:[40,41],flatten:[40,41,836,841,844,845,931,963,996,1140,1142,1143,1144,1146,1148],flatten_key_chain:[40,41,1206,1207],flexibl:[1177,1220],flip:[40,41,116,241,392,519,650,842],float32:[43,407,422,907,911,919,920,931,934,937,973,993,1025],float_dtyp:[907,915,925],float_img_to_uint8_img:1042,floor:[259,407,671,931,962,1077],floormod:[259,407,671,931],fluid:1223,folder:[43,1177],follow:[40,41,43,811,813,836,841,857,901,931,976,977,978,1009,1010,1026,1029,1031,1033,1034,1035,1077,1121,1125,1130,1158,1169,1170,1177,1194,1204,1210,1214],followng:[811,812],fomaml_step:1073,forget:[1026,1028,1029,1033,1210,1211,1212],fork:[931,990,1177,1178],forkserv:[931,990,1077],form:[15,16,17,18,19,40,41,805,809,836,837,931,937,1026,1029,1031,1033,1034,1035,1121,1123,1130,1158],format:[40,41,43,857,875,907,911,913,917,931,934,937,973,993,1025,1077,1140,1141,1177,1219,1220],format_fn:[40,41],format_key_chain:[40,41],forward:[1206,1207,1210,1214,1219],found:[40,41,42],fourier:[931,963],fourier_encod:931,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,115,117,119,122,124,126,127,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,172,173,175,176,177,181,182,183,184,185,186,188,189,190,191,192,193,194,197,199,200,202,203,204,205,206,207,208,213,214,215,216,217,219,220,221,224,225,226,227,228,229,230,231,232,233,234,237,238,239,240,242,244,247,250,251,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,313,314,315,317,318,319,320,322,323,326,327,328,329,331,332,333,334,335,336,337,338,341,343,344,345,346,347,348,349,354,355,356,357,358,360,361,362,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,387,388,389,390,391,393,395,398,400,402,403,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,445,446,447,449,450,451,454,456,458,459,460,461,462,463,464,467,468,470,471,472,473,474,475,476,481,482,483,484,485,487,488,489,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,514,515,516,517,518,520,522,525,527,529,530,533,534,535,536,537,538,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,575,576,577,578,580,581,582,584,585,586,590,591,592,593,595,596,597,598,599,600,601,605,606,607,612,613,614,615,616,618,619,620,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,645,646,647,648,649,651,653,656,658,660,661,664,665,666,667,668,669,670,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,736,737,738,739,740,742,743,744,746,747,748,749,750,751,753,754,756,757,758,759,760,761,762,763,764,765,766,768,769,770,771,772,773,775,776,777,778,779,780,781,784,785,786,787,788,789,790,792,793,795,796,797,798,799,800,801,806,807,808,809,810,812,813,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,837,838,839,840,841,843,845,848,849,850,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1057,1058,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1151,1152,1153,1154,1155,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1176,1177,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1222,1223],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1077,framewrk:[931,990],free:43,freed:43,freeli:43,frequenc:[931,963],from:[40,41,42,43,805,808,815,833,836,837,842,843,849,850,851,852,853,857,866,867,901,907,913,931,954,965,966,973,997,1008,1016,1023,1026,1029,1033,1042,1046,1049,1054,1073,1074,1075,1076,1077,1121,1123,1130,1133,1134,1135,1136,1137,1140,1145,1147,1158,1166,1169,1177,1183,1184,1194,1202,1205,1210,1214,1219,1220],from_cal:[1206,1207],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,136,259,407,539,671,811,812,931,1049,1054,1177],full_matric:[836,839],fulli:[43,1177,1194,1204,1205,1219],func:[40,41,407,412,439,440,855,856,857,901,931,942,1026,1030,1077],further:[43,1223],furthermor:1223,futur:1223,gain:1185,gamma:[1175,1176],gather:[40,41,136,259,407,539,671,931,966],gather_nd:[40,41,136,259,407,539,671,931],gauss:[1059,1067],gaussian:[1150,1151],geglu:[1177,1180],gelu:[340,466,783,1150,1177,1180],gener:[23,40,41,43,405,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,455,855,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1032,1133,1135,1137,1138,1177,1210,1214],geometr:[931,963],get:[40,41,43,811,812,813,857,866,867,875,890,891,896,900,903,906,907,917,918,931,935,967,968,969,995,1077,1177,1194,1203,1223],get_all_arrays_in_memori:931,get_all_arrays_on_dev:857,get_framework:59,get_initial_st:[1194,1203],get_min_bas:931,get_min_denomin:931,get_mod_kei:[1206,1207],get_num_dim:[407,671,931],get_referrers_recurs:931,getfullargspec:1077,gist:1177,give:[43,931,997,1220],given:[40,41,43,805,806,842,843,857,890,896,899,900,901,903,906,907,911,931,934,937,943,951,952,966,983,984,993,996,999,1000,1007,1014,1019,1021,1025,1026,1028,1029,1031,1033,1034,1035,1049,1051,1055,1059,1060,1077,1121,1126,1127,1133,1136,1137,1139,1140,1143,1145,1146,1147,1148,1158,1159,1160,1161,1162,1163,1164,1165,1183,1184,1223],global:[40,41,42,857,866,867,874,899,900,901,907,914,915,916,931,953,968,969,995,1001,1002,1003,1009,1010,1026,1041,1077,1175,1176,1208,1209],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1177,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204],good:43,googl:1177,got:[43,1177],gpu0:43,gpu2:43,gpu:[857,892,895,1077],gpu_is_avail:[405,857,1077],grad:[1177,1210,1214,1219],gradient:[25,40,41,440,441,442,443,857,901,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1045,1073,1074,1075,1076,1177,1210,1211,1212,1213,1214,1215,1219,1223],gradient_descent_upd:[1026,1073,1074,1075,1076],gradient_imag:[170,312,444,579,741,1042],gradienttrack:[1026,1027],graph:[1026,1029,1031,1033,1034,1035,1206,1207],greater:[40,41,931,934,961,1008,1133,1137],green:[40,41,42,1221,1222],grid:[931,988],group:[1042,1047],guid:[43,1177,1178,1223],gym:1177,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1223,half:[931,934,1077,1133,1137],hand:1177,handl:[40,41,42,43,855,856,857,873,875,884,885,896,903,906,1026,1029,1031,1033,1034,1035,1077,1210,1211,1212,1213,1214,1215],happen:43,has:[40,41,43,836,838,844,845,931,1011,1049,1054,1059,1062],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,931],hasattr:1077,have:[40,41,43,805,806,807,808,809,810,811,812,815,816,817,818,819,820,821,822,823,824,825,826,828,829,830,832,833,834,836,837,839,840,841,842,843,844,845,847,848,851,852,853,931,946,950,955,956,957,958,964,1011,1026,1032,1040,1059,1066,1077,1177,1219,1220],haven:43,hdf5:[40,41,1206,1207],head:[1158,1169,1194,1205],head_dim:[1194,1205],height:[1042,1047],height_cutoff:[40,41],help:[43,59,359,405,406,857,869,870,871,872,907,1026,1177,1185,1187,1188,1190,1191,1193],here:[43,1177],hidden:[1158,1168,1194,1203],hierarch:[931,948],hierarchi:[40,41],high:[40,41,455,1133,1135,1137],higher:[836,839,1026,1029,1031,1033,1034,1035],highest:[1133,1135],highest_util:1077,highest_util_nod:1077,highli:1177,highlight:1223,hint:43,hkt:1223,hold:[907,911,931,934,937,999,1000],host:1177,hot:[931,992],how:[1177,1194,1205,1206,1207,1220,1223],howev:[43,1220],http:1223,hyperbol:[815,816,817,821,834,1059,1064,1065,1070,1072,1150,1157],hypothet:[43,1223],icon:1177,idea:1177,ident:[40,41,43,136,259,407,539,671,931],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[804,811,812,815,833],if_exist:[40,41],ignor:[40,41,1210,1214],ignore_key_error:[40,41],ignore_miss:[1210,1214],ignore_non:[40,41],iii:43,iinfo:[83,218,359,486,617,811],imag:[27,445,446,447,931,982,1043,1044,1045,1046,1047,1048,1158,1159,1160,1161,1162,1164,1165,1177,1223],image_dim:[1042,1046],imkkhk:1223,immedi:[1177,1220,1223],implement:[43,815,816,817,820,821,826,827,828,832,834,847,848,1177,1220,1223],in_featur:[1158,1167],inadvert:43,includ:[40,41,43,836,841,851,852,853,931,934,972,1009,1010,1022,1121,1122,1133,1137,1194,1204,1205,1208,1209,1219],include_deriv:[1121,1123,1130],include_empti:[40,41],include_inf:[40,41,931,972,1022],include_nest:[1121,1122],include_self:[40,41],inclus:[43,1133,1135],incom:[1158,1167],increas:[857,879,883,889,931,947,960,1024,1077,1121,1130],increasingli:1223,increment:[931,977,1077],inde:1177,indent:[40,41,42],independ:[1133,1134],index:[40,41,407,455,844,845,847,848,931,936,965,966,988,1008,1011,1121,1124,1126,1127,1128,1131],index_nest:1121,indic:[40,41,407,420,421,431,432,433,836,841,844,845,847,848,931,936,965,966,974,992,999,1000,1121,1122,1124,1126,1127,1128,1129,1131,1132,1133,1134,1150,1155,1158,1159,1160,1161,1162,1163,1164,1165,1175,1176,1194,1195,1196,1197,1198,1199,1200,1201,1206,1207],indices_wher:[136,259,407,671,931],indistinguish:[815,833],inevit:1223,inf:[40,41,836,841,931,972,981,1022,1059,1062],infer:[805,808,849,850,855,856,931,970,973,997,1005,1042,1046,1049,1054,1220,1223],infin:[815,816,817,819,820,821,822,826,828,832,833,834,836,841,851,852,853,931,981],infinit:[815,833],inform:[811,812,813,1026,1037],init_c:[1158,1168],init_h:[1158,1168],init_on_first_step:[1210,1214],initi:[40,41,42,43,59,359,405,406,857,869,870,871,872,907,1026,1077,1158,1168,1177,1187,1188,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1210,1214],initialz:[1206,1207],inner:[1073,1074,1075,1076],inner_batch_fn:[1073,1074,1075],inner_batch_shap:[1158,1167],inner_cost_fn:[1073,1074,1075],inner_grad_step:[1073,1074,1075,1076],inner_learning_r:[1073,1074,1075,1076],inner_optimization_step:[1073,1074,1075,1076],inner_v:[1073,1074,1075],innermost:[805,809,836,837],inp:1077,inplac:[40,41,931,940,975,979,1012,1026,1029,1031,1033,1034,1035,1183,1184,1210,1211,1212,1213,1214,1215],inplace_arrays_support:[407,931],inplace_decr:[136,259,407,539,671,931],inplace_incr:[136,259,407,539,671,931],inplace_oper:[0,11,12],inplace_upd:[40,41,136,259,407,539,671,931,1183,1184],inplace_variables_support:[407,931],input:[15,18,19,40,41,42,43,805,808,809,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,839,840,841,842,843,844,845,847,848,849,850,851,852,853,855,856,857,866,867,874,875,876,879,880,883,889,901,902,907,911,912,914,915,916,917,918,922,923,931,932,933,936,938,939,940,941,943,944,945,946,947,949,951,952,954,955,956,957,958,959,960,961,962,963,970,972,973,974,976,977,978,980,981,982,986,987,988,989,996,998,1005,1006,1008,1011,1012,1013,1014,1016,1017,1018,1019,1021,1022,1024,1026,1030,1032,1037,1041,1042,1043,1044,1045,1046,1048,1049,1052,1054,1056,1057,1058,1059,1062,1064,1065,1066,1070,1071,1072,1073,1074,1075,1076,1077,1133,1134,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1175,1176,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1208,1209,1220],input_ax:[857,901,1077],input_channel:[1194,1195,1196,1197,1198,1199,1200,1203,1204],input_queu:1077,inputs_split:1077,insert:[844,845,931,960],insid:43,inspect:1077,inspir:1223,instal:1177,instanc:[15,16,17,18,19,40,41,43,455,857,866,1077,1183,1184,1216,1217],instead:[40,41,43,455,1140,1142,1143,1144,1145,1146,1147,1148,1223],int32:43,int64:[907,911,931,934,937,973,993,1025],int_dtyp:[907,916,926],integ:[40,41,455,811,813,815,818,819,836,841,851,852,853,907,923,931,934,961,998,1007,1133,1135,1138],integr:1177,intend:43,inter:1177,interact:1177,interchang:[40,41,931,1013],interest:1177,interfac:[931,937,1220],intermedi:[40,41],intern:[40,41,857,1026,1040,1077,1121,1122,1129,1130,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1216,1217],interpol:[931,982],intersect:[1059,1060],interv:[40,41,851,852,853,931,934,943,983,984,1059,1061,1133,1137],introduc:1223,inv:[745,1049,1223],invalid:[851,852,853],invalid_dtyp:907,invers:[815,816,817,1049,1051,1053,1059,1060,1061,1062,1064,1223],invert:[1049,1051,1053],invest:1223,investig:43,invoc:[855,856],irrespect:1177,is_al:1077,is_arrai:[136,259,407,539,671,931,1077],is_float_dtyp:907,is_int_dtyp:907,is_mean:1077,is_sum:1077,is_vari:[167,307,439,574,735,1026],isfinit:[88,223,364,491,622,815],isinf:[259,539,671,931],isinst:1077,isnan:[88,223,364,491,622,815],isnumer:1077,issu:[1177,1178],issue_numb:43,item:[15,19,40,41,857,866,867,869,876,878,880,882,888,907,914,931,948,971,1009,1010,1077,1121,1125,1126,1127,1130,1131,1132,1177,1206,1207,1219],iter:[15,16,17,18,19,40,41,42,855,856,857,860,861,863,864,866,867,870,871,878,880,881,882,883,888,901,931,933,941,946,947,973,988,993,996,997,1000,1005,1007,1011,1014,1019,1024,1077,1121,1122,1123,1125,1129,1130],iterbal:[857,878,882,888,1077],its:[455,857,901,931,973,997,1013,1019,1077,1177],itself:[1121,1130],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,353,354,355,356,357,358,359,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,804,805,806,807,808,809,810,811,812,813,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,845,847,848,849,850,851,852,853,855,856,857,859,860,861,862,863,864,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1185,1187,1188,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1221,1222],ivy_backend:[40,41],ivy_bay:1223,ivy_test:43,ivyfcmodel:1219,ivyh:[40,41,42],ivymodul:[198,791],jame:1177,jax:[43,1026,1032,1177,1223],jax_concat:1177,jnp:1177,join:[40,41,931,946,1011,1077],journal:1177,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1177,1194,1203,1223],kaimingnorm:[1185,1189],kalman:1223,kalman_filt:1223,kalman_filter_step:1223,kalman_filter_upd:1223,keep:[40,41,857,902,931,1021,1077,1177,1178,1223],keep_inner_v:[1073,1074,1075],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1073,1074,1075],keepdim:[40,41,407,437,448,449,836,841,844,845,849,850,851,852,853,931,1021,1049,1052,1140,1142,1143,1144,1145,1146,1147,1148],kei:[15,16,17,40,41,42,43,857,869,931,948,1073,1074,1075,1077,1121,1124,1128,1158,1169,1170,1177,1183,1184,1194,1205,1210,1214],kept:[40,41,42,1073,1074,1075],kera:1223,kernel:[1158,1168],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,857,866,867,879,883,889,931,935,955,956,957,985,1077,1121,1125,1206,1207],keyword_color_dict:[40,41,42],kind:[811,812,813,1223],kwarg:[15,16,17,40,41,42,59,63,857,866,879,883,889,931,985,1077,1183,1184,1206,1207],kwarg_stateful_idx:[1206,1207],kwargs_clon:1077,kwargs_dist:1077,kwargs_uni:1077,label:[43,1171,1172,1173,1174],lamb:[1026,1033,1177,1210],lamb_upd:1026,lambda:[1077,1210,1213,1215,1219],lar:[1026,1033,1034,1177,1210],larger:[811,812,931,943],largest:[40,41,811,812,813,931,961],lars_upd:1026,last:[40,41,836,837,839,842,843,847,848,851,852,853,931,934,950,982,1007,1011,1049,1052,1140,1145,1147,1150,1155,1158,1168,1194,1204],later:[40,41,931,942],latest:[1194,1203],layer:[1026,1029,1031,1033,1035,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1175,1176,1177,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217,1223],layer_norm:1175,layernorm:[1177,1208],layerwis:[1026,1034,1210,1213],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1121,1122,1129],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1150,1151,1152],leaky_relu:[783,1150],learn:[849,850,1026,1029,1031,1033,1034,1035,1049,1054,1073,1074,1075,1076,1133,1139,1177,1210,1211,1212,1213,1214,1215,1220,1223],learnabl:[1175,1176,1208,1209],least:43,leav:[15,18,19,40,41,1121,1122,1123,1129,1130],left:[40,41,43,844,845,1049,1052,1140,1142,1143,1144,1145,1146,1147,1148,1177],leftmost:[40,41],len:1077,length:[40,41,42,931,934,997,1008,1019],lenton2021ivi:1177,lenton:1177,less:[40,41,43,88,223,364,491,622,815,816,819,826,828,833,836,841,1077,1133,1137],less_equ:[88,364,491,622,815],less_util_node_str:1077,let:[1220,1223],level:1177,librari:[815,829,830,1177,1219,1223],lightweight:1177,like:[43,1026,1032,1133,1137,1177,1219,1220,1223],likewis:43,limit:[40,41,42,43,811,812,813,931,943,944,945],linalg:[29,1050,1051,1052,1053,1054,1055,1177],line:43,linear0:[1177,1219],linear1:1177,linear2:1219,linear:[931,963,982,1049,1150,1151,1152,1153,1158,1166,1177,1194,1195,1196,1197,1198,1199,1200,1201,1219],linear_algebra:[448,449,450,451,836,837,838,839,840,841],linear_resampl:[136,259,407,539,671,931],linearli:[931,963],link:[43,1177],linspac:[136,259,407,539,671,931,934],list:[15,18,19,40,41,353,354,355,358,805,806,807,810,836,840,842,843,851,852,853,857,866,867,876,877,879,880,881,883,886,887,901,931,934,937,939,988,1006,1007,1016,1021,1073,1074,1075,1077,1121,1122,1123,1125,1129,1130,1158,1159,1160,1161,1162,1163,1164,1165,1177,1178,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201],list_join:[40,41,42],list_stack:[40,41],liter:[836,841],littl:1220,load:[40,41],loaded_kwarg:1077,loader:1177,local:43,local_set:[931,971],locat:[43,931,981,1133,1134],log10:[88,364,491,622,815],log1p:[88,364,491,622,815],log2:[88,364,491,622,815],log:[755,815,827,836,838,931,984,1059,1077,1171,1172,1173,1174],logarithm:[815,826,827,828,836,838,1059,1069],logdet:[836,838],logic:[31,815,829,830,851,852,853,1057,1058,1177],logical_and:[321,752,1056],logical_not:[88,223,364,491,622,815],logical_or:[88,321,364,491,622,752,815,1056],logit:[1171,1174],logspac:[136,259,407,539,671,931],look:[43,1220,1223],loop:[1073,1074,1075,1076],loss:[1172,1173,1174,1177,1219],loss_fn:[1177,1219],lot:1220,low:[40,41,455,1133,1135,1137],lower:[40,41,43,805,809,931,987,1133,1137],lower_depth:[1206,1207],lowest:[15,18,19,40,41,1121,1130,1133,1135],lstm:[1158,1168,1177,1194],lstm_updat:[43,1158],machin:[811,812,813,849,850,1049,1054,1133,1139,1177,1220,1223],made:43,mai:[815,825,829,830,847,848,931,934,954,958,1177,1220,1223],main:[805,809,836,837,931,973,1177],mainli:1177,maintain:[43,847,848],make:[43,455,857,1077,1177,1220],maml:[1073,1074,1075],maml_step:1073,manag:[857,1077],manhattan:[836,841],mani:[40,41,43,931,1007,1177],manipulation_funct:[842,843],manner:[15,18,19,40,41,43,1121,1130],manual:[1121,1122,1129,1223],map:[40,41,42,857,866,931,981,1077,1121,1126,1127,1130,1194,1205,1219],map_cont:[40,41],map_nest_at_index:1121,map_nest_at_indic:1121,map_sequ:[40,41],mapper:[857,866,867,1077],mark:43,mask:[1158,1169,1170],master:43,match:[40,41,931,985],match_kwarg:931,math:[33,454,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1077,1177],mathbb:[1049,1055],mathbf:[1049,1055],mathemat:[804,836,841],matmul:[43,259,407,539,671,931,1223],matplotlib:1220,matric:[805,809,836,837,1158,1167],matrix:[40,41,805,809,836,837,931,933,944,986,1049,1050,1051,1052,1053,1054,1055,1158,1167,1194,1204],matrix_norm:[40,41,174,316,448,583,745,1049],matter:1177,max:[40,41,359,811,812,813,931,944,945,956,987,999,1000,1077,1140,1142,1210,1212],max_batch_s:[40,41],max_chunk_s:[857,901,1077],max_depth:[40,41,857,861,864,871,879,883,889,931,971,1077,1121,1130],max_dev_dim_step_ratio:857,max_freq:[931,963],max_length:[40,41],max_node_dim_step_ratio:1077,max_norm:[40,41,931,944,945],max_split_factor_step_s:[857,1077],max_trust_ratio:[1026,1033,1210,1212],maxim:[1177,1220,1223],maximis:1177,maximum:[40,41,42,671,844,845,857,879,883,889,901,931,943,944,945,963,1026,1033,1077,1121,1130,1140,1142],mayb:[15,18,19],mdi:1077,mean:[40,41,455,857,886,887,888,889,901,931,956,1073,1074,1075,1076,1077,1121,1125,1133,1136,1140,1143,1146,1148,1185,1219,1223],measur:[1158,1169,1194,1205],mech:1177,mechan:[1177,1223],medic:1223,member:43,memori:[857,873,896,901,903,906,1077,1158,1168,1177],mention:43,merg:43,merge_with_upstream:43,meshgrid:[259,407,671,931],messag:[1221,1222],meta:[35,1074,1075,1076,1177],method:[40,41,42,43,455,931,937,948,988,999,1000,1026,1033,1034,1077,1121,1122,1129,1130,1177,1194,1205,1206,1207,1220],might:[931,954,1223],min:[40,41,123,359,399,526,657,811,812,813,836,841,849,931,956,989,999,1000,1009,1049,1054,1077,1140,1144],min_bas:[931,1010],min_denomin:[931,1009],min_dev_dim_s:857,min_node_dim_s:1077,min_sf_tune_step:[857,1077],min_unit_dev_tune_step:857,min_unit_node_tune_step:1077,mind:1177,mini:[1175,1176,1208,1209],minimum:[40,41,671,849,850,857,907,911,931,934,936,937,943,968,969,1001,1002,1009,1010,1077,1140,1144],miss:[1210,1214],ml_framework:[931,934,1049,1054],mod:[931,962],mod_depth:[1206,1207],mod_height:[1206,1207],mod_with_top_mod_key_chain:[1206,1207],mode:[40,41,448,450,836,839,855,856,857,886,887,888,889,901,1049,1054,1077,1220],model:[1177,1219],modul:[40,41,42,59,931,990,1077,1177,1178,1180,1181,1182,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1208,1209,1216,1217,1223],moment:[1026,1028,1029,1033,1210,1211,1212],more:[43,842,843,931,1011,1077,1177,1220,1223],more_util_node_str:1077,most:[40,41,1049,1054,1177,1223],move:[40,41,43,857,902,1077],much:[43,1177,1223],multi:[455,931,990,1158,1169,1194,1205],multi_head_attent:1158,multi_index_nest:1121,multi_map:[40,41],multi_nod:1077,multidev:[857,868,869,870,889],multidevcontain:[40,41],multidevic:[857,866],multidevit:[857,860,863,866,867,871],multidevitem:[857,859,862],multidevnest:[857,861,864],multiheadattent:[1177,1194],multinod:[1077,1081],multinodecontain:1077,multinodeit:1077,multinodeitem:1077,multinodenest:1077,multinomi:[180,325,455,589,767,1133],multipl:[40,41,851,852,853,931,985,1007,1049,1051,1140,1142,1143,1144,1145,1146,1148,1175,1176,1194,1204,1220],multipli:[40,41,931,951,1140,1145],multiprocess:[40,41,42,407,671,857,866,931,1077],must:[40,41,42,43,805,806,807,808,809,810,815,816,817,818,819,820,821,822,824,825,826,828,829,830,832,833,834,836,837,840,841,842,843,847,848,849,850,851,852,853,857,886,887,888,889,901,931,934,946,948,950,958,987,989,1000,1011,1059,1063,1066,1077,1133,1138,1210,1214],mutabl:[1121,1123,1130],mutlidevic:[857,866],mutlinod:1077,mw_tm1:[1026,1029,1033],mx_concat:1177,mxn:[805,809,836,837],mxnet:[1177,1223],my_func:43,mymodel:1177,name:[43,855,856,1219],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1220],nan:[40,41,43,804,815,816,817,819,820,821,822,823,826,828,832,833,851,852,853,931,972,1022],nativ:[15,17,18,19,40,41,43,857,873,875,884,885,896,903,906,907,912,919,920,1077,1177,1178,1183,1184],native_modul:[1183,1184],native_module_class:[1183,1184],nativearrai:[15,18,19,43,805,808,809,811,812,813,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,838,839,840,841,842,843,844,845,847,848,849,850,851,852,853,857,875,901,902,907,911,917,922,923,931,932,933,934,936,937,938,939,941,943,944,945,946,947,949,950,951,952,955,956,957,958,960,961,962,963,965,966,970,972,973,974,981,982,983,984,986,987,988,989,992,993,996,997,998,999,1000,1005,1007,1008,1011,1013,1014,1016,1017,1018,1019,1021,1022,1023,1024,1025,1077,1121,1123,1130],natur:[815,827,836,838,1059,1069,1223],ncdhw:[1158,1163,1164,1194,1199,1200],nchw:[1158,1161,1162,1165,1194,1197,1198,1201],ncw:[1158,1159,1160,1194,1195,1196],ndarrai:[353,354,355,356,357,358,359,361,362,455,931,1017],ndhwc:[1158,1163,1164,1194,1199,1200],nearest:[931,998],need:[43,931,944,945,1158,1160,1162,1164,1177,1194,1196,1198,1200,1223],neg:[40,41,88,223,364,491,622,815,822,836,841,842,843,851,852,853,1140,1145,1147,1150,1152],negative_slop:1185,neither:1077,nest:[15,16,17,18,19,40,41,42,857,879,883,889,931,937,1016,1073,1074,1075,1077,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1206,1207,1210,1211,1212,1213,1214,1215],nested_indices_wher:1121,nested_map:[1077,1121],network:[1158,1167,1177,1178,1180,1194,1206,1207,1223],neural:[1158,1177,1180,1194,1219],never:43,new_node_percent_mem:1077,new_node_util:1077,new_node_utils_kei:1077,new_std:[1175,1176,1208,1209],newli:[43,855,856,931,941,942],newlin:[40,41,42],newshap:[931,941,997],next:[811,812,1077,1206,1207,1210,1211,1212,1213,1214,1215],nhwc:[1158,1161,1162,1165,1194,1197,1198,1201],node:[40,41,1121,1122,1129],node_clon:1077,node_dist:1077,node_dist_arrai:1077,node_dist_it:1077,node_in:1077,node_mapp:1077,node_str:1077,node_to_str:1077,node_util:1077,nodedistit:1077,nodedistitem:1077,nodedistnest:1077,nodemanag:[1077,1088],nodemapp:1077,nodemappermultiproc:1077,noinspect:[858,908,909,910,1027,1077],non:[40,41,815,829,830,836,840,841,851,852,853,855,856,907,921,1206,1207,1210,1214,1220],none:[40,41,42,43,59,61,64,353,354,355,356,358,405,407,408,410,412,419,420,421,422,429,430,431,432,433,434,435,436,438,448,449,455,456,805,806,807,808,810,811,812,813,836,841,842,843,844,845,849,850,851,852,853,855,856,857,866,867,873,874,899,900,901,902,907,914,915,916,931,934,937,953,954,959,964,965,966,971,973,975,976,977,978,979,983,984,990,992,993,996,999,1000,1001,1002,1007,1008,1009,1010,1019,1020,1025,1026,1029,1031,1033,1034,1035,1041,1042,1046,1049,1052,1054,1073,1074,1075,1076,1077,1121,1122,1125,1129,1130,1133,1134,1135,1136,1137,1140,1142,1143,1144,1145,1146,1147,1148,1158,1160,1162,1164,1167,1168,1169,1170,1175,1176,1183,1184,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],norm:[40,41,836,841,931,944,945,1049,1052,1176,1177,1209,1210,1212],normal:[1133,1136,1175,1176,1208,1209],normalized_idx:[1175,1176],normalized_shap:[1208,1209],notat:[40,41,1140,1141],note:[43,1049,1054],noth:[40,41,1220],notimplementederror:1077,now:[40,41,43,857,902,931,932,1077,1177,1194,1205,1206,1207,1219,1220,1223],np_concat:1177,np_finfo:359,ns_tune_step:1077,num:[407,429,430,931,983,984],num_arrai:[40,41],num_arrays_in_memori:931,num_arrays_on_dev:857,num_band:[931,963],num_channel:[1194,1201],num_chunk:1077,num_chunks_floor:1077,num_class:[1133,1134],num_cpu_cor:857,num_gpu:[129,405,857,1077],num_head:[1158,1169,1194,1205],num_kei:[1158,1169,1170],num_lay:[1194,1203],num_or_size_split:[40,41,407,434,931,1007],num_output:1077,num_queri:[1158,1169,1170],num_sampl:[407,428,455,456,931,982,1042,1043,1133,1134],num_task:[1073,1074,1075,1076],number:[40,41,42,804,811,812,813,815,819,836,838,839,851,852,853,855,856,857,893,894,895,907,918,922,923,931,934,943,947,960,963,970,973,982,983,984,987,991,996,1007,1014,1018,1022,1024,1073,1074,1075,1076,1077,1133,1134,1138,1140,1142,1143,1144,1146,1148,1158,1169,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1220,1223],numer:[43,815,819,822,823,824,829,830,831,836,840,931,968,969,1001,1002,1009,1010,1059,1066,1185],numhead:[1158,1169],numpi:[40,41,43,353,354,355,356,357,358,359,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,836,839,931,1017,1049,1054,1140,1141,1177,1219,1220,1223],nwc:[1158,1159,1160,1194,1195,1196],obj:[40,41],object:[40,41,42,59,359,811,812,857,907,911,931,934,937,1026,1121,1124,1126,1127,1128,1131,1132,1133,1139,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1206,1207],object_in:[407,410,931,937],observ:1077,obvious:43,occupi:[811,812,813,931,999,1000],off:[836,837,931,934],offer:1177,offset:[836,837,1175,1176],often:1220,old:[40,41],on_init:[1194,1205,1206,1207],onc:[43,857,901,1077,1133,1134,1177],one:[40,41,43,836,841,842,843,844,845,857,886,887,888,889,901,907,913,931,973,985,992,999,1000,1008,1011,1049,1052,1077,1140,1141,1142,1143,1144,1145,1146,1147,1148,1177,1220,1223],one_hot:[136,407,539,671,931],onearrai:[931,960],ones:[40,41,77,212,353,480,611,805,808,931,973,992,1177],ones_lik:[77,212,353,480,611,805],ongo:43,onli:[40,41,43,455,815,829,830,842,843,857,1049,1054,1077,1121,1122,1123,1129,1210,1211,1212,1213,1214,1215,1219,1220],onlin:[43,1177],onto:[857,886,887,902,1077,1121,1125,1130],oom:[857,1077],open:[931,934,1133,1137,1177,1223],opencv:1220,oper:[40,41,43,931,940,955,956,957,983,984,1012,1026,1029,1031,1033,1034,1035,1056,1057,1058,1158,1159,1160,1161,1162,1163,1164,1165,1167],operand:[40,41,815,816,817,819,820,821,826,828,832,833,1140,1141],oppos:[931,963],optim:[857,1026,1029,1031,1033,1034,1035,1073,1074,1075,1076,1077,1177,1211,1212,1213,1215,1219,1223],optimizer_upd:1026,option:[15,18,19,40,41,42,43,353,354,355,356,358,805,806,807,808,810,836,841,842,843,844,845,849,850,851,852,853,855,856,857,866,867,875,879,880,881,882,883,886,887,888,889,896,899,900,901,902,906,907,912,917,921,930,931,933,934,936,937,944,945,946,951,953,954,963,964,965,966,970,972,973,980,982,983,984,985,988,990,992,993,996,999,1000,1003,1005,1007,1008,1009,1010,1011,1019,1021,1022,1025,1026,1029,1031,1032,1033,1034,1035,1037,1042,1046,1049,1052,1054,1073,1074,1075,1076,1077,1121,1122,1123,1125,1129,1130,1133,1134,1140,1142,1143,1144,1145,1146,1147,1148,1150,1151,1155,1158,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1220],ord:[836,839,841],order:[40,41,42,43,836,841,842,843,847,848,1026,1029,1031,1033,1034,1035,1049,1052,1073,1074,1075,1216,1217],ordered_node_util_kei:1077,org:1223,organ:43,origin:[40,41,42,931,997,1025,1049,1052],other:[40,41,43,855,856,931,933,934,973,1026,1030,1133,1137,1177,1219,1220,1223],otherwis:[15,16,17,18,19,40,41,815,822,823,836,841,844,845,851,852,853,857,874,907,914,915,916,931,940,1019,1020,1023,1026,1032,1037,1041,1073,1074,1075,1077,1140,1142,1143,1144,1146,1148],our:[43,1177,1223],out:[43,455,805,807,809,810,811,812,813,815,816,817,818,819,820,821,822,823,824,826,827,828,829,830,832,833,836,837,838,841,842,843,844,845,847,848,851,852,853,931,934,1059,1062,1158,1166,1168,1177,1194,1202],out_feat_dim:[1158,1169],out_featur:[1158,1166,1167],out_i:[815,822,823],outdat:1223,outer:[1073,1074,1075,1076],outer_batch_fn:[1073,1074,1075],outer_batch_shap:[1158,1167],outer_cost_fn:[1073,1074,1075],outer_v:[1073,1074,1075],outlin:1220,output:[40,41,43,805,806,807,808,810,842,843,857,866,867,901,931,934,942,964,973,996,1014,1026,1030,1059,1063,1077,1133,1135,1136,1137,1158,1160,1162,1164,1166,1168,1169,1170,1177,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205],output_ax:[857,901,1077],output_axi:1077,output_channel:[1194,1195,1196,1197,1198,1199,1200,1203,1204],output_queu:1077,output_shap:[1158,1160,1162,1164,1194,1196,1198,1200],outsid:[931,943],over:[40,41,836,840,841,851,852,853,1049,1052,1133,1137,1140,1142,1143,1144,1146,1148,1175,1176,1208,1209],overal:1220,overflow:[931,934],overhead:1220,overrid:[931,992,1025],overriden:[1210,1214],overwrit:[40,41,857,901,1077],overwrite_at_key_chain:[40,41],own:[1177,1220,1223],packag:[43,1220],pad:[931,947,963,1024,1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201],pad_width:[407,931,947,1024],page:1177,pair:[1158,1170],parallel:[857,866,867,1077],parallelis:[857,866,867,1077],param:[40,41,42,407,420,421,805,806,808,844,845,849,850,857,901,931,932,965,966,992,993,1077,1206,1207,1219],paramet:[15,16,17,18,19,40,41,42,43,805,806,808,815,825,831,834,836,837,839,840,849,850,855,856,857,866,867,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,896,899,900,901,902,903,906,907,911,912,913,917,918,919,920,921,922,923,930,931,933,934,936,937,938,939,940,941,942,943,944,945,946,947,949,950,951,952,954,955,956,957,958,959,960,961,962,963,964,965,966,970,972,973,974,976,977,978,980,981,982,983,984,985,986,987,988,989,990,993,996,997,998,999,1000,1001,1002,1003,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1033,1034,1035,1037,1039,1040,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219],parameter:[1133,1136,1137],pardo:1177,pars:[931,948],part:[805,809,1026,1029,1031,1033,1034,1035,1059,1062,1177,1206,1207,1220],partial:[40,41,43,1206,1207],particl:1223,particular:[43,1223],pass:[40,41,42,43,857,866,901,907,912,931,942,1026,1040,1073,1074,1075,1077,1183,1184,1206,1207,1210,1214,1216,1217],pattern:[40,41,931,955,956,957],peopl:43,per:[857,1077,1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201],percent_used_mem_on_dev:857,percent_used_mem_on_nod:1077,percentag:[857,896,1077],perf_count:1077,perform:[40,41,43,851,852,853,857,931,936,951,955,956,957,976,977,978,982,983,984,1026,1029,1031,1033,1034,1035,1042,1043,1073,1074,1075,1076,1077,1121,1126,1127,1140,1142,1143,1144,1145,1146,1147,1148,1150,1155,1158,1166,1168],period:43,permissable_step:1077,permit:43,permut:[455,931,1013,1019],perpendicular:[931,950],person:[43,1177],physci:1223,pickl:[40,41,1077],pickle_filepath:[40,41],pinv:[316,745,1049],pip:1177,pipelin:1219,pkk:1223,pkkm1:1223,pkm1km1:1223,place:[40,41,43,805,806,807,808,810,857,902,931,960,964,976,977,978,1077,1210,1211,1212,1213,1214,1215],placehold:[43,1121,1130],pleas:[43,455,1049,1054],point:[43,804,805,806,807,810,811,812,815,816,817,819,820,821,826,828,832,833,834,836,841,907,922,931,934,1059,1066],popul:[40,41,1133,1134],popular:1223,population_s:[455,456,1133,1134],portabl:[1177,1178],posit:[15,16,17,811,812,815,822,851,852,853,857,879,883,889,931,932,934,960,963,1077,1133,1138,1183,1184],possibi:[40,41],possibl:[43,931,985,1016,1042,1047,1223],post:[1175,1176],post_shap:[40,41],power:[931,968,1001,1010,1185],practic:1177,pre:[857,1077,1177],pre_shap:[40,41],precis:[811,812,815,833],pred:[1171,1172,1173,1174],predict:[1171,1172,1173,1174,1223],preprint:1177,present:[40,41],preserv:[40,41,42,842,843,1026,1037],preserve_typ:[40,41,439,442,1026,1037],press:1177,prevent:[43,1026,1028,1029,1033,1077,1210,1211,1212],prevet:43,previou:[1026,1029,1033],previous:[931,942],prime:1177,print:[40,41,42,857,897,931,994,1177,1219],print_all_arrays_in_memori:931,print_all_arrays_on_dev:857,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1210,1214],prob:[455,456,1133,1134,1158,1166,1194,1202],probabl:[1133,1134,1158,1166,1194,1202],problem:[43,1223],process:[43,857,866,867,896,906,931,990,1077],process_specif:[857,896,906,1077],prod:[40,41,931,956],produc:[857,866,867,1077],product:[40,41,931,950,951,986,1140,1141,1158,1169,1170,1194,1205],profil:[129,253,405,532,663,857,1077],progress:43,project:[1177,1219,1220,1223],promot:[815,816,817,818,820,821,826,828,832,833,836,841,1059,1066],prompt:1177,properti:[40,41,359,857,869,1077,1206,1207,1210,1211,1212,1213,1215],provid:[40,41,43,842,843,844,845,851,852,853,855,856,857,874,907,914,915,916,921,930,931,954,992,1000,1025,1026,1029,1031,1033,1034,1035,1041,1077,1177,1194,1203,1210,1211,1212,1213,1214,1215,1220],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1049,1053],pull:[1177,1178],pure:[40,41,1177,1223],purpos:[43,1223],put:1077,pybroadexcept:1077,pyprotectedmemb:1077,pyshadowingnam:[858,908,909,910,1027,1077],python:[40,41,857,896,906,931,934,1077,1177],pytorch:[1026,1029,1031,1033,1034,1035,1049,1054,1177,1210,1211,1212,1213,1214,1215,1219,1220,1223],pyunresolvedrefer:1077,quadrant:[1059,1063],qualiti:43,queri:[40,41,857,890,900,1077,1158,1169,1170,1194,1205],query_dim:[1194,1205],query_kei:[40,41],queue:[40,41,42,857,866,867,931,995,1003,1077],queue_class:[857,866,867,1077],queue_load_s:[40,41,42],queue_timeout:[40,41,42,931,1077],quick:[455,1177],quickli:[43,1219],radian:[815,820,832,1059,1060,1061,1063,1071],rai:[1059,1060],rais:[40,41,851,852,853,931,940,968,1001,1008,1010,1020,1077,1206,1207,1210,1214],ram:[857,896,903,906,1077],randint:[180,325,455,589,767,1133],random:[37,40,41,456,1134,1135,1136,1137,1138,1139,1177],random_crop:1042,random_norm:[180,325,455,589,767,1133],random_uniform:[180,325,455,589,767,1133],randomli:[455,1042,1046,1158,1166,1194,1202],rang:[455,931,934,983,984,1059,1063,1077,1177,1219,1223],rank:[836,841,851,852,853,931,947,1021,1024],rate:[1026,1029,1031,1033,1034,1035,1073,1074,1075,1076,1194,1205,1210,1211,1212,1213,1214,1215],rather:[40,41,43,857,901,931,934,980,1026,1032,1077],ratio:[857,1026,1033,1042,1047,1077,1210,1212],raw:[40,41,1049,1054],raw_delta:1077,reach:[43,857,879,883,889,1077,1121,1130],read:[40,41],readi:[1077,1219],real:[1059,1060,1062],realiti:1220,rearrang:[40,41,931,955,957],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1073,1075],receiv:[43,857,866,867,931,935,985,1077,1194,1204],receivess:[857,1077],receivng:[1073,1076],recev:[1073,1074,1075],recognit:1223,recommend:[815,829,830,1177],rectifi:[1150,1152,1153],recurr:[1158,1168],recurrent_bia:[1158,1168],recurrent_kernel:[1158,1168],recurs:[40,41,1121,1122,1123,1129,1130],reduc:[40,41,844,845,851,852,853,857,901,931,956,1049,1054,1077,1140,1142,1143,1144,1145,1146,1147,1148],reduce_max:[40,41,187,330,457,594,774,1140],reduce_mean:[40,41,187,330,457,594,774,1140,1177,1219],reduce_min:[40,41,187,330,457,594,774,1140],reduce_prod:[40,41,187,330,457,594,774,1140],reduce_std:[40,41,330,1140],reduce_sum:[40,41,187,330,457,594,774,1077,1140],reduce_var:[40,41,187,330,457,594,774,1140],reduct:[39,40,41,407,432,433,851,852,853,931,956,999,1000,1141,1142,1143,1144,1145,1146,1147,1148,1177],refactor:43,refer:[43,815,827,851,852,853,1026,1028,1029,1049,1055,1194,1204,1223],reflect:43,reflected_oper:[0,13,14],regard:[857,1077],regardless:[40,41,855,856],register_paramet:1219,reimplement:1223,rel:[836,837,842,843,847,848,1026,1029,1031,1033,1034,1035],rel_slice_obj:1077,relat:43,relev:[1210,1211,1212,1213,1214,1215],relu:[783,1150,1151,1152,1177,1219],remain:[43,931,997,1121,1125],remaind:[40,41,931,962,1007],remov:[40,41,43,836,837,844,845,931,1008,1073,1074,1075],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,842,843],rep:[931,1014],repeat:[40,41,43,259,671,931,957,1014,1077,1220],repeated_config_check:[857,1077],repeatedli:[1121,1128],repetit:[40,41,931,996,1014],replac:[40,41,43,455,456,931,943,999,1000,1133,1134],repo:[43,1177],repositori:43,repres:[43,815,816,817,821,834,836,838,907,913,918,1158,1167],represent:[40,41,42,43,804,811,812,813,815,818,857,884,885,907,913,919,920,931,1006,1016,1077],reptil:[1073,1076],reptile_step:1073,request:[1177,1178],requir:[43,815,833,855,856,907,911,931,934,937,1183,1184],resampl:[931,982],reserv:43,reshap:[40,41,455,671,931],reshape_lik:[40,41],respect:[815,818,824,825,830,931,958,1026,1028,1029,1030,1031,1033,1034,1035,1049,1054,1059,1066,1073,1074,1075,1076],respond:43,respons:[43,1077],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,836,837,841,844,845,851,852,853,857,866,931,934,958,999,1000,1011,1049,1052,1056,1057,1058,1059,1066,1077,1140,1142,1143,1144,1145,1146,1147,1148,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1177],ret:1077,ret_dict:1077,ret_fn:[857,866,867,1077],retain:[1026,1030],retain_grad:[439,440,1026,1030],retreiv:1077,retrn:[931,1006],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1073,1074,1075,1076],return_sequ:[1194,1203],return_st:[1194,1203],rev:[931,954],revers:[40,41,842,843,931,954,1019],review:43,right:[40,41,43],rk_e:1223,robot:1177,ronald:1177,root:[43,815,833],round:[259,407,671,815,819,833,931,934,1077],row:[931,973,1133,1134],rule:[931,934,1059,1066],run:[43,857,866,1026,1028,1029,1033,1073,1074,1075,1076,1077,1177,1178,1194,1205,1206,1207],safe:[857,866,1077],safety_factor:[857,1077],same:[15,16,17,40,41,43,805,808,809,815,819,836,837,839,842,843,844,845,847,848,857,866,867,901,902,907,911,931,932,946,961,962,965,966,992,998,999,1000,1011,1025,1026,1032,1037,1059,1062,1073,1074,1075,1077,1140,1141,1158,1159,1160,1161,1162,1163,1164,1165,1177,1194,1195,1196,1197,1198,1199,1200,1201,1219,1223],same_arrai:[40,41],sampl:[931,982,1042,1043,1133,1134,1136,1137,1158,1166,1177,1194,1202],satisfi:[931,937,1049,1051,1055],save:[40,41,931,1004,1015,1042,1044,1206,1207],save_dir:[405,406,857,872,1077],save_weight:[1206,1207],scalar:[836,841,931,943,992,1018,1022],scale:[857,899,900,1026,1034,1077,1158,1166,1169,1170,1175,1176,1194,1202,1205,1210,1213],scaled_dot_product_attent:1158,scatter:[931,992,999,1000],scatter_flat:[136,259,407,539,671,931],scatter_nd:[136,259,407,539,671,931],scene:[1026,1029,1031,1033,1034,1035],schemat:1177,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[844,845],second:[40,41,815,818,824,825,830,836,837,840,857,888,931,938,950,958,995,1003,1013,1026,1028,1029,1033,1073,1075,1077,1210,1211,1212],secondli:1223,sector:[815,816,817],see:[59,359,405,406,455,815,818,824,830,836,841,851,852,853,857,869,870,871,872,907,931,934,983,984,1026,1059,1066,1177,1185,1187,1188,1190,1191,1193],seed:[40,41,180,455,767,1133],seed_valu:[40,41,455,1133,1138],seem:1177,seen_set:[931,971],select:[931,937,1008,1220,1223],self:[40,41,59,359,405,406,857,869,870,871,872,907,1026,1077,1177,1185,1187,1188,1190,1191,1193,1210,1214,1219,1223],sent:1077,seper:[43,931,963],seq:[40,41,42,1140,1141,1206,1207],sequenc:[15,16,17,40,41,42,43,455,836,840,855,856,857,866,867,876,877,878,879,880,881,882,883,886,887,901,907,911,931,934,937,939,941,946,947,973,985,988,993,996,997,1000,1007,1011,1014,1019,1024,1026,1030,1042,1046,1047,1049,1052,1077,1121,1132,1133,1135,1137,1140,1142,1143,1144,1145,1146,1147,1148,1158,1159,1160,1161,1162,1163,1164,1165,1175,1176,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1203,1206,1207,1208,1209,1210,1214,1216,1217],sequenti:1177,seri:43,set:[15,18,19,40,41,844,845,847,848,857,886,887,899,900,901,931,933,953,973,1001,1002,1003,1004,1026,1029,1031,1032,1033,1034,1035,1049,1052,1077,1121,1122,1129,1131,1132,1133,1134,1138,1140,1142,1143,1144,1145,1146,1147,1148,1177,1194,1203,1210,1211,1212,1213,1214,1215,1220,1223],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:857,set_default_dtyp:907,set_default_float_dtyp:907,set_default_int_dtyp:907,set_default_nod:1077,set_exception_debug_mod:44,set_framework:[40,41,43,59,1077,1177,1219,1220,1223],set_ivy_backend:[40,41],set_min_bas:931,set_min_denomin:931,set_nest_at_index:1121,set_nest_at_indic:1121,set_queue_timeout:931,set_split_factor:[857,1077],set_stat:[1210,1211,1212,1213,1214,1215],set_tmp_dir:931,set_with_grad:1026,setter:1077,sever:1223,sgd:[1177,1210],shape0:1077,shape:[40,41,43,353,354,355,358,407,419,433,455,671,805,806,807,808,809,810,836,837,842,843,844,845,847,848,857,869,907,911,931,932,941,946,947,960,961,962,964,966,970,973,992,993,996,997,998,999,1000,1006,1008,1011,1024,1025,1042,1046,1049,1051,1054,1059,1062,1063,1077,1133,1135,1136,1137,1140,1141,1158,1160,1162,1164,1194,1196,1197,1198,1199,1200,1201,1208,1209],shape_slic:[40,41],shape_to_tupl:931,share:[40,41,1177,1220],shift:1077,should:[40,41,42,43,455,805,809,815,816,817,818,819,820,821,822,823,824,826,828,829,830,832,833,834,836,837,840,841,844,845,855,856,857,931,941,942,948,992,997,1026,1029,1031,1033,1034,1035,1059,1066,1077,1140,1141,1177],show:[40,41,1177,1223],show_mod_in_top_mod:[1206,1207],show_structur:[1206,1207],show_sub_contain:[40,41],show_v:[1206,1207],show_v_in_top_v:[1206,1207],shown:[40,41],shp:1077,shuffl:[40,41,180,455,767,1133],shuffle_h5_fil:[40,41],side:43,sigmoid:[783,1150,1177,1219],sign:[836,838],signatur:[43,59,359,405,406,407,439,444,448,452,453,455,857,869,870,871,872,907,1026,1185,1187,1188,1190,1191,1193],signific:1223,similar:[43,1158,1169,1194,1205],similarli:[1049,1054],simpl:[43,931,959,1177,1220,1223],simpler:43,simplest:1220,simpli:[40,41,43,1177,1220,1223],simultan:1177,sin:[88,223,364,491,622,815,931,963,1059,1071,1220],sinco:1220,sine:[815,817,832,1059,1061,1070],singl:[40,41,855,856,857,866,867,886,887,888,889,931,1008,1018,1022,1042,1047,1077,1133,1136,1137,1140,1142,1143,1144,1145,1146,1147,1148,1177,1220,1223],singleton:[836,841,851,852,853],singular:[836,839],sinh:[755,1059],siren:[1177,1185],situat:43,size:[40,41,42,407,432,836,837,839,844,845,851,852,853,857,880,881,882,883,899,900,901,931,934,941,983,984,999,1007,1042,1046,1049,1052,1077,1133,1134,1136,1137,1140,1142,1143,1144,1145,1146,1147,1148,1194,1195,1196],size_ordered_arrai:[40,41],skew:[1049,1055],skinv:1223,skip:[40,41],slice:[40,41,931,965,966,1077,1121,1128],slice_kei:[40,41],slice_obj:[40,41,1077],slice_via_kei:[40,41],slide:[1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201],slodget:836,slogdet:[110,236,386,513,644],slope:[1150,1152],small:[1171,1172,1173,1174,1175,1176,1177,1208,1209,1220],smaller:[931,943],smallest:[40,41,811,812,813,815,819,931,936],smallest_norm:[359,811,812],softmax:[196,466,783,1150,1158,1169,1170],softplu:[783,1150],solut:43,solv:1223,some:[40,41,43,931,934,1026,1028,1029,1031,1033,1034,1035,1040,1158,1166,1177,1194,1202,1220,1223],some_backend:43,some_namespac:43,someth:[43,1223],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,836,839,848,1077],sort_by_kei:[40,41],sorting_funct:[847,848],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,353,354,355,356,357,358,359,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,805,806,807,808,809,810,811,812,813,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,845,847,848,849,850,851,852,853,855,856,857,859,860,861,862,863,864,866,867,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1180,1181,1182,1183,1184,1185,1187,1188,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1221,1222,1223],space:[931,934,963,983,984],spars:[1171,1174],sparse_cross_entropi:1171,spawn:[931,990],special:[43,815,816,817,819,820,821,826,828,832,833],specif:[40,41,43,815,829,830,836,840,857,899,931,948,955,956,957,990,1073,1074,1075,1076,1077,1133,1139,1177,1206,1207,1219,1220],specifc:[1133,1134],specifi:[40,41,805,806,807,809,810,836,837,840,841,842,843,844,845,847,848,851,852,853,857,876,877,878,879,880,881,882,883,886,887,891,893,897,900,901,902,907,911,913,931,934,936,937,943,946,947,964,965,966,972,983,984,1011,1021,1024,1049,1052,1077,1121,1126,1127,1131,1132,1140,1141,1142,1143,1144,1145,1146,1147,1148],sphinx:43,split:[40,41,136,259,407,539,671,857,866,880,881,882,883,899,900,901,931,985,1077],split_arg:1077,split_factor:[857,866,1077],split_func_cal:[857,1077],split_siz:1077,spread:[857,889,1077],sqrt:[88,223,364,491,622,815,836,841],squar:[815,833,836,838,931,973,1049,1051],squeez:[136,259,407,539,671,931],stabil:[847,848,931,1009,1010],stabl:[847,848,931,968,969,1001,1002,1009,1010],stable_divid:931,stable_pow:931,stack:[40,41,259,671,805,809,836,837,931,1042,1047,1121,1122,1129,1194,1203],stack_imag:[170,312,444,579,741,1042],stacked_dim_s:1077,stage:43,standard:[40,41,811,812,1133,1136,1140,1146,1175,1176,1177,1178,1208,1209],start:[40,41,43,405,406,407,408,429,430,455,857,872,931,934,983,984,1077,1177,1220],starting_index:[40,41],starting_split_factor:[857,1077],state:[1077,1158,1168,1177,1180,1181,1182,1183,1184,1185,1187,1188,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219],statement:1220,static_argnam:[407,412,855,856],static_argnum:[407,412,855,856],statistical_funct:[849,850],std:[455,1133,1136],step:[40,41,407,408,857,931,934,983,984,1026,1028,1029,1031,1033,1034,1035,1073,1074,1075,1076,1077,1177,1210,1211,1212,1213,1214,1215,1219,1223],stephen:1177,stick:1177,still:[40,41,43],stochast:[1210,1215],stop:[40,41,405,406,407,408,429,430,857,872,901,931,934,983,984,1026,1029,1031,1033,1034,1035,1037,1073,1074,1075,1076,1077,1210,1211,1212,1213,1214,1215],stop_gradi:[40,41,307,439,574,735,857,901,1026,1029,1031,1033,1034,1035,1073,1074,1075,1076,1077,1210,1211,1212,1213,1214,1215],stopiter:1077,store:[40,41,931,963,1007,1026,1040,1206,1207],store_var:[1206,1207],str:[15,16,17,40,41,42,43,353,354,355,356,358,359,361,362,805,808,811,812,813,855,856,857,866,867,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,901,907,912,913,918,919,920,921,922,923,930,931,937,953,955,956,957,988,990,993,999,1000,1049,1052,1054,1073,1074,1075,1076,1077,1121,1125,1140,1141,1183,1184,1194,1205,1206,1207],str_to_nod:1077,straight:1220,strength:[1177,1223],stride:[1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201],string:[40,41,43,857,873,875,884,885,890,896,902,903,906,907,911,917,919,920,921,930,931,934,937,953,973,993,1025,1077,1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201,1206,1207],structur:[40,41,42,43,931,948],structural_diff:[40,41],style:43,sub:[40,41,43,836,837,857,880,881,886,887,888,889,931,1007,1073,1074,1075,1076,1077],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1077,sub_mod:[1206,1207],sub_modul:[1216,1217],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1177,1178,1208,1209,1216,1217],subsequ:43,subset:43,substr:[40,41],suffici:[1049,1054],suggest:1177,suitabl:[1042,1047],sum:[40,41,407,432,433,836,841,857,886,887,888,889,901,931,952,956,999,1000,1077,1140,1141,1147],summat:[40,41,1140,1141],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,115,117,119,122,124,126,127,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,172,173,175,176,177,181,182,183,184,185,186,188,189,190,191,192,193,194,197,199,200,202,203,204,205,206,207,208,213,214,215,216,217,219,220,221,224,225,226,227,228,229,230,231,232,233,234,237,238,239,240,242,244,247,250,251,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,313,314,315,317,318,319,320,322,323,326,327,328,329,331,332,333,334,335,336,337,338,341,343,344,345,346,347,348,349,354,355,356,357,358,360,361,362,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,387,388,389,390,391,393,395,398,400,402,403,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,445,446,447,449,450,451,454,456,458,459,460,461,462,463,464,467,468,470,471,472,473,474,475,476,481,482,483,484,485,487,488,489,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,514,515,516,517,518,520,522,525,527,529,530,533,534,535,536,537,538,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,575,576,577,578,580,581,582,584,585,586,590,591,592,593,595,596,597,598,599,600,601,605,606,607,612,613,614,615,616,618,619,620,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,645,646,647,648,649,651,653,656,658,660,661,664,665,666,667,668,669,670,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,736,737,738,739,740,742,743,744,746,747,748,749,750,751,753,754,756,757,758,759,760,761,762,763,764,765,766,768,769,770,771,772,773,775,776,777,778,779,780,781,784,785,786,787,788,789,790,792,793,795,796,797,798,799,800,801,806,807,808,809,810,812,813,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,841,843,845,848,850,852,853,856,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1057,1058,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1074,1075,1076,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1134,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1176,1177,1181,1182,1184,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1222,1223],supports_inplac:931,suppos:1223,sure:43,svd:[110,236,386,513,644,836],swap:[40,41,931,1013],swapax:[40,41,539,671,931,1223],symmetr:[1049,1055],syntax:[405,407,439,444,448,452,453,455],tab:1177,take:[43,931,982],taken:[43,836,837,1140,1142,1143,1144,1146,1148],tan:[755,1059,1062],tangent:[815,834,1059,1062,1063,1064,1071,1072,1150,1157],tanh:[88,223,364,491,622,783,815,1059,1150],target:[40,41,857,873,876,877,878,879,880,881,882,883,886,887,888,889,902,1077,1177],target_dict:[40,41],task:[43,1073,1074,1075,1076],team:[43,1223],templat:1177,temporari:[931,1004,1015],tensor:[40,41,43,407,432,433,836,840,857,875,907,917,931,934,936,941,983,984,987,989,992,993,997,999,1000,1007,1025,1077,1133,1134,1135,1158,1166,1168,1177,1194,1202,1204,1210,1211,1212,1213,1214,1215,1219,1220],tensordot:[110,386,513,644,836],tensorflow:[43,1049,1054,1158,1160,1162,1164,1177,1194,1196,1198,1200,1220,1223],term:[40,41,43,1158,1168,1177,1194,1204],termcolor:[40,41,42],termin:[40,41,42,1077],test:[43,815,822,823,851,852,853,907,922,923],test_array_api:43,tf_concat:1177,than:[40,41,43,811,812,815,816,819,826,828,833,836,841,842,843,857,901,931,934,943,961,980,987,1008,1011,1026,1032,1077,1133,1137,1177,1220],thei:[40,41,1059,1063,1073,1074,1075,1133,1134,1177,1216,1217,1220],them:[1177,1223],themselv:[1121,1122],therefor:43,thi:[40,41,42,43,815,829,830,836,838,844,845,857,879,883,889,896,901,906,931,934,963,995,997,1003,1026,1029,1031,1032,1033,1034,1035,1040,1049,1052,1077,1121,1125,1130,1140,1142,1143,1144,1145,1146,1147,1148,1158,1167,1177,1206,1207,1210,1211,1212,1213,1214,1215,1219,1220,1223],thing:[43,1177],those:[40,41,43,836,839,931,943,1026,1040,1077],though:43,thought:43,threshold:[931,987,989],through:[40,41,43],tick:43,tickbox:43,tile:[259,539,671,931],time:[43,931,1014,1026,1029,1033,1073,1074,1075,1076,1077,1133,1134,1158,1168,1194,1205,1206,1207,1223],timeout:[40,41,42,857,866,867,931,995,1003,1077],timestep:[1158,1168,1194,1203],titl:[43,1177],tmp_dir:931,tmp_dr:[931,1004],to_appli:[40,41],to_clon:[857,1077],to_dev:[40,41,129,253,405,532,663,857],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[857,1077],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1177],to_ivy_modul:[198,791,1177,1183],to_json:[40,41],to_kv_fn:[1158,1169],to_kv_v:[1158,1169],to_list:[40,41,407,671,931],to_multi_dev:[40,41],to_mut:[1121,1123,1130],to_n:[15,40,41,1177],to_nod:1077,to_numpi:[40,41,407,671,931,1177,1219],to_out_fn:[1158,1169],to_out_v:[1158,1169],to_q_fn:[1158,1169],to_q_v:[1158,1169],to_raw:[40,41],to_scalar:[407,671,931],todo:[1077,1177,1178],togeth:[40,41,1216,1217],tool:[1177,1220],top_mod:[1206,1207],topic:1223,torch:[43,855,856,1177,1219,1220,1223],torch_concat:1177,torchfcmodel:1219,total:[40,41,42,857,903,1077],total_mem_on_dev:857,total_mem_on_nod:1077,tpu:[857,904,1077],tpu_is_avail:[405,532,663,857,1077],trace:[40,41,931,980],track:[43,857,1077,1121,1130,1206,1207],track_submod_call_ord:[1206,1207],track_submod_ret:[1206,1207],trail:[1208,1209],train:[1026,1028,1029,1033,1177,1178],trainabl:[1026,1032,1177,1178,1183,1184,1206,1207,1216],trainer:1177,tran:1223,transform:[1158,1166,1167],transpos:[40,41,136,259,407,671,857,888,931,1077,1158,1160,1162,1164,1194,1196,1198,1200],travers:[15,18,19,40,41,1121,1130],treat:[40,41,855,856],tri:[40,41],triangular:[805,809],trigonometr:[1059,1060,1062],tril:[77,212,353,480,611,805],trim_kei:[40,41],trust:[1026,1033,1210,1212],truth:[815,824,825,931,958,1056,1057,1058],try_else_non:931,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[857,1077],tune_dev_alloc:857,tune_dev_split:857,tune_node_alloc:1077,tune_node_split:1077,tune_step:[857,1077],tupl:[15,16,17,18,19,40,41,43,353,354,355,358,805,806,807,810,836,839,840,841,842,843,849,850,851,852,853,855,856,931,947,963,964,1006,1024,1077,1121,1122,1123,1124,1126,1127,1128,1129,1130,1131,1132,1133,1135,1140,1142,1143,1144,1145,1146,1147,1148],tutori:43,two:[40,41,805,809,836,837,838,839,931,934,938,950,986,1013,1049,1052],type:[15,18,40,41,42,43,59,361,362,405,406,805,806,807,808,809,810,812,813,815,816,817,818,819,820,821,822,823,824,825,826,828,829,830,832,833,834,836,837,840,841,842,843,847,848,851,852,853,857,869,870,871,872,884,885,889,901,907,911,912,913,917,918,919,920,921,922,923,930,931,932,934,937,946,948,958,961,962,964,973,980,992,993,998,1012,1022,1025,1026,1032,1037,1059,1066,1077,1177,1185,1187,1188,1190,1191,1193,1206,1207,1220],types_to_iteratively_nest:[40,41,42],uint8:[1042,1044,1048],uint8_img_to_float_img:1042,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[815,818],underwai:43,unecessari:43,unfairli:43,unif:1077,unifi:[40,41,857,886,887,888,889,901,1077,1177],uniform:[40,41,1133,1134,1136,1137,1185,1187,1188,1191,1192],uniformli:[1133,1135,1137],unify_arrai:1077,unify_it:1077,unify_nest:1077,uniniti:[805,806],union:[15,18,19,40,41,43,353,354,355,356,358,359,361,362,805,806,807,808,809,810,811,812,813,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,838,839,840,841,842,843,844,845,847,848,849,850,851,852,853,855,856,857,875,880,881,882,883,901,902,907,911,912,913,917,918,919,920,921,922,923,930,931,932,933,934,936,937,938,939,941,943,944,945,946,947,949,950,951,952,955,956,957,958,960,961,962,963,964,965,966,970,972,973,974,981,982,983,984,986,987,988,989,992,993,996,997,998,999,1000,1005,1006,1007,1008,1011,1013,1014,1016,1017,1018,1019,1021,1022,1023,1024,1025,1077,1121,1122,1123,1129,1130],uniqu:[857,866,867,1073,1074,1075,1076,1077,1121,1125],unique_kwarg:1077,unit:[43,857,1059,1060,1061,1077,1150,1151,1152,1153],unitari:[836,839],unless:[931,992,1025],unlik:[857,1077],unnorm:[1133,1134],unpack:[931,1021],unrol:[1158,1168],unset:1220,unset_debug_mod:44,unset_default_devic:857,unset_default_dtyp:907,unset_default_float_dtyp:907,unset_default_int_dtyp:907,unset_framework:[59,1220],unset_with_grad:1026,unstack:[40,41,136,259,407,539,671,931],until:43,unus:[855,856],updat:[40,41,407,432,433,857,866,931,978,999,1000,1026,1028,1029,1031,1033,1034,1035,1073,1074,1075,1077,1121,1126,1127,1131,1132,1158,1168,1177,1178,1183,1184,1210,1211,1212,1213,1214,1215,1220,1223],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1133,1137],upper_depth:[1206,1207],upstream:43,usabl:[1177,1223],usag:[857,901,1077],use:[40,41,42,43,455,857,866,867,892,904,931,996,1009,1010,1049,1054,1077,1158,1169,1175,1176,1177,1208,1209,1220,1223],used:[40,41,43,455,836,837,857,866,896,899,900,906,907,918,931,968,969,985,999,1000,1001,1002,1025,1026,1033,1034,1049,1052,1073,1074,1075,1076,1077,1121,1130,1194,1205,1210,1212,1213,1219,1220],used_dev:[857,866],used_mem_on_dev:857,used_mem_on_nod:1077,used_node_str:1077,used_node_strs_dict:1077,useful:[40,41,857,901,1077,1158,1167,1177,1220],user:[1177,1194,1205,1206,1207,1220,1223],uses:1177,using:[40,41,43,1026,1028,1029,1121,1124,1128,1140,1141,1158,1166,1170,1177,1194,1202,1219,1220,1223],util:[857,890,1077],utility_funct:[851,852,853],v_with_top_v_key_chain:[1206,1207],val:[40,41,407,424,425,426,931,976,977,978,1001,1002],valid:[851,852,853,907,912,931,1009,1010,1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201],valid_dtyp:907,valu:[40,41,407,815,819,824,825,836,838,839,841,844,845,847,848,849,850,857,869,900,901,931,932,934,936,943,944,945,947,948,954,958,963,964,965,966,981,983,984,987,989,995,996,997,998,999,1000,1001,1002,1003,1019,1022,1023,1024,1026,1030,1033,1042,1048,1056,1057,1058,1059,1067,1068,1069,1073,1074,1075,1077,1121,1125,1126,1127,1131,1132,1133,1136,1137,1140,1142,1144,1158,1169,1170,1175,1176,1194,1205,1208,1209,1210,1212],value_is_nan:931,vanilla:[1073,1075],var_shap:1185,variabl:[15,16,17,18,19,40,41,307,439,574,735,931,940,976,977,978,979,980,1012,1026,1029,1030,1031,1032,1033,1034,1035,1037,1040,1073,1074,1075,1076,1158,1169,1175,1176,1183,1184,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],variable_data:[439,735,1026],varianc:[40,41,1140,1148,1223],varieti:1220,variou:[43,1177],vector:[40,41,448,451,836,839,841,931,945,950,1049,1055,1158,1167,1194,1204],vector_norm:[40,41,110,236,386,513,644,836],vector_to_skew_symmetric_matrix:[174,316,448,583,745,1049],verbos:1222,veri:[43,1177],verifi:43,via:[1121,1122,1129,1220],view:[1042,1047],vision:1177,visual:1220,volum:[1158,1163],vw_tm1:[1026,1029,1033],wai:[1220,1223],wait:[40,41,42,43],want:[43,1177,1220,1223],warn:[59,66,67,68,69,70],warp:[444,445,1042,1043],watch:1219,websit:43,weight:[1026,1028,1029,1031,1033,1034,1035,1158,1167,1168,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1206,1207,1210,1212,1213],weight_initi:[1194,1195,1196,1197,1198,1199,1200,1201,1203,1204],weights_path:[1206,1207],well:[40,41,931,972],were:[40,41,1077],what:[43,1177],when:[40,41,42,43,836,839,857,931,942,1010,1023,1077,1177,1206,1207,1220,1223],where:[40,41,43,259,407,671,815,827,836,839,851,852,853,931,934,941,943,947,960,974,981,992,1024,1121,1122,1129,1133,1134],wherea:43,wherebi:[1121,1130],whether:[15,18,19,40,41,42,815,823,851,852,853,855,856,857,875,888,892,896,901,904,906,907,917,921,922,923,930,931,933,938,939,951,954,959,963,970,972,975,979,980,985,1005,1012,1021,1022,1026,1029,1030,1031,1032,1033,1034,1035,1037,1073,1074,1075,1076,1077,1121,1122,1123,1125,1129,1130,1133,1134,1150,1151,1158,1166,1177,1183,1184,1194,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],which:[40,41,42,43,455,805,806,807,808,809,810,811,812,813,836,837,841,842,843,844,845,847,848,849,850,851,852,853,855,856,857,866,867,875,880,881,882,883,886,887,888,889,891,893,897,899,900,901,907,912,917,921,930,931,934,937,946,948,950,951,952,954,964,965,966,967,973,974,982,983,984,991,992,993,994,996,999,1000,1007,1011,1021,1023,1025,1026,1029,1030,1031,1033,1034,1035,1037,1039,1040,1042,1044,1049,1052,1059,1063,1077,1121,1125,1126,1127,1131,1132,1133,1134,1135,1136,1137,1140,1142,1143,1144,1145,1146,1147,1148,1150,1155,1158,1169,1170,1177,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217,1219,1220],whilst:43,whitespac:[40,41,42],who:43,whose:[805,809,815,816,817,820,821,832,834,836,837,842,843,931,937,942,1140,1141,1142,1143,1144,1146,1148],why:[1177,1178],width:[1042,1047],wiki:1223,wikipedia:1223,window:[1042,1047,1158,1159,1160,1161,1162,1163,1164,1165,1194,1195,1196,1197,1198,1199,1200,1201],wise:[40,41,815,818,824,825,829,830,931,943,958,961,962,987,989,998,1026,1029,1031,1033,1035,1056,1057,1058,1059,1060,1061,1062,1063,1066,1067,1068,1069,1071,1150,1151,1152,1153,1154,1155,1156,1157],wish:1220,with_bia:[1194,1204],with_cal:[931,954],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1026,1036],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1077,with_partial_v:[1206,1207],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,407,434,931,1007,1077],with_to_kv_fn:[1194,1205],with_to_out_fn:[1194,1205],with_to_q_fn:[1194,1205],within:[15,18,19,43,836,839,931,934,1133,1137],without:[40,41,43,931,995,997,1003,1121,1123,1220],wonder:1177,word:[15,16,17,931,934,1133,1137,1183,1184],work:[43,1219],worker:[857,866,867,1077],worker_class:[857,866,867,1077],worker_kwarg:1077,would:[43,1150,1155,1177,1220,1223],wrap:[15,40,41,42,43,405,407,439,444,448,452,453,455,931,942,1026,1040,1177],write:[40,41,43,1177,1178,1223],written:[43,1177,1223],ws_new:[1026,1029,1031,1033,1034,1035],x1_i:[815,818,824,825,830,931,958,1059,1066],x2_i:[815,818,824,825,830,931,958,1059,1066],x_feat_dim:[1158,1169],x_i:[815,816,817,819,820,821,822,823,826,828,829,832,833,834],x_in:[1177,1219],x_inv:[1049,1051],x_max:[407,931,943],x_min:[407,931,943],x_sub:1077,xkk:1223,xkkm1:1223,xkm1km1:1223,xs0:1077,xs_t:1077,year:[1177,1223],yet:[1121,1130,1223],yield:[931,1023],you:[43,1177,1219,1220,1223],your:[1177,1178,1219,1220,1223],your_awesome_project:1220,yourself:[43,1177],yourslef:43,youtub:43,zero:[40,41,77,212,353,480,611,805,806,809,815,829,830,836,841,851,852,853,931,947,992,999,1000,1024,1025,1026,1028,1029,1033,1034,1158,1166,1177,1185,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1210,1211,1212,1213],zero_pad:[259,407,539,671,931],zeros_lik:[136,259,407,539,671,931],zip:1077,zk_e:1223},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","tensordot","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","tensordot","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","tensordot","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","tensordot","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slodget","svd","tensordot","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":954,"function":[77,83,88,109,116,118,120,121,123,125,212,218,223,235,241,243,245,246,248,249,353,359,364,385,392,394,396,397,399,401,480,486,491,512,519,521,523,524,526,528,611,617,622,643,650,652,654,655,657,659,805,811,815,835,842,844,846,847,849,851],Ones:1190,Using:1220,abs:[260,540,672,932],aco:[756,1060],acosh:[89,224,365,492,623,816],activ:[196,340,466,603,783,1150,1180],adam:1211,adam_step:1028,adam_upd:1029,algebra:[110,174,236,316,386,448,513,583,644,745,836],all:[126,250,402,529,660,852],all_equ:933,all_nested_indic:1122,ani:[127,251,403,530,661,853],api:[0,43,75,210,351,478,609,803],arang:[137,261,408,541,673,934],arg_nam:935,argmax:[119,244,395,522,653,845],argmin:[138,409,542,674,936],args_to_ivi:16,args_to_n:17,argsort:[122,247,398,525,656,848],arithmet:1,arrai:[0,3,43,75,139,210,262,351,410,478,543,609,675,803,937],array_equ:[263,676,938],arrays_equ:939,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[757,1061],asinh:[90,366,493,624,817],assert_supports_inplac:940,atan2:[759,1063],atan:[758,1062],atanh:[760,1064],attribut:5,backend:[43,73],bilinear_resampl:[171,313,445,580,742,1043],binary_cross_entropi:1172,bitwis:7,bitwise_and:[91,225,367,494,625,818],broadcast_to:[264,677,941],builder:51,cache_fn:942,cast:[140,265,411,544,678,911],ceil:[92,226,368,495,626,819],choleski:[746,1050],choose_random_framework:61,citat:1177,clear_framework_stack:62,clear_mem_on_dev:[665,873],clip:[266,679,943],clip_matrix_norm:944,clip_vector_norm:945,clone:1092,clone_arrai:1093,clone_it:1094,clone_nest:1095,clonedit:1079,cloneditem:1078,clonednest:1080,closest_valid_dtyp:912,code:1223,comparison:9,compil:[267,412,680,855,856],concaten:[141,268,413,545,681,946],constant:[76,211,352,479,610,804],constant_pad:[269,546,682,947],contain:[40,41],container_typ:[683,948],content:1177,contribut:43,conv1d:[202,343,470,795,1159,1195],conv1d_transpos:[203,344,471,796,1160],conv1dtranspos:1196,conv2d:[204,345,472,605,797,1161,1197],conv2d_transpos:[205,346,473,798,1162],conv2dtranspos:1198,conv3d:[206,347,474,606,799,1163,1199],conv3d_transpos:[207,348,475,800,1164],conv3dtranspos:1200,convers:15,convert:[198,791,1183],convert_dtyp:913,copy_arrai:[684,949],copy_nest:1123,core:[128,252,404,531,662,854],cos:[93,369,496,627,820],cosh:[94,370,497,628,761,821,1065],cprint:1222,creat:43,creation:[77,212,353,480,611,805],cross:[270,685,950],cross_entropi:1173,cumprod:[142,271,414,686,951],cumsum:[687,952],current_framework:63,current_framework_str:[688,953],data:[83,87,218,222,359,363,486,490,617,621,811,814],debug_mod:45,debugg:44,default_devic:874,default_dtyp:914,default_float_dtyp:915,default_int_dtyp:916,default_nod:1096,depthwise_conv2d:[208,349,476,607,801,1165],depthwiseconv2d:1201,design:43,dev:[131,255,534,666,875],dev_clon:876,dev_clone_arrai:877,dev_clone_it:878,dev_clone_nest:879,dev_dist:880,dev_dist_arrai:881,dev_dist_it:882,dev_dist_nest:883,dev_from_str:[132,256,535,667,884],dev_to_str:[133,257,536,668,885],dev_unifi:886,dev_unify_arrai:887,dev_unify_it:888,dev_unify_nest:889,dev_util:890,devclonedit:860,devcloneditem:859,devclonednest:861,devdistit:863,devdistitem:862,devdistnest:864,devic:[20,129,253,405,532,663,857],devmapp:866,devmappermultiproc:867,diagon:[111,237,387,514,645,837],distribute_nest:1097,divid:1066,document:1177,dropout:[1166,1202],dtype:[143,272,415,547,689,907,917],dtype_bit:[144,273,416,548,690,918],dtype_from_str:[145,274,417,549,691,919],dtype_to_str:[146,275,418,550,692,920],ecosystem:52,einops_rearrang:955,einops_reduc:956,einops_repeat:957,einsum:[188,331,458,595,775,1141],elementwis:[88,223,364,491,622,815],empti:[78,213,354,481,612,806],equal:[95,371,498,629,958],erf:[454,762,1067],execute_with_gradi:[168,308,440,575,736,1030],exist:959,exp:[763,1068],expand_dim:[276,693,960],finfo:[85,220,361,488,619,812],firstlayersiren:1187,flip:[117,242,393,520,651,843],float_img_to_uint8_img:1044,floor:[277,694,961],floormod:[278,695,962],fomaml_step:1074,fork:43,fourier_encod:963,framework:59,full:[147,279,419,551,696,964],func:72,gather:[148,280,420,552,697,965],gather_nd:[149,281,421,553,698,966],geglu:1181,gelu:[341,467,784,1151,1182],gener:[22,136,259,407,539,671,931],get_all_arrays_in_memori:967,get_all_arrays_on_dev:891,get_framework:64,get_min_bas:968,get_min_denomin:969,get_num_dim:[699,970],get_referrers_recurs:971,glorotuniform:1188,gpu_is_avail:[892,1098],gradient:[24,167,307,439,574,735,1026],gradient_descent_upd:1031,gradient_imag:[172,314,446,581,743,1045],gym:53,handler:59,has_nan:972,ident:[150,282,422,554,700,973],iinfo:[86,221,362,489,620,813],imag:[26,170,312,444,579,741,1042],index_nest:1124,indices_wher:[151,283,423,701,974],initi:1185,inplac:11,inplace_arrays_support:975,inplace_decr:[152,284,424,555,702,976],inplace_incr:[153,285,425,556,703,977],inplace_upd:[154,286,426,557,704,978],inplace_variables_support:979,inv:[747,1051],invalid_dtyp:921,is_arrai:[155,287,427,558,705,980],is_float_dtyp:922,is_int_dtyp:923,is_vari:[169,309,441,576,737,1032],isfinit:[96,227,372,499,630,822],isinf:[288,559,706,981],isnan:[97,228,373,500,631,823],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,802,1219,1220,1223],ivymodul:[199,792],jax:74,keep:43,lamb:1212,lamb_upd:1033,lar:1213,lars_upd:1034,layer:[201,342,469,604,794,1158,1194],layer_norm:1176,layernorm:1209,leaky_relu:[785,1152],less:[98,229,374,501,632,824],less_equ:[99,375,502,633,825],linalg:[28,1049],linear:[110,174,236,316,386,448,513,583,644,745,836,1167,1204],linear_resampl:[156,289,428,560,707,982],linspac:[157,290,429,561,708,983],list:43,log10:[100,376,503,634,826],log1p:[101,377,504,635,827],log2:[102,378,505,636,828],log:[764,1069],logic:[30,178,321,452,587,752,1056],logical_and:[322,753,1057],logical_not:[103,230,379,506,637,829],logical_or:[104,323,380,507,638,754,830,1058],logspac:[158,291,430,562,709,984],loss:1171,lstm:1203,lstm_updat:1168,maml_step:1075,manipul:[116,241,392,519,650,842],map:1125,map_nest_at_index:1126,map_nest_at_indic:1127,match_kwarg:985,math:[32,179,324,453,588,755,1059],matmul:[292,563,710,986],matrix_norm:[175,317,449,584,748,1052],maximum:[711,987],mech:54,memori:55,meshgrid:[293,712,988],meta:[34,1073],method:[109,235,385,512,643,835],min:[124,400,527,658,850],minimum:[713,989],model:56,modul:[1206,1207,1219],multi:1077,multi_head_attent:1169,multi_index_nest:1128,multidevcontain:42,multidevit:870,multidevitem:869,multidevnest:871,multiheadattent:1205,multinodeit:1083,multinodeitem:1082,multinodenest:1084,multinomi:[181,326,456,590,768,1134],multiprocess:[714,990],mxnet:209,nativ:1219,neg:[105,231,381,508,639,831],nest:1121,nested_indices_wher:1129,nested_map:1130,network:1219,next:1177,node:[1077,1099],node_dist:1100,node_dist_arrai:1101,node_dist_it:1102,node_str:1103,node_to_str:1104,node_util:1105,nodedistit:1086,nodedistitem:1085,nodedistnest:1087,nodemapp:1089,nodemappermultiproc:1090,norm:[1175,1208],num_arrays_in_memori:991,num_arrays_on_dev:893,num_cpu_cor:894,num_gpu:[134,895,1106],numpi:350,nutshel:1177,one_hot:[159,431,564,715,992],ones:[79,214,355,482,613,807,993],ones_lik:[80,215,356,483,614,808],oper:[1,3,7,9,11,13],optim:[1210,1214],optimizer_upd:1035,overview:1177,percent_used_mem_on_dev:896,percent_used_mem_on_nod:1107,pinv:[318,749,1053],portabl:1223,print_all_arrays_in_memori:994,print_all_arrays_on_dev:897,profil:[130,254,406,533,664,872,1091],pull:43,queue_timeout:995,randint:[182,327,591,769,1135],random:[36,180,325,455,589,767,1133],random_crop:1046,random_norm:[183,328,592,770,1136],random_uniform:[184,329,593,771,1137],reduce_max:[189,332,459,596,776,1142],reduce_mean:[190,333,460,597,777,1143],reduce_min:[191,334,461,598,778,1144],reduce_prod:[192,335,462,599,779,1145],reduce_std:[336,1146],reduce_sum:[193,337,463,600,780,1147],reduce_var:[194,338,464,601,781,1148],reduct:[38,187,330,457,594,774,1140],reflect:13,relu:[786,1153],repeat:[294,716,996],reptile_step:1076,request:43,reshap:[717,997],robot:57,round:[295,718,998],run:1220,scaled_dot_product_attent:1170,scatter_flat:[160,296,432,565,719,999],scatter_nd:[161,297,433,566,720,1000],search:[118,243,394,521,652,844],seed:[185,772,1138],sequenti:[1216,1217],set:[120,245,396,523,654,846],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:898,set_default_dtyp:924,set_default_float_dtyp:925,set_default_int_dtyp:926,set_default_nod:1108,set_exception_debug_mod:48,set_framework:65,set_min_bas:1001,set_min_denomin:1002,set_nest_at_index:1131,set_nest_at_indic:1132,set_queue_timeout:1003,set_split_factor:[899,1109],set_tmp_dir:1004,set_with_grad:1036,sgd:1215,shape:[721,1005],shape_to_tupl:1006,shuffl:[186,773,1139],sigmoid:[787,1154],signatur:[109,235,385,512,643,835],sin:[106,232,382,509,640,832],sinh:[765,1070],siren:1191,slodget:838,slogdet:[112,238,388,515,646],softmax:[197,468,788,1155],softplu:[789,1156],sort:[121,246,397,524,655,847],sparse_cross_entropi:1174,split:[162,298,434,567,722,1007],split_factor:[900,1110],split_func_cal:[901,1111],sqrt:[107,233,383,510,641,833],squeez:[163,299,435,568,723,1008],stable_divid:1009,stable_pow:1010,stack:[300,724,1011],stack_imag:[173,315,447,582,744,1047],standard:43,statist:[123,248,399,526,657,849],stop_gradi:[310,442,577,738,1037],str_to_nod:1112,submodul:43,supports_inplac:1012,svd:[113,239,389,516,647,839],swapax:[569,725,1013],tan:[766,1071],tanh:[108,234,384,511,642,790,834,1072,1157],tensordot:[114,390,517,648,840],tensorflow:477,tile:[301,570,726,1014],tmp_dir:1015,to_dev:[135,258,537,669,902],to_ivi:18,to_ivy_modul:[200,793,1184],to_list:[727,1016],to_n:19,to_nod:1113,to_numpi:[728,1017],to_scalar:[729,1018],todo:43,torch:608,total_mem_on_dev:903,total_mem_on_nod:1114,tpu_is_avail:[538,670,904,1115],train:1219,trainabl:1219,transpos:[164,302,436,730,1019],tree:1177,tril:[81,216,357,484,615,809],try_else_non:1020,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,218,222,359,363,486,490,617,621,811,814],uint8_img_to_float_img:1048,unifi:1116,unify_arrai:1117,unify_it:1118,unify_nest:1119,unset_debug_mod:49,unset_default_devic:905,unset_default_dtyp:927,unset_default_float_dtyp:928,unset_default_int_dtyp:929,unset_framework:71,unset_with_grad:1038,unstack:[165,303,437,571,731,1021],updat:43,used_mem_on_dev:906,used_mem_on_nod:1120,util:[125,249,401,528,659,851],valid_dtyp:930,value_is_nan:1022,variabl:[311,443,578,739,1039],variable_data:[740,1040],vector_norm:[115,240,391,518,649,841],vector_to_skew_symmetric_matrix:[177,320,451,586,751,1055],verbos:1221,vision:58,where:[304,732,1023,1177],why:1223,with_grad:1041,wrapper:72,write:1220,your:43,zero:[82,217,358,485,616,810,1193],zero_pad:[305,572,733,1024],zeros_lik:[166,306,438,573,734,1025]}})